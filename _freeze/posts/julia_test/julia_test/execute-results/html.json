{
  "hash": "ba7d5e3010d29f6c5e67ca8a56a83b99",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Julia Testing\"\nformat:\n  html:\n    reference-location: block\neditor_options: \n  chunk_output_type: console\nengine: julia\n---\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\n1 + 2\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n3\n```\n:::\n:::\n\n\n\n\n\n\n### Parametric Plots\n\nPlot function pair (x(u), y(u)). \nSee @fig-parametric for an example.\n\n\n\n\n::: {#fig-parametric .cell execution_count=1}\n``` {.julia .cell-code}\nusing Plots\n\nplot(sin, \n     x->sin(2x), \n     0, \n     2Ï€, \n     leg=false, \n     fill=(0,:lavender))\n```\n\n::: {.cell-output .cell-output-error}\n```\nArgumentError: ArgumentError(\"Package Plots not found in current path.\\n- Run `import Pkg; Pkg.add(\\\"Plots\\\")` to install the Plots package.\")\nArgumentError: Package Plots not found in current path.\n- Run `import Pkg; Pkg.add(\"Plots\")` to install the Plots package.\nStacktrace:\n  [1] macro expansion\n    @ .\\loading.jl:2296 [inlined]\n  [2] macro expansion\n    @ .\\lock.jl:273 [inlined]\n  [3] __require(into::Module, mod::Symbol)\n    @ Base .\\loading.jl:2271\n  [4] #invoke_in_world#3\n    @ .\\essentials.jl:1089 [inlined]\n  [5] invoke_in_world\n    @ .\\essentials.jl:1086 [inlined]\n  [6] require(into::Module, mod::Symbol)\n    @ Base .\\loading.jl:2260\n  [7] eval\n    @ .\\boot.jl:430 [inlined]\n  [8] (::QuartoNotebookWorker.var\"#15#16\"{Module, Expr})()\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:222\n  [9] (::QuartoNotebookWorker.Packages.IOCapture.var\"#5#9\"{DataType, QuartoNotebookWorker.var\"#15#16\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, Base.TTY, IOContext{Base.PipeEndpoint}})()\n    @ QuartoNotebookWorker.Packages.IOCapture C:\\Users\\Andrew\\.julia\\packages\\IOCapture\\Y5rEA\\src\\IOCapture.jl:170\n [10] with_logstate(f::QuartoNotebookWorker.Packages.IOCapture.var\"#5#9\"{DataType, QuartoNotebookWorker.var\"#15#16\"{Module, Expr}, IOContext{Base.PipeEndpoint}, IOContext{Base.PipeEndpoint}, Base.TTY, IOContext{Base.PipeEndpoint}}, logstate::Base.CoreLogging.LogState)\n    @ Base.CoreLogging .\\logging\\logging.jl:522\n [11] with_logger(f::Function, logger::Base.CoreLogging.ConsoleLogger)\n    @ Base.CoreLogging .\\logging\\logging.jl:632\n [12] capture(f::QuartoNotebookWorker.var\"#15#16\"{Module, Expr}; rethrow::Type, color::Bool, passthrough::Bool, capture_buffer::IOBuffer, io_context::Vector{Pair{Symbol, Any}})\n    @ QuartoNotebookWorker.Packages.IOCapture C:\\Users\\Andrew\\.julia\\packages\\IOCapture\\Y5rEA\\src\\IOCapture.jl:167\n [13] capture\n    @ C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:248 [inlined]\n [14] io_capture(f::Function; cell_options::Dict{Any, Any}, kws::@Kwargs{rethrow::DataType, color::Bool, io_context::Vector{Pair{Symbol, Any}}})\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:250\n [15] io_capture\n    @ C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:246 [inlined]\n [16] include_str(mod::Module, code::String; file::String, line::Int64, cell_options::Dict{Any, Any})\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:201\n [17] #invokelatest#2\n    @ .\\essentials.jl:1057 [inlined]\n [18] invokelatest\n    @ .\\essentials.jl:1052 [inlined]\n [19] #6\n    @ C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:18 [inlined]\n [20] with_inline_display(f::QuartoNotebookWorker.var\"#6#7\"{String, String, Int64, Dict{Any, Any}}, cell_options::Dict{Any, Any})\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\InlineDisplay.jl:26\n [21] _render_thunk(thunk::Function, code::String, cell_options::Dict{Any, Any}, is_expansion_ref::Base.RefValue{Bool}; inline::Bool)\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:43\n [22] _render_thunk\n    @ C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:35 [inlined]\n [23] #render#5\n    @ C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:15 [inlined]\n [24] render(code::String, file::String, line::Int64, cell_options::Dict{Any, Any})\n    @ QuartoNotebookWorker C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\QuartoNotebookWorker\\src\\render.jl:1\n [25] render(::String, ::Vararg{Any}; kwargs::@Kwargs{})\n    @ Main C:\\Users\\Andrew\\.julia\\packages\\QuartoNotebookRunner\\eYIiC\\src\\worker.jl:30\n [26] top-level scope\n    @ none:1\n```\n:::\n:::\n\n\n",
    "supporting": [
      "julia_test_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}