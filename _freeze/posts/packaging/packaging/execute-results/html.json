{
  "hash": "a74bd2670640fce28314ab6410933cdf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Packaging Workflow\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Initialize R Package\n\n\n\n\n::: {.cell layout-align=\"center\" filename='initialize_package.R'}\n\n```{.r .cell-code}\n#' Initialize a new R package\n#'\n#' @param pkgname `<chr>` name of package\n#'\n#' @returns nothing\n#'\n#' @examplesIf FALSE\n#' initialize_package(\"package\")\n#'\n#' @autoglobal\n#'\n#' @noRd\ninitialize_package <- \\(pkgname) {\n  \n  local  <- \"C:/Users/Andrew/Desktop/Repositories/\"\n  github <- \"https://github.com/andrewallenbruce/\"\n  \n  usethis::create_package(\n    path = glue::glue(\"{local}{pkgname}\"),\n    fields = list(\n      Package = glue::glue(\"{pkgname}\"),\n      \"Authors@R\" = utils::person(\n        given = c(\"Andrew\", \"Allen\"), \n        family = \"Bruce\", \n        email = \"andrewallenbruce@gmail.com\", \n        role = c(\"aut\", \"cre\", \"cph\")),\n      Maintainer = \"Andrew Allen Bruce <andrewallenbruce@gmail.com>\",\n      URL = glue::glue(\"{github}{pkgname}\"),\n      BugReports = glue::glue(\"{github}{pkgname}/issues\"))\n  )\n}\n```\n:::\n\n\n\n\n## Connect to Git\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_git()\n```\n:::\n\n\n\n\n> _Will ask you to commit files to Git. Say **YES**._\n\n## Create Repository on GitHub\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_github()\n```\n:::\n\n\n\n\n> _Will ask you to commit files to GitHub. Say **YES**._\n\n## Add License, COC, Package Document, and News\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_mit_license(copyright_holder = \"Andrew Allen Bruce\")\nusethis::use_code_of_conduct(contact = \"andrewallenbruce@gmail.com\")\nusethis::use_package_doc()\nusethis::use_news_md()\n```\n:::\n\n\n\n\n## Add README.Rmd\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_readme_rmd()\n```\n:::\n\n\n\n\n### Add Badges to README\n\n```markdown\n<!-- badges: start -->\n\n![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/PACKAGE?style=flat-square&logo=R&label=Package&color=%23192a38)\n[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE)\n[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE/commits/master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)\n\n<!-- badges: end -->\n```\n\n## Use {roxyglobals}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nroxyglobals::use_roxyglobals()\n```\n:::\n\n\n\n\nIn the `DESCRIPTION` file, make sure the following two fields are as follows:\n\n```yaml\nConfig/roxyglobals/filename: generated-globals.R\nConfig/roxyglobals/unique: TRUE\n```\n\n## Use {testthat}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_testthat(parallel = TRUE)\nusethis::use_test(\"add-test\")\n```\n:::\n\n\n\n\n\n## Create {pkgdown} site\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_pkgdown_github_pages()\nusethis::use_vignette(\"getting-started\", \"Getting Started\")\n```\n:::\n\n\n\n\nCopy and paste into `_pkgdown.yml` file:\n\n```yaml\nurl: https://andrewallenbruce.github.io/codex/\n\ntemplate:\n  bootstrap: 5\n  light-switch: true\n  bslib:\n    base_font: {google: \"Roboto\"}\n    heading_font: {google: \"Roboto Slab\"}\n    code_font: {google: \"Source Code Pro\"}\n\nnavbar:\n  structure:\n    left:\n    - intro\n    - reference\n    - articles\n    - tutorials\n    - news\n    right:\n    - search\n    - github\n    - lightswitch\n  components:\n    reference:\n      text: Reference\n      href: reference/index.html\n    search:\n      search: []\n    lightswitch:\n      icon: fa-sun\n      aria-label: Light switch\n      id: lightswitch\n      menu:\n      - text: Light\n        theme: light\n        icon: fa-sun\n      - text: Dark\n        theme: dark\n        icon: fa-moon\n      - text: Auto\n        theme: auto\n        icon: fa-adjust\n    news:\n      text: Changelog\n      href: news/index.html\n    github:\n      icon: fab fa-github fa-lg\n      href: https://github.com/andrewallenbruce/codex/\n      aria-label: GitHub\n```\n\nFunction Reference Example:\n\n```yaml\n- title: Classifications\n  desc: >\n    Classification systems for added context and dimensionality reduction.\n  contents:\n  - betos\n  - ndc_lookup\n  - taxonomies\n  - taxonomy_codes\n  - taxonomy_crosswalk\n- title: Utilities\n  desc: >\n    Various helper functions.\n  contents:\n  - change\n  - geomean\n  - years_df\n  - duration_vec\n  - summary_stats\n  - add_counties\n```\n\n## Run, Commit and Push\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndevtools::check()\ndevtools::build_rmd(\"README.Rmd\")\nusethis::use_tidy_description()\n```\n:::\n\n\n\n\n<hr>\n\n# Add a {pin}\n\nCall:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_data_raw(\"dataset\")\n```\n:::\n\n\n\n\nCreate `pins_internal.R` file in `data-raw` directory, the copy and paste into file:\n\n\n\n\n::: {.cell layout-align=\"center\" filename='pins_internal.R'}\n\n```{.r .cell-code}\npin_update <- function(x, name, title, description) {\n\n  board <- pins::board_folder(\n    here::here(\"inst/extdata/pins\"))\n\n  board |>\n    pins::pin_write(\n      x,\n      name        = name,\n      title       = title,\n      description = description,\n      type        = \"qs\")\n\n  board |> pins::write_board_manifest()\n}\n\ndelete_pins <- function(pin_names) {\n\n  board <- pins::board_folder(\n    here::here(\"inst/extdata/pins\"))\n\n  pins::pin_delete(board, names = pin_names)\n}\n```\n:::\n\n\n\n\nCreate a new pin:\n\n\n\n\n::: {.cell layout-align=\"center\" filename='dataset.R'}\n\n```{.r .cell-code}\nsource(here::here(\"data-raw\", \"pins_internal.R\"))\n\n# -- Data wrangling code here -- #\n\npin_update(\n  dataset,\n  name = \"object_name\",\n  title = \"Short Description\",\n  description = \"Long Description\"\n)\n```\n:::\n\n\n\n\nCall:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_r(\"pins\")\n```\n:::\n\n\n\n\nCopy and paste the following to `pins.R` file:\n\n\n\n\n::: {.cell layout-align=\"center\" filename='pins.R'}\n\n```{.r .cell-code}\n#' Return GitHub raw url\n#'\n#' @param x `<chr>` string\n#'\n#' @returns `<chr>` GitHub raw url\n#'\n#' @examples\n#' gh_raw(\"andrewbruce/example/main/inst/pins/\")\n#'\n#' @autoglobal\n#'\n#' @keywords internal\n#'\n#' @export\ngh_raw <- function(x) {\n  paste0(\"https://raw.githubusercontent.com/\", x)\n}\n\n#' Mount [pins][pins::pins-package] board\n#'\n#' @param source `<chr>` `\"local\"` or `\"remote\"`\n#'\n#' @param package `<chr>` package name\n#'\n#' @returns `<pins_board_folder>` or `<pins_board_url>`\n#'\n#' @autoglobal\n#' \n#' @importFrom pins board_folder board_url\n#' @importFrom fs path_package\n#' @importFrom glue glue\n#'\n#' @keywords internal\n#'\n#' @export\nmount_board <- function(source = c(\"local\", \"remote\"), package = \"<package_name>\") {\n\n  source <- match.arg(source)\n\n  switch(\n    source,\n    local = board_folder(\n      path_package(\"extdata/pins\", package = package)\n      ),\n    remote = board_url(\n      gh_raw(\n        glue(\"andrewallenbruce/{package}/master/inst/extdata/pins/\")\n        )\n      ),\n    stop(\"Invalid source\")\n    )\n}\n\n#' Get a pinned dataset from a [pins][pins::pins-package] board\n#'\n#' @param pin `<chr>` string name of pinned dataset\n#'\n#' @param ... additional arguments passed to `mount_board()`\n#'\n#' @returns `<tibble>` or `<data.frame>`\n#'\n#' @autoglobal\n#' \n#' @importFrom pins pin_read\n#'\n#' @keywords internal\n#'\n#' @export\nget_pin <- function(pin, ...) {\n\n  board <- mount_board(...)\n\n  pin <- match.arg(pin, list_pins())\n\n  pin_read(board, pin)\n}\n\n#' List pins from a [pins][pins::pins-package] board\n#'\n#' @param ... arguments to pass to [mount_board()]\n#'\n#' @returns `<list>` of [pins][pins::pins-package]\n#'\n#' @autoglobal\n#' \n#' @importFrom pins pin_list\n#'\n#' @keywords internal\n#'\n#' @export\nlist_pins <- function(...) {\n\n  board <- mount_board(...)\n\n  pin_list(board)\n}\n```\n:::\n\n\n\n\n<hr>\n\n# Bump Package Version\n\nRun after committing changes:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# <major>.<minor>.<patch>.<dev>\nusethis::use_version(\"patch\")\n```\n:::\n\n\n\n\n# Use {covr}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_coverage(\"codecov\")\nusethis::use_github_action(\"test-coverage\")\n```\n:::\n\n\n\n\n<hr>\n\n# Use {gert} \n\n> When RStudio won't let you commit files & push them to GitHub.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfiles <- gert::git_status()\n\nfiles_to_stage <- files |>\n  dplyr::filter(!staged) |>\n  dplyr::pull(file)\n\ngert::git_add(files_to_stage)\ngert::git_commit_all(message = \"COMMIT MESSAGE\")\ngert::git_push()\n```\n:::\n\n\n\n\n# Update Personal Packages\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#' Install/upgrade personal packages\n#'\n#' @autoglobal\n#'\n#' @keywords internal\n#'\n#' @noRd\nupdate_packages <- function() {\n\n  pkgs <- c(\n    \"careroll\",\n    \"codexchain\",\n    \"costoffice\",\n    \"defogger\",\n    \"forager\",\n    \"fuimus\",\n    \"northstar\",\n    \"pathologie\",\n    \"procedural\",\n    \"provider\",\n    \"rbrvs\", # name will change\n    \"nppez\",\n    \"arktax\",\n    \"arknpi\",\n    \"codex\"\n  )\n\n  pak::pkg_install(\n    glue::glue(\n      \"andrewallenbruce/{pkgs}\"\n    ),\n    upgrade = TRUE,\n    ask = FALSE)\n}\n```\n:::\n\n\n\n\n\n## Session Information \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n**R version 4.4.2 (2024-10-31 ucrt)**\n\n**Platform:** x86_64-w64-mingw32/x64 \n\n**locale:**\n_LC_COLLATE=English_United States.utf8_, _LC_CTYPE=English_United States.utf8_, _LC_MONETARY=English_United States.utf8_, _LC_NUMERIC=C_ and _LC_TIME=English_United States.utf8_\n\n**attached base packages:** \n_stats_, _graphics_, _grDevices_, _utils_, _datasets_, _methods_ and _base_\n\n**loaded via a namespace (and not attached):** \n_digest(v.0.6.37)_, _fastmap(v.1.2.0)_, _xfun(v.0.49)_, _knitr(v.1.49)_, _htmltools(v.0.5.8.1)_, _rmarkdown(v.2.29)_, _lifecycle(v.1.0.4)_, _cli(v.3.6.3)_, _pander(v.0.6.5)_, _textshaping(v.0.4.0)_, _systemfonts(v.1.1.0)_, _compiler(v.4.4.2)_, _rstudioapi(v.0.17.1)_, _tools(v.4.4.2)_, _ragg(v.1.3.3)_, _evaluate(v.1.0.1)_, _Rcpp(v.1.0.13-1)_, _yaml(v.2.3.10)_, _rlang(v.1.1.4)_, _jsonlite(v.1.8.9)_ and _htmlwidgets(v.1.6.4)_\n:::\n:::\n",
    "supporting": [
      "packaging_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}