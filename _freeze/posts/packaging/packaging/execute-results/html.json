{
  "hash": "eb002b55d2c05e6cb513a09cd7ec27aa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tips & Tricks: R Package Creation/Maintenance\"\n---\n\n::: {.cell}\n\n:::\n\n# Initialize New Package\n\n::: {.cell layout-align=\"center\" filename='initialize_package.R'}\n\n```{.r .cell-code}\ninitialize_package <- \\(pkgname,\n                        local = \"C:/Users/Andrew/Desktop/Repositories/\",\n                        github = \"https://github.com/andrewallenbruce/\") {\n  \n  usethis::create_package(\n    path          = glue::glue(\"{local}{pkgname}\"),\n    fields        = list(\n    Package       = glue::glue(\"{pkgname}\"),\n    \"Authors@R\"   = utils::person(\n    given         = c(\"Andrew\", \"Allen\"), \n    family        = \"Bruce\", \n    email         = \"andrewallenbruce@gmail.com\", \n    role          = c(\"aut\", \"cre\", \"cph\")),\n    Maintainer    = \"Andrew Allen Bruce <andrewallenbruce@gmail.com>\",\n    URL           = glue::glue(\"{github}{pkgname}\"),\n    BugReports    = glue::glue(\"{github}{pkgname}/issues\"))\n  )\n}\n```\n:::\n\n## Connect to Git\n\n> _Will ask you to commit files to Git. Say **YES**._\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_git()\n```\n:::\n\n> _Will ask you to commit files to GitHub. Say **YES**._\n\n## Create GitHub Repository\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_github()\n```\n:::\n\n## Add License\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_mit_license(\"Andrew Allen Bruce\")\n```\n:::\n\n## Add Code of Conduct\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_code_of_conduct(contact = \"andrewallenbruce@gmail.com\")\n```\n:::\n\n## Add package-document\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_package_doc()\n```\n:::\n\n## Add News/Changelog\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_news_md()\n```\n:::\n\n## Set Up __{roxyglobals}__\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nroxyglobals::use_roxyglobals()\n```\n:::\n\nIn the `DESCRIPTION` file, make sure the following two fields are filled out:\n\n```{.yaml}\nConfig/roxyglobals/filename: generated-globals.R\nConfig/roxyglobals/unique: TRUE\n```\n\n## Set Up __{testthat}__\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_testthat(parallel = TRUE)\n```\n:::\n\n### Add Example Test\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_test(\"add-test\")\n```\n:::\n\n## Create __{pkgdown}__ Site\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_pkgdown_github_pages()\n```\n:::\n\n### Use `_pkgdown.yml`\n\n```{.yaml filename=\"_pkgdown.yml\"}\nurl: https://andrewallenbruce.github.io/pkgname/\n\ntemplate:\n  bootstrap: 5\n  light-switch: true\n  bslib:\n    base_font: {google: \"Roboto\"}\n    heading_font: {google: \"Roboto Slab\"}\n    code_font: {google: \"Source Code Pro\"}\n\nnavbar:\n  structure:\n    left:\n    - intro\n    - reference\n    - articles\n    - tutorials\n    - news\n    right:\n    - search\n    - github\n    - lightswitch\n  components:\n    reference:\n      text: Reference\n      href: reference/index.html\n    search:\n      search: []\n    lightswitch:\n      icon: fa-sun\n      aria-label: Light switch\n      id: lightswitch\n      menu:\n      - text: Light\n        theme: light\n        icon: fa-sun\n      - text: Dark\n        theme: dark\n        icon: fa-moon\n      - text: Auto\n        theme: auto\n        icon: fa-adjust\n    news:\n      text: Changelog\n      href: news/index.html\n    github:\n      icon: fab fa-github fa-lg\n      href: https://github.com/andrewallenbruce/pkgname/\n      aria-label: GitHub\n```\n\n### Reference Example\n\n```{.yaml filename=\"_pkgdown.yml\"}\nreference:\n\n- title: Classifications\n  desc: >\n    Classification systems for added context and dimensionality reduction.\n  contents:\n  - betos\n  - ndc_lookup\n  - taxonomies\n  - taxonomy_codes\n  - taxonomy_crosswalk\n\n- title: Utilities\n  desc: >\n    Various helper functions.\n  contents:\n  - change\n  - geomean\n  - years_df\n  - duration_vec\n  - summary_stats\n  - add_counties\n```\n\n### Optional: Vignette\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_vignette(\"getting-started\", \"Getting Started\")\n```\n:::\n\n## Add `README.Rmd`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_readme_rmd()\n```\n:::\n\n### Add Badges to README\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglue::glue('\n<!-- badges: start -->\n\n![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/{PACKAGE}?style=flat-square&logo=R&label=Package&color=%23192a38)\n[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/{PACKAGE}.svg)](https://github.com/andrewallenbruce/{PACKAGE})\n[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/{PACKAGE}.svg)](https://github.com/andrewallenbruce/{PACKAGE}/commits/master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)\n\n<!-- badges: end -->\n', \nPACKAGE = \"pkgname\", \nsep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<!-- badges: start -->\n\n![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/pkgname?style=flat-square&logo=R&label=Package&color=%23192a38)\n[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/pkgname.svg)](https://github.com/andrewallenbruce/pkgname)\n[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/pkgname.svg)](https://github.com/andrewallenbruce/pkgname/commits/master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)\n\n<!-- badges: end -->\n```\n\n\n:::\n:::\n\n### Build `README.Rmd`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbuild_rmd(\"README.Rmd\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in build_rmd(\"README.Rmd\"): could not find function \"build_rmd\"\n```\n\n\n:::\n:::\n\n\n## Run RCMDCHK\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndevtools::check()\n```\n:::\n\n### Correct All Errors, Warnings, Notes\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_tidy_description()\n```\n:::\n\n<hr>\n\n# Add a {pin}\n\nCall:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_data_raw(\"dataset\")\nuse_data_raw(\"pins_internal\")\n```\n:::\n\nCreate `pins_internal.R` file in `data-raw` directory, the copy and paste into file:\n\n::: {.cell layout-align=\"center\" filename='pins_internal.R'}\n\n```{.r .cell-code}\npin_update <- function(x, name, title, description) {\n\n  board <- pins::board_folder(\n    here::here(\"inst/extdata/pins\"))\n\n  board |>\n    pins::pin_write(\n      x,\n      name        = name,\n      title       = title,\n      description = description,\n      type        = \"qs\")\n\n  board |> pins::write_board_manifest()\n}\n\ndelete_pins <- function(pin_names) {\n\n  board <- pins::board_folder(\n    here::here(\"inst/extdata/pins\"))\n\n  pins::pin_delete(board, names = pin_names)\n}\n```\n:::\n\nCreate a new pin:\n\n::: {.cell layout-align=\"center\" filename='dataset.R'}\n\n```{.r .cell-code}\nsource(here::here(\"data-raw\", \"pins_internal.R\"))\n\n# -- Data wrangling code here -- #\n\npin_update(\n  object_name,\n  name        = \"object_name\",\n  title       = \"Short Description\",\n  description = \"Long Description\"\n)\n```\n:::\n\nCall:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_r(\"pins\")\n```\n:::\n\n> Soon to be split off into it's own package\n\n::: {.cell layout-align=\"center\" filename='pins.R'}\n\n```{.r .cell-code}\nuse_standalone(\"andrewallenbruce/fuimus\", \"helpers\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in use_standalone(\"andrewallenbruce/fuimus\", \"helpers\"): could not find function \"use_standalone\"\n```\n\n\n:::\n:::\n\n<hr>\n\n# Bump Package Version\n\n> <major>.<minor>.<patch>.<dev>\n> usethis::use_version(\"patch\")\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfledge::bump_version()\nfledge::finalize_version(push = TRUE)\n```\n:::\n\n# Use {covr}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nuse_coverage(\"codecov\")\nuse_github_action(\"test-coverage\")\n```\n:::\n\n<hr>\n\n# Troubleshooting\n\n## Use {gert} to Force Commit/Push\n\n> When RStudio won't let you commit files & push them to GitHub.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfuimus::git_commit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (msg) \n{\n    files <- gert::git_status()\n    files_to_stage <- dplyr::pull(dplyr::filter(files, !staged), \n        file)\n    if (fs::file_exists(here::here(\".git/index.lock\"))) {\n        fs::file_delete(here::here(\".git/index.lock\"))\n    }\n    gert::git_add(files_to_stage)\n    gert::git_commit_all(message = msg)\n    fledge::bump_version()\n}\n<bytecode: 0x0000027ed969c9a8>\n<environment: namespace:fuimus>\n```\n\n\n:::\n:::\n\n# Update Personal Packages\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfuimus::update_personal_packages()\n```\n:::\n\n<hr>\n\n<br>\n\n## Session Information \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n**R version 4.4.2 (2024-10-31 ucrt)**\n\n**Platform:** x86_64-w64-mingw32/x64 \n\n**locale:**\n_LC_COLLATE=English_United States.utf8_, _LC_CTYPE=English_United States.utf8_, _LC_MONETARY=English_United States.utf8_, _LC_NUMERIC=C_ and _LC_TIME=English_United States.utf8_\n\n**attached base packages:** \n_stats_, _graphics_, _grDevices_, _utils_, _datasets_, _methods_ and _base_\n\n**loaded via a namespace (and not attached):** \n_digest(v.0.6.37)_, _fastmap(v.1.2.0)_, _xfun(v.0.50)_, _glue(v.1.8.0)_, _knitr(v.1.49)_, _htmltools(v.0.5.8.1)_, _rmarkdown(v.2.29)_, _lifecycle(v.1.0.4)_, _cli(v.3.6.3.9001)_, _pander(v.0.6.5)_, _fuimus(v.0.0.5.9009)_, _textshaping(v.0.4.1)_, _systemfonts(v.1.1.0)_, _compiler(v.4.4.2)_, _rstudioapi(v.0.17.1)_, _tools(v.4.4.2)_, _ragg(v.1.3.3)_, _evaluate(v.1.0.1)_, _Rcpp(v.1.0.13-1)_, _yaml(v.2.3.10)_, _crayon(v.1.5.3)_, _rlang(v.1.1.4)_, _jsonlite(v.1.8.9)_ and _htmlwidgets(v.1.6.4)_\n:::\n:::\n",
    "supporting": [
      "packaging_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}