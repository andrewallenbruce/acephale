{
  "hash": "c1a3f7a5c6ccd539d0a1749c8a2257e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Learning to Love Regexes By Learning Them\"\nsubtitle: \"I Promised Myself I Wouldn't Do This Again\"\ndescription: \"Building a regex generator for self-contained, well-defined string detection problems is a very effective way to learn regular expressions.\"\nformat:\n  html:\n    reference-location: margin\n    other-links:\n      - text: Regex Cheatsheet\n        icon: bookmark-plus\n        href: https://github.com/raredd/regex\n      - text: RexEgg\n        icon: bookmark-plus\n        href: https://www.rexegg.com/\n      - text: Regex in R\n        icon: bookmark-plus\n        href: https://stat.ethz.ch/R-manual/R-devel/library/base/html/regex.html\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# TODO\n\n   * The *postfix* for a **wildcard** that begins with a **letter** is `[0-9]{n}`.\n   * In `remove_redundant()`, try pmap for `rr()` step.\n   * Groups 3, 4 & 5 beginning with letters.\n   * Group 5 ending with letters.\n\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n::: {#note-good .callout-note}\n\n### Good Examples\n\n### Case 1\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(\"L80\", \n     c(\"L56\", \"L59\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"L80\"\n\n[[2]]\n[1] \"L56\" \"L59\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, \"^L56|^L59|^L80\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 124\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, \"^L(5[69]|80)[0-9]{2}$\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 124\n```\n\n\n:::\n:::\n\n\n\n\n### Case 2\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(c(\"021\", \"022\", \"026\", \"027\"), \n     c(\"032\", \"033\"), \n     c(\"042\", \"044\"), \n     \"050\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"021\" \"022\" \"026\" \"027\"\n\n[[2]]\n[1] \"032\" \"033\"\n\n[[3]]\n[1] \"042\" \"044\"\n\n[[4]]\n[1] \"050\"\n```\n\n\n:::\n\n```{.r .cell-code}\nbench::mark(\n  raw = sf_extract(hcpcs, \"^021|^022|^026|^027|^032|^033|^042|^044|^050\"),\n  compact = sf_extract(hcpcs, sf_convert(\"^0(2[1267]|3[23]|4[24]|50)[A-Z0-9]{2}$\")),\n  iterations = 10000) |> \n  select(expression:total_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 raw           517µs    604µs     1640.     149KB     5.10\n2 compact       489µs    573µs     1741.     149KB     5.77\n```\n\n\n:::\n:::\n\n\n\n\n### Case 3\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(c(\"C75\", \"C97\"),\n     c(\"G02\", \"G04\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"C75\" \"C97\"\n\n[[2]]\n[1] \"G02\" \"G04\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, \"^C75|^C97|^G02|^G04\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 253\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, \"^C(75|97)[0-9]{2}$|^G0[24][0-9]{2}$\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 253\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, \"^(C(75|97)|G0[24])[0-9]{2}$\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 253\n```\n\n\n:::\n\n```{.r .cell-code}\nbench::mark(\n  raw = sf_extract(hcpcs, \"^C75|^C97|^G02|^G04\"),\n  reduced = sf_extract(hcpcs, \"^C(75|97)[0-9]{2}$|^G0[24][0-9]{2}$\"),\n  compact = sf_extract(hcpcs, sf_convert(\"^(C(75|97)|G0[24])[0-9]{2}$\")),\n  iterations = 10000) |> \n  select(expression:total_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 raw           514µs    604µs     1635.     151KB     5.25\n2 reduced       500µs    587µs     1698.     151KB     5.11\n3 compact       515µs    594µs     1672.     151KB     4.86\n```\n\n\n:::\n:::\n\n\n\n\n### Case 4\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(\"0[2-5]\", \n     \"15\", \n     \"2[027]\", \n     \"3[0-24-6]\", \n     \"5[0458]\", \n     \"6[134]\", \n     \"76\", \n     \"9[25]\", \n     \"C[79]\", \n     \"E0\", \n     \"G0\", \n     \"S2\") -> c4list\n\nc4list\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"0[2-5]\"\n\n[[2]]\n[1] \"15\"\n\n[[3]]\n[1] \"2[027]\"\n\n[[4]]\n[1] \"3[0-24-6]\"\n\n[[5]]\n[1] \"5[0458]\"\n\n[[6]]\n[1] \"6[134]\"\n\n[[7]]\n[1] \"76\"\n\n[[8]]\n[1] \"9[25]\"\n\n[[9]]\n[1] \"C[79]\"\n\n[[10]]\n[1] \"E0\"\n\n[[11]]\n[1] \"G0\"\n\n[[12]]\n[1] \"S2\"\n```\n\n\n:::\n\n```{.r .cell-code}\n\"^02|^03|^04|^05|^15|^20|^22|^27|^30|^31|^32|^34|^35|^36|^50|^54|^55|^58|^61|^63|^64|^76|^92|^95|^C7|^C9|^E0|^G0|^S2\" -> c4raw\n\npaste0(\"^(\", sf_collapse(list_c(c4list), collapse = \"|\"), \")[A-Z0-9]{3}$\") -> c4compact\n\nlength(sf_extract(hcpcs, c4raw))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4349\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(sf_extract(hcpcs, c4compact))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4349\n```\n\n\n:::\n\n```{.r .cell-code}\nbench::mark(\n  raw = sf_extract(hcpcs, c4raw),\n  compact = sf_extract(hcpcs, c4compact),\n  iterations = 10000) |> \n  select(expression:total_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 raw          2.12ms    2.6ms      381.     199KB     1.49\n2 compact      1.33ms    1.6ms      604.     199KB     2.43\n```\n\n\n:::\n:::\n\n\n\n\n::: \n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n# Preprocess Steps\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- random_hcpcs2()\n\nx |> \n  split_lengths()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$x1\n[1] \"0\" \"3\" \"7\" \"P\"\n\n$x2\n[1] \"27\" \"28\" \"50\" \"61\" \"86\" \"95\" \"99\" \"G9\"\n\n$x3\n [1] \"080\" \"298\" \"453\" \"479\" \"534\" \"558\" \"615\" \"G96\" \"H20\" \"L54\"\n\n$x4\n [1] \"1005\" \"2721\" \"2743\" \"3210\" \"3370\" \"3395\" \"3397\" \"4326\" \"A615\" \"J907\"\n\n$x5\n [1] \"01190\" \"0373T\" \"21932\" \"35241\" \"50722\" \"61156\" \"64820\" \"G6057\" \"G9378\"\n[10] \"L1260\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx |>\n  split_lengths() |>\n  remove_redundant()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$x1\n[1] \"0\" \"3\" \"7\" \"P\"\n\n$x2\n[1] \"27\" \"28\" \"50\" \"61\" \"86\" \"95\" \"99\" \"G9\"\n\n$x3\n[1] \"298\" \"453\" \"479\" \"534\" \"558\" \"H20\" \"L54\"\n\n$x4\n[1] \"1005\" \"4326\" \"A615\" \"J907\"\n\n$x5\n[1] \"21932\" \"64820\" \"G6057\" \"L1260\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$x1\n$x1[[1]]\n[1] \"0\" \"3\" \"7\" \"P\"\n\n\n$x2\n$x2[[1]]\n[1] \"27\" \"28\"\n\n$x2[[2]]\n[1] \"50\"\n\n$x2[[3]]\n[1] \"61\"\n\n$x2[[4]]\n[1] \"86\"\n\n$x2[[5]]\n[1] \"95\" \"99\"\n\n$x2[[6]]\n[1] \"G9\"\n\n\n$x3\n$x3[[1]]\n[1] \"298\"\n\n$x3[[2]]\n[1] \"453\" \"479\"\n\n$x3[[3]]\n[1] \"534\" \"558\"\n\n$x3[[4]]\n[1] \"H20\"\n\n$x3[[5]]\n[1] \"L54\"\n\n\n$x4\n$x4[[1]]\n[1] \"1005\"\n\n$x4[[2]]\n[1] \"4326\"\n\n$x4[[3]]\n[1] \"A615\"\n\n$x4[[4]]\n[1] \"J907\"\n\n\n$x5\n$x5[[1]]\n[1] \"21932\"\n\n$x5[[2]]\n[1] \"64820\"\n\n$x5[[3]]\n[1] \"G6057\"\n\n$x5[[4]]\n[1] \"L1260\"\n```\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n\n\n\n\n# Process Groups\n\n::: {.panel-tabset}\n\n## Group 3\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nc(\"C75\", \"C97\", \"G02\", \"G04\") |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"C75\"\n\n[[1]][[2]]\n[1] \"C97\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"G02\" \"G04\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlong_test2[nchar(long_test2) == 3] |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"021\" \"022\" \"026\" \"027\"\n\n[[1]][[2]]\n[1] \"032\" \"033\"\n\n[[1]][[3]]\n[1] \"042\" \"044\"\n\n[[1]][[4]]\n[1] \"050\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"157\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"209\"\n\n[[3]][[2]]\n[1] \"225\"\n\n[[3]][[3]]\n[1] \"271\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"308\"\n\n[[4]][[2]]\n[1] \"312\"\n\n[[4]][[3]]\n[1] \"326\"\n\n[[4]][[4]]\n[1] \"347\" \"348\"\n\n[[4]][[5]]\n[1] \"355\"\n\n[[4]][[6]]\n[1] \"362\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"503\" \"505\"\n\n[[5]][[2]]\n[1] \"544\"\n\n[[5]][[3]]\n[1] \"552\" \"553\"\n\n[[5]][[4]]\n[1] \"585\" \"586\" \"587\" \"588\" \"589\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"610\" \"612\"\n\n[[6]][[2]]\n[1] \"630\"\n\n[[6]][[3]]\n[1] \"644\" \"646\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"765\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"920\" \"921\" \"922\"\n\n[[8]][[2]]\n[1] \"958\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"C75\"\n\n[[9]][[2]]\n[1] \"C97\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"E06\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"G02\" \"G04\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"S23\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs2() |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"052\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"428\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"781\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"A42\" \"A46\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"G21\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"J71\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"L30\"\n\n[[7]][[2]]\n[1] \"L56\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"S99\"\n```\n\n\n:::\n:::\n\n\n\n\n## Group 4\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngroup_4 <- function(x) {\n\n  x <- getelem(x, \"x4\")\n  \n  if (empty(x)) \n    return(x)\n  \n  map(x, function(x) {\n    \n    idx <- data.table(\n      code = x,\n      grp1 = sf_sub(x, 1, 2),\n      grp2 = sf_sub(x, 1, 3),\n      a1 = take_at(x),\n      a2 = take_at(x, 2),\n      a3 = take_at(x, 3),\n      a4 = take_at(x, 4),\n      i1 = groupid(take_at(x))) |>\n      fgroup_by(a1) |>\n      fmutate(i2 = groupid(a2)) |>\n      fgroup_by(a1, a2) |>\n      fmutate(i3 = groupid(a3)) |> \n      fgroup_by(a1, a2, a3) |>\n      fmutate(i4 = groupid(a4)) |> \n      fungroup()\n    \n    lone <- fcount(idx, i1, add = TRUE) |>\n        fsubset((i2 + i3 + i4 + N) == 4)\n    \n    last <- fsubset(idx, code %!in% lone[[\"code\"]])\n    \n    last <- join(\n        fcount(last, grp1, a3),\n        fcount(last, grp1, name = \"G\"), on = \"grp1\", verbose = 0) |>\n        fsubset(N == G) |>\n        join(last, on = c(\"grp1\", \"a3\"), how = \"right\", verbose = 0) |>\n        fsubset(not_na(N))\n    \n      rest <- fsubset(idx, code %!in% c(lone[[\"code\"]], last[[\"code\"]]))\n      \n      c(if (empty(lone)) NULL else list(lone[[\"code\"]]),\n        if (empty(last)) NULL else gchop(last[[\"code\"]], last[[\"grp1\"]]),\n        if (empty(rest)) NULL else gchop(rest[[\"code\"]], rest[[\"grp2\"]]))\n    })\n}\n\nc(\"C751\", \"C970\", \"G020\", \"G040\") |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"C751\"\n\n[[1]][[2]]\n[1] \"C970\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"G020\"\n\n[[2]][[2]]\n[1] \"G040\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlong_test2[nchar(long_test2) == 4] |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"0506\" \"0507\"\n\n[[1]][[2]]\n[1] \"0214\" \"0215\" \"0217\" \"0218\" \"0219\"\n\n[[1]][[3]]\n[1] \"0220\" \"0221\" \"0222\"\n\n[[1]][[4]]\n[1] \"0263\" \"0265\" \"0266\" \"0269\"\n\n[[1]][[5]]\n[1] \"0274\" \"0275\"\n\n[[1]][[6]]\n[1] \"0329\"\n\n[[1]][[7]]\n[1] \"0330\"\n\n[[1]][[8]]\n[1] \"0422\"\n\n[[1]][[9]]\n[1] \"0444\" \"0445\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"1577\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"2093\"\n\n[[3]][[2]]\n[1] \"2251\" \"2252\"\n\n[[3]][[3]]\n[1] \"2719\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"3080\"\n\n[[4]][[2]]\n[1] \"3123\"\n\n[[4]][[3]]\n[1] \"3267\"\n\n[[4]][[4]]\n[1] \"3557\"\n\n[[4]][[5]]\n[1] \"3622\"\n\n[[4]][[6]]\n[1] \"3471\"\n\n[[4]][[7]]\n[1] \"3481\" \"3482\" \"3483\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"5442\" \"5443\"\n\n[[5]][[2]]\n[1] \"5030\"\n\n[[5]][[3]]\n[1] \"5054\"\n\n[[5]][[4]]\n[1] \"5520\" \"5525\"\n\n[[5]][[5]]\n[1] \"5530\"\n\n[[5]][[6]]\n[1] \"5857\"\n\n[[5]][[7]]\n[1] \"5860\"\n\n[[5]][[8]]\n[1] \"5870\" \"5872\"\n\n[[5]][[9]]\n[1] \"5880\"\n\n[[5]][[10]]\n[1] \"5890\" \"5892\" \"5894\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"6303\" \"6304\"\n\n[[6]][[2]]\n[1] \"6100\"\n\n[[6]][[3]]\n[1] \"6125\"\n\n[[6]][[4]]\n[1] \"6442\" \"6448\" \"6449\"\n\n[[6]][[5]]\n[1] \"6463\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"7651\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"9587\"\n\n[[8]][[2]]\n[1] \"9202\" \"9208\"\n\n[[8]][[3]]\n[1] \"9213\" \"9214\"\n\n[[8]][[4]]\n[1] \"9220\" \"9222\" \"9223\" \"9224\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"C750\"\n\n[[9]][[2]]\n[1] \"C977\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"E067\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"G027\"\n\n[[11]][[2]]\n[1] \"G041\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"S234\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs2() |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"7471\"\n\n[[1]][[2]]\n[1] \"7820\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"8110\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"9462\"\n\n[[3]][[2]]\n[1] \"9586\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"G040\"\n\n[[4]][[2]]\n[1] \"G870\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"J235\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"L540\"\n```\n\n\n:::\n:::\n\n\n\n\n## Group 5\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngroup_5 <- function(x) {\n\n  x <- getelem(x, \"x5\")\n  \n  if (empty(x)) \n    return(x)\n  \n  # x <- x[[1]]\n  \n  map(x, function(x) {\n    \n    idx <- data.table(\n      code = x,\n      grp1 = sf_sub(x, 1, 2),\n      grp2 = sf_sub(x, 1, 3),\n      grp3 = sf_sub(x, 1, 4),\n      a1 = take_at(x),\n      a2 = take_at(x, 2),\n      a3 = take_at(x, 3),\n      a4 = take_at(x, 4),\n      a5 = take_at(x, 5),\n      i1 = groupid(take_at(x))) |>\n      fgroup_by(a1) |> \n      fmutate(i2 = groupid(a2)) |>\n      fgroup_by(a1, a2) |> \n      fmutate(i3 = groupid(a3)) |>\n      fgroup_by(a1, a2, a3) |> \n      fmutate(i4 = groupid(a4)) |>\n      fgroup_by(a1, a2, a3, a4) |> \n      fmutate(i5 = groupid(a5)) |> \n      fungroup()\n\n      lone <- fcount(idx, i1, add = TRUE) |> \n        fsubset((i2 + i3 + i4 + i5 + N) == 5)\n      \n      last <- fsubset(idx, code %!in% lone[[\"code\"]])\n      \n      last <- join(\n        fcount(last, grp2, a4),\n        fcount(last, grp2, name = \"G\"), on = \"grp2\", verbose = 0) |>\n        fsubset(N == G) |>\n        join(last, on = c(\"grp2\", \"a4\"), how = \"right\", verbose = 0) |> \n        fsubset(not_na(N))\n      \n      rest <- fsubset(idx, code %!in% c(lone[[\"code\"]], last[[\"code\"]]))\n      \n      c(if (empty(lone)) NULL else list(lone[[\"code\"]]),\n        if (empty(last)) NULL else gchop(last[[\"code\"]], last[[\"grp2\"]]),\n        if (empty(rest)) NULL else gchop(rest[[\"code\"]], rest[[\"grp3\"]]))\n    })\n}\n\nc(\"C7510\", \"C9701\", \"G0200\", \"G0400\") |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"C7510\"\n\n[[1]][[2]]\n[1] \"C9701\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"G0200\"\n\n[[2]][[2]]\n[1] \"G0400\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlong_test2[nchar(long_test2) == 5] |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"15777\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"20939\"\n\n[[2]][[2]]\n[1] \"27197\" \"27198\"\n\n[[2]][[3]]\n[1] \"22510\" \"22511\" \"22512\" \"22513\" \"22514\" \"22515\"\n\n[[2]][[4]]\n[1] \"22526\" \"22527\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"30801\" \"30802\"\n\n[[3]][[2]]\n[1] \"31231\"\n\n[[3]][[3]]\n[1] \"32673\"\n\n[[3]][[4]]\n[1] \"34713\" \"34714\" \"34715\" \"34716\" \"34717\"\n\n[[3]][[5]]\n[1] \"35572\"\n\n[[3]][[6]]\n[1] \"36221\"\n\n[[3]][[7]]\n[1] \"34812\"\n\n[[3]][[8]]\n[1] \"34820\"\n\n[[3]][[9]]\n[1] \"34833\" \"34834\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"50300\"\n\n[[4]][[2]]\n[1] \"50540\"\n\n[[4]][[3]]\n[1] \"55300\"\n\n[[4]][[4]]\n[1] \"58575\"\n\n[[4]][[5]]\n[1] \"58600\" \"58605\"\n\n[[4]][[6]]\n[1] \"58800\" \"58805\"\n\n[[4]][[7]]\n[1] \"54420\"\n\n[[4]][[8]]\n[1] \"54430\"\n\n[[4]][[9]]\n[1] \"55200\"\n\n[[4]][[10]]\n[1] \"55250\"\n\n[[4]][[11]]\n[1] \"58700\"\n\n[[4]][[12]]\n[1] \"58720\"\n\n[[4]][[13]]\n[1] \"58900\"\n\n[[4]][[14]]\n[1] \"58920\" \"58925\"\n\n[[4]][[15]]\n[1] \"58940\" \"58943\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"61000\" \"61001\"\n\n[[5]][[2]]\n[1] \"61253\"\n\n[[5]][[3]]\n[1] \"64634\" \"64636\"\n\n[[5]][[4]]\n[1] \"63035\"\n\n[[5]][[5]]\n[1] \"63043\" \"63044\" \"63045\" \"63046\" \"63047\" \"63048\"\n\n[[5]][[6]]\n[1] \"64421\"\n\n[[5]][[7]]\n[1] \"64480\" \"64484\"\n\n[[5]][[8]]\n[1] \"64491\" \"64492\" \"64494\" \"64495\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"76514\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"95870\"\n\n[[7]][[2]]\n[1] \"92025\"\n\n[[7]][[3]]\n[1] \"92081\" \"92082\" \"92083\"\n\n[[7]][[4]]\n[1] \"92132\" \"92133\" \"92134\"\n\n[[7]][[5]]\n[1] \"92145\"\n\n[[7]][[6]]\n[1] \"92201\" \"92202\"\n\n[[7]][[7]]\n[1] \"92227\" \"92228\" \"92229\"\n\n[[7]][[8]]\n[1] \"92235\"\n\n[[7]][[9]]\n[1] \"92240\" \"92242\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"C7501\" \"C7502\" \"C7504\" \"C7505\"\n\n[[8]][[2]]\n[1] \"C9771\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"E0675\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"G0279\"\n\n[[10]][[2]]\n[1] \"G0412\" \"G0413\" \"G0414\" \"G0415\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"S2342\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"0329T\"\n\n[[12]][[2]]\n[1] \"0330T\"\n\n[[12]][[3]]\n[1] \"0422T\"\n\n[[12]][[4]]\n[1] \"0214T\"\n\n[[12]][[5]]\n[1] \"0215T\"\n\n[[12]][[6]]\n[1] \"0217T\"\n\n[[12]][[7]]\n[1] \"0218T\"\n\n[[12]][[8]]\n[1] \"0219T\"\n\n[[12]][[9]]\n[1] \"0220T\"\n\n[[12]][[10]]\n[1] \"0221T\"\n\n[[12]][[11]]\n[1] \"0222T\"\n\n[[12]][[12]]\n[1] \"0263T\"\n\n[[12]][[13]]\n[1] \"0265T\"\n\n[[12]][[14]]\n[1] \"0266T\"\n\n[[12]][[15]]\n[1] \"0269T\"\n\n[[12]][[16]]\n[1] \"0274T\"\n\n[[12]][[17]]\n[1] \"0275T\"\n\n[[12]][[18]]\n[1] \"0444T\"\n\n[[12]][[19]]\n[1] \"0445T\"\n\n[[12]][[20]]\n[1] \"0506T\"\n\n[[12]][[21]]\n[1] \"0507T\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs2() |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  group_5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"28307\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"37184\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"99446\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"L5000\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"0175U\"\n```\n\n\n:::\n:::\n\n\n\n\n## process_groups\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprocess_groups <- function(x) {\n  \n  list(\n    g1 = x$x1,\n    g2 = x$x2,\n    g3 = group_3(x),\n    g4 = group_4(x),\n    g5 = group_5(x)\n    )\n}\n\nhcpcs_tests |>\n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  process_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$g1\n$g1[[1]]\n[1] \"0\" \"4\" \"5\" \"6\" \"G\" \"J\"\n\n\n$g2\n$g2[[1]]\n[1] \"30\" \"31\" \"32\"\n\n\n$g3\n$g3[[1]]\n$g3[[1]][[1]]\n[1] \"721\" \"722\" \"723\" \"724\" \"725\" \"726\" \"727\" \"728\" \"729\"\n\n\n\n$g4\nlist()\n\n$g5\n$g5[[1]]\n$g5[[1]][[1]]\n[1] \"92015\" \"92016\" \"92017\" \"92018\" \"92019\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlong_test2 |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |> \n  process_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$g1\n$g1[[1]]\n [1] \"0\" \"1\" \"2\" \"3\" \"5\" \"6\" \"7\" \"9\" \"C\" \"E\" \"G\" \"S\"\n\n\n$g2\nlist()\n\n$g3\nlist()\n\n$g4\nlist()\n\n$g5\nlist()\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs2() |> \n  split_lengths() |> \n  remove_redundant() |>\n  split_first() |>\n  process_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$g1\n$g1[[1]]\n[1] \"0\" \"1\" \"A\" \"R\"\n\n\n$g2\n$g2[[1]]\n[1] \"26\"\n\n$g2[[2]]\n[1] \"31\" \"35\"\n\n$g2[[3]]\n[1] \"50\"\n\n$g2[[4]]\n[1] \"83\" \"88\"\n\n$g2[[5]]\n[1] \"90\"\n\n$g2[[6]]\n[1] \"E0\" \"E1\"\n\n$g2[[7]]\n[1] \"L0\"\n\n\n$g3\n$g3[[1]]\n$g3[[1]][[1]]\n[1] \"283\"\n\n\n$g3[[2]]\n$g3[[2]][[1]]\n[1] \"335\"\n\n\n$g3[[3]]\n$g3[[3]][[1]]\n[1] \"544\"\n\n\n$g3[[4]]\n$g3[[4]][[1]]\n[1] \"946\"\n\n\n$g3[[5]]\n$g3[[5]][[1]]\n[1] \"C97\"\n\n\n$g3[[6]]\n$g3[[6]][[1]]\n[1] \"G86\"\n\n\n$g3[[7]]\n$g3[[7]][[1]]\n[1] \"K00\"\n\n\n$g3[[8]]\n$g3[[8]][[1]]\n[1] \"M13\"\n\n\n\n$g4\n$g4[[1]]\n$g4[[1]][[1]]\n[1] \"2540\"\n\n\n$g4[[2]]\n$g4[[2]][[1]]\n[1] \"7572\"\n\n$g4[[2]][[2]]\n[1] \"7801\"\n\n\n$g4[[3]]\n$g4[[3]][[1]]\n[1] \"8050\"\n\n\n$g4[[4]]\n$g4[[4]][[1]]\n[1] \"C174\"\n\n\n$g4[[5]]\n$g4[[5]][[1]]\n[1] \"G928\"\n\n\n$g4[[6]]\n$g4[[6]][[1]]\n[1] \"J278\"\n\n\n$g4[[7]]\n$g4[[7]][[1]]\n[1] \"L182\"\n\n\n$g4[[8]]\n$g4[[8]][[1]]\n[1] \"Q402\"\n\n\n\n$g5\n$g5[[1]]\n$g5[[1]][[1]]\n[1] \"44188\"\n\n\n$g5[[2]]\n$g5[[2]][[1]]\n[1] \"81241\"\n\n\n$g5[[3]]\n$g5[[3]][[1]]\n[1] \"92652\"\n\n$g5[[3]][[2]]\n[1] \"96368\"\n\n\n$g5[[4]]\n$g5[[4]][[1]]\n[1] \"S0273\"\n\n\n$g5[[5]]\n$g5[[5]][[1]]\n[1] \"3754F\"\n\n\n$g5[[6]]\n$g5[[6]][[1]]\n[1] \"4047F\"\n```\n\n\n:::\n:::\n\n\n\n\n::: \n\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n# Reduce Groups\n\n::: {.panel-tabset}\n\n## reduce_runs\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nreduce_runs <- function(x) {\n  \n  if (sf_nchar(x) == 1) \n    return(x)\n\n  test <- setNames(rep(0, 37), c(0:9, \"&\", LETTERS))\n  \n  vec <- test[c(splits(x), \"&\")]\n  \n  vec <- vec[not_na(vec)]\n  \n  test[names(vec)] <- 1\n  \n  test[names(test) == \"&\"] <- 0\n\n  groups <- data.table(\n    value = names(test),\n    keys = test,\n    group = groupid(test)) |>\n    fgroup_by(group)\n  \n  groups <- join(\n    groups, \n    fcount(groups, group), \n    on = \"group\", \n    verbose = 0) |> \n    fungroup() |> \n    fsubset(keys == 1) |>\n    fsubset(N >= 3) |>\n    fselect(value, group)\n    \n  if (empty(groups)) \n    return(x)\n  \n  xgroups <- gchop(\n    groups$value, \n    groups$group) |>\n    map(smush) |>\n    list_c()\n  \n  if (all(xgroups == smush(c(0:9, \"&\", LETTERS)))) \n    return(\"[A-Z0-9]\")\n  \n  replacements <- dplyr::left_join(\n    dplyr::slice_min(groups, by = group, order_by = value) |> dplyr::rename(start = value),\n    dplyr::slice_max(groups, by = group, order_by = value) |> dplyr::rename(end = value),\n    by = dplyr::join_by(group)) |>\n    glue::glue_data(\"{start}-{end}\") |>\n    as.vector()\n\n  bracket(replace_regex(x, xgroups, replacements))\n}\n```\n:::\n\n\n\n\n## red1\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nred1 <- function(x) {\n  \n  x <- getelem(x, \"g1\")[[1]]\n  \n  if (empty(x)) \n    return(character(0))\n  \n  re <- sort_order(x) |> \n    reduce_runs()\n  \n  if (re == \"[A-Z0-9]\") \n    return(paste0(\"^\", re, \"{5}$\"))\n  \n  post <- iif_else(\n    sf_detect(\n      re, \n      \"\\\\[?[0-9]{1}\"), \n    \"[A-Z0-9]\", \n    \"[0-9]\"\n    )\n  \n  paste0(\"^\", re, post, \"{4}\")\n}\n\n# return(glue::glue(\"^{re}{{5}}$\"))\n# glue::glue(\"^{re}{post}{{4}}$\")\n\nlong_test2 |>\n  split_lengths() |> \n  remove_redundant() |> \n  split_first() |>\n  process_groups() |> \n  red1()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^[CEGS0-35-79][A-Z0-9]{4}\"\n```\n\n\n:::\n\n```{.r .cell-code}\nhcpcs_tests |> \n  split_lengths() |> \n  remove_redundant() |> \n  split_first() |>\n  process_groups() |> \n  red1()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^[GJ04-6][A-Z0-9]{4}\"\n```\n\n\n:::\n\n```{.r .cell-code}\nc(LETTERS[1:5], 0:9) |> \n  split_lengths() |> \n  remove_redundant() |> \n  split_first() |>\n  process_groups() |> \n  red1()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^[A-E0-9][A-Z0-9]{4}\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlist(g1 = list(c(0:9, LETTERS))) |> \n  red1()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^[A-Z0-9]{5}$\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlist(g1 = list(c(LETTERS[1:5], 0:9))) |> \n  red1()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^[A-E0-9][A-Z0-9]{4}\"\n```\n\n\n:::\n:::\n\n\n\n\n## red2\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nred2 <- function(x) {\n  \n  x <- getelem(x, \"g2\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  modify_if(x, len_gt_one, function(x) {\n    \n    parts <- split_max_vlen(x) |> \n    as.data.frame() |>\n    map(uniq_narm) |>\n    map(sort_order) |>\n    map(reduce_runs) |>\n    delist()\n\n  multi <- sf_nchar(parts) > 1\n  nobrk <- !sf_detect(parts[multi], \"\\\\[|\\\\]\")\n  \n  parts[multi] <- iif_else(\n    any(nobrk), \n    map_chr(parts[multi], bracket), \n    parts[multi])\n  \n  smush(parts)\n  })\n}\n\nlong_test2[sf_nchar(long_test2) == 2] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  red2()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"0[2-5]\"\n\n[[2]]\n[1] \"15\"\n\n[[3]]\n[1] \"2[027]\"\n\n[[4]]\n[1] \"3[0-24-6]\"\n\n[[5]]\n[1] \"5[0458]\"\n\n[[6]]\n[1] \"6[134]\"\n\n[[7]]\n[1] \"76\"\n\n[[8]]\n[1] \"9[25]\"\n\n[[9]]\n[1] \"C[79]\"\n\n[[10]]\n[1] \"E0\"\n\n[[11]]\n[1] \"G0\"\n\n[[12]]\n[1] \"S2\"\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"A\", c(0:5, LETTERS)) |> \n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  red2()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"A[A-Z0-5]\"\n```\n\n\n:::\n:::\n\n\n\n\n## red3\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nred3 <- function(x) {\n  \n  x <- getelem(x, \"g3\")\n  \n  if (empty(x)) return(character(0))\n  \n  map(x, function(x) {\n    \n    modify_if(x, len_gt_one, function(x) {\n      \n      parts <- split_max_vlen(x) |> \n        as.data.frame() |>\n        map(uniq_narm) |> \n        map(sort_order) |>\n        map(reduce_runs) |> \n        delist()\n      \n      multi <- sf_nchar(parts) > 1\n      nobrk <- !sf_detect(parts[multi], \"\\\\[|\\\\]\")\n      \n      parts[multi] <- iif_else(any(nobrk), map_chr(parts[multi], bracket), parts[multi])\n      smush(parts)\n    })\n  })\n}\n\nlong_test2[sf_nchar(long_test2) == 3] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  red3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"02[1267]\"\n\n[[1]][[2]]\n[1] \"03[23]\"\n\n[[1]][[3]]\n[1] \"04[24]\"\n\n[[1]][[4]]\n[1] \"050\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"157\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"209\"\n\n[[3]][[2]]\n[1] \"225\"\n\n[[3]][[3]]\n[1] \"271\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"308\"\n\n[[4]][[2]]\n[1] \"312\"\n\n[[4]][[3]]\n[1] \"326\"\n\n[[4]][[4]]\n[1] \"34[78]\"\n\n[[4]][[5]]\n[1] \"355\"\n\n[[4]][[6]]\n[1] \"362\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"50[35]\"\n\n[[5]][[2]]\n[1] \"544\"\n\n[[5]][[3]]\n[1] \"55[23]\"\n\n[[5]][[4]]\n[1] \"58[5-9]\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"61[02]\"\n\n[[6]][[2]]\n[1] \"630\"\n\n[[6]][[3]]\n[1] \"64[46]\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"765\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"92[0-2]\"\n\n[[8]][[2]]\n[1] \"958\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"C75\"\n\n[[9]][[2]]\n[1] \"C97\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"E06\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"G0[24]\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"S23\"\n```\n\n\n:::\n:::\n\n\n\n\n## red4\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nred4 <- function(x) {\n  \n  x <- getelem(x, \"g4\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  map(x, function(x) {\n    \n    modify_if(x, len_gt_one, function(x) {\n      \n      parts <- split_max_vlen(x) |> \n        as.data.frame() |>\n        map(uniq_narm) |> \n        map(sort_order) |>\n        map(reduce_runs) |> \n        delist()\n      \n      multi <- sf_nchar(parts) > 1\n      nobrk <- !sf_detect(parts[multi], \"\\\\[|\\\\]\")\n      \n      parts[multi] <- iif_else(any(nobrk), map_chr(parts[multi], bracket), parts[multi])\n      smush(parts)\n    })\n  })\n}\n\nlong_test2[sf_nchar(long_test2) == 4] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  red4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"050[67]\"\n\n[[1]][[2]]\n[1] \"021[457-9]\"\n\n[[1]][[3]]\n[1] \"022[0-2]\"\n\n[[1]][[4]]\n[1] \"026[3569]\"\n\n[[1]][[5]]\n[1] \"027[45]\"\n\n[[1]][[6]]\n[1] \"0329\"\n\n[[1]][[7]]\n[1] \"0330\"\n\n[[1]][[8]]\n[1] \"0422\"\n\n[[1]][[9]]\n[1] \"044[45]\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"1577\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"2093\"\n\n[[3]][[2]]\n[1] \"225[12]\"\n\n[[3]][[3]]\n[1] \"2719\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"3080\"\n\n[[4]][[2]]\n[1] \"3123\"\n\n[[4]][[3]]\n[1] \"3267\"\n\n[[4]][[4]]\n[1] \"3557\"\n\n[[4]][[5]]\n[1] \"3622\"\n\n[[4]][[6]]\n[1] \"3471\"\n\n[[4]][[7]]\n[1] \"348[1-3]\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"544[23]\"\n\n[[5]][[2]]\n[1] \"5030\"\n\n[[5]][[3]]\n[1] \"5054\"\n\n[[5]][[4]]\n[1] \"552[05]\"\n\n[[5]][[5]]\n[1] \"5530\"\n\n[[5]][[6]]\n[1] \"5857\"\n\n[[5]][[7]]\n[1] \"5860\"\n\n[[5]][[8]]\n[1] \"587[02]\"\n\n[[5]][[9]]\n[1] \"5880\"\n\n[[5]][[10]]\n[1] \"589[024]\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"630[34]\"\n\n[[6]][[2]]\n[1] \"6100\"\n\n[[6]][[3]]\n[1] \"6125\"\n\n[[6]][[4]]\n[1] \"644[289]\"\n\n[[6]][[5]]\n[1] \"6463\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"7651\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"9587\"\n\n[[8]][[2]]\n[1] \"920[28]\"\n\n[[8]][[3]]\n[1] \"921[34]\"\n\n[[8]][[4]]\n[1] \"922[02-4]\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"C750\"\n\n[[9]][[2]]\n[1] \"C977\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"E067\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"G027\"\n\n[[11]][[2]]\n[1] \"G041\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"S234\"\n```\n\n\n:::\n:::\n\n\n\n\n## red5\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nred5 <- function(x) {\n  \n  x <- getelem(x, \"g5\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  map(x, function(x) {\n    \n    modify_if(x, len_gt_one, function(x) {\n      \n      parts <- split_max_vlen(x) |> \n        as.data.frame() |>\n        map(uniq_narm) |> \n        map(sort_order) |>\n        map(reduce_runs) |> \n        delist()\n      \n      multi <- sf_nchar(parts) > 1\n      nobrk <- !sf_detect(parts[multi], \"\\\\[|\\\\]\")\n      \n      parts[multi] <- iif_else(any(nobrk), map_chr(parts[multi], bracket), parts[multi])\n      smush(parts)\n    })\n  })\n}\n\nlong_test2[sf_nchar(long_test2) == 5] |>\n  split_lengths() |>\n  # remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  red5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]][[1]]\n[1] \"15777\"\n\n\n[[2]]\n[[2]][[1]]\n[1] \"20939\"\n\n[[2]][[2]]\n[1] \"2719[78]\"\n\n[[2]][[3]]\n[1] \"2251[0-5]\"\n\n[[2]][[4]]\n[1] \"2252[67]\"\n\n\n[[3]]\n[[3]][[1]]\n[1] \"3080[12]\"\n\n[[3]][[2]]\n[1] \"31231\"\n\n[[3]][[3]]\n[1] \"32673\"\n\n[[3]][[4]]\n[1] \"3471[3-7]\"\n\n[[3]][[5]]\n[1] \"35572\"\n\n[[3]][[6]]\n[1] \"36221\"\n\n[[3]][[7]]\n[1] \"34812\"\n\n[[3]][[8]]\n[1] \"34820\"\n\n[[3]][[9]]\n[1] \"3483[34]\"\n\n\n[[4]]\n[[4]][[1]]\n[1] \"50300\"\n\n[[4]][[2]]\n[1] \"50540\"\n\n[[4]][[3]]\n[1] \"55300\"\n\n[[4]][[4]]\n[1] \"58575\"\n\n[[4]][[5]]\n[1] \"5860[05]\"\n\n[[4]][[6]]\n[1] \"5880[05]\"\n\n[[4]][[7]]\n[1] \"54420\"\n\n[[4]][[8]]\n[1] \"54430\"\n\n[[4]][[9]]\n[1] \"55200\"\n\n[[4]][[10]]\n[1] \"55250\"\n\n[[4]][[11]]\n[1] \"58700\"\n\n[[4]][[12]]\n[1] \"58720\"\n\n[[4]][[13]]\n[1] \"58900\"\n\n[[4]][[14]]\n[1] \"5892[05]\"\n\n[[4]][[15]]\n[1] \"5894[03]\"\n\n\n[[5]]\n[[5]][[1]]\n[1] \"6100[01]\"\n\n[[5]][[2]]\n[1] \"61253\"\n\n[[5]][[3]]\n[1] \"6463[46]\"\n\n[[5]][[4]]\n[1] \"63035\"\n\n[[5]][[5]]\n[1] \"6304[3-8]\"\n\n[[5]][[6]]\n[1] \"64421\"\n\n[[5]][[7]]\n[1] \"6448[04]\"\n\n[[5]][[8]]\n[1] \"6449[1245]\"\n\n\n[[6]]\n[[6]][[1]]\n[1] \"76514\"\n\n\n[[7]]\n[[7]][[1]]\n[1] \"95870\"\n\n[[7]][[2]]\n[1] \"92025\"\n\n[[7]][[3]]\n[1] \"9208[1-3]\"\n\n[[7]][[4]]\n[1] \"9213[2-4]\"\n\n[[7]][[5]]\n[1] \"92145\"\n\n[[7]][[6]]\n[1] \"9220[12]\"\n\n[[7]][[7]]\n[1] \"9222[7-9]\"\n\n[[7]][[8]]\n[1] \"92235\"\n\n[[7]][[9]]\n[1] \"9224[02]\"\n\n\n[[8]]\n[[8]][[1]]\n[1] \"C750[1245]\"\n\n[[8]][[2]]\n[1] \"C9771\"\n\n\n[[9]]\n[[9]][[1]]\n[1] \"E0675\"\n\n\n[[10]]\n[[10]][[1]]\n[1] \"G0279\"\n\n[[10]][[2]]\n[1] \"G041[2-5]\"\n\n\n[[11]]\n[[11]][[1]]\n[1] \"S2342\"\n\n\n[[12]]\n[[12]][[1]]\n[1] \"0329T\"\n\n[[12]][[2]]\n[1] \"0330T\"\n\n[[12]][[3]]\n[1] \"0422T\"\n\n[[12]][[4]]\n[1] \"0214T\"\n\n[[12]][[5]]\n[1] \"0215T\"\n\n[[12]][[6]]\n[1] \"0217T\"\n\n[[12]][[7]]\n[1] \"0218T\"\n\n[[12]][[8]]\n[1] \"0219T\"\n\n[[12]][[9]]\n[1] \"0220T\"\n\n[[12]][[10]]\n[1] \"0221T\"\n\n[[12]][[11]]\n[1] \"0222T\"\n\n[[12]][[12]]\n[1] \"0263T\"\n\n[[12]][[13]]\n[1] \"0265T\"\n\n[[12]][[14]]\n[1] \"0266T\"\n\n[[12]][[15]]\n[1] \"0269T\"\n\n[[12]][[16]]\n[1] \"0274T\"\n\n[[12]][[17]]\n[1] \"0275T\"\n\n[[12]][[18]]\n[1] \"0444T\"\n\n[[12]][[19]]\n[1] \"0445T\"\n\n[[12]][[20]]\n[1] \"0506T\"\n\n[[12]][[21]]\n[1] \"0507T\"\n```\n\n\n:::\n:::\n\n\n\n\n## reduce_groups\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nreduce_groups <- \\(x) {\n  \n  list(\n    g1 = red1(x),\n    g2 = red2(x),\n    g3 = red3(x),\n    g4 = red4(x),\n    g5 = red5(x)\n  )\n}\n\nlong_test2 |>\n  split_lengths() |>\n  # remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  reduce_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$g1\n[1] \"^[CEGS0-35-79][A-Z0-9]{4}\"\n\n$g2\n$g2[[1]]\n[1] \"0[2-5]\"\n\n$g2[[2]]\n[1] \"15\"\n\n$g2[[3]]\n[1] \"2[027]\"\n\n$g2[[4]]\n[1] \"3[0-24-6]\"\n\n$g2[[5]]\n[1] \"5[0458]\"\n\n$g2[[6]]\n[1] \"6[134]\"\n\n$g2[[7]]\n[1] \"76\"\n\n$g2[[8]]\n[1] \"9[25]\"\n\n$g2[[9]]\n[1] \"C[79]\"\n\n$g2[[10]]\n[1] \"E0\"\n\n$g2[[11]]\n[1] \"G0\"\n\n$g2[[12]]\n[1] \"S2\"\n\n\n$g3\n$g3[[1]]\n$g3[[1]][[1]]\n[1] \"02[1267]\"\n\n$g3[[1]][[2]]\n[1] \"03[23]\"\n\n$g3[[1]][[3]]\n[1] \"04[24]\"\n\n$g3[[1]][[4]]\n[1] \"050\"\n\n\n$g3[[2]]\n$g3[[2]][[1]]\n[1] \"157\"\n\n\n$g3[[3]]\n$g3[[3]][[1]]\n[1] \"209\"\n\n$g3[[3]][[2]]\n[1] \"225\"\n\n$g3[[3]][[3]]\n[1] \"271\"\n\n\n$g3[[4]]\n$g3[[4]][[1]]\n[1] \"308\"\n\n$g3[[4]][[2]]\n[1] \"312\"\n\n$g3[[4]][[3]]\n[1] \"326\"\n\n$g3[[4]][[4]]\n[1] \"34[78]\"\n\n$g3[[4]][[5]]\n[1] \"355\"\n\n$g3[[4]][[6]]\n[1] \"362\"\n\n\n$g3[[5]]\n$g3[[5]][[1]]\n[1] \"50[35]\"\n\n$g3[[5]][[2]]\n[1] \"544\"\n\n$g3[[5]][[3]]\n[1] \"55[23]\"\n\n$g3[[5]][[4]]\n[1] \"58[5-9]\"\n\n\n$g3[[6]]\n$g3[[6]][[1]]\n[1] \"61[02]\"\n\n$g3[[6]][[2]]\n[1] \"630\"\n\n$g3[[6]][[3]]\n[1] \"64[46]\"\n\n\n$g3[[7]]\n$g3[[7]][[1]]\n[1] \"765\"\n\n\n$g3[[8]]\n$g3[[8]][[1]]\n[1] \"92[0-2]\"\n\n$g3[[8]][[2]]\n[1] \"958\"\n\n\n$g3[[9]]\n$g3[[9]][[1]]\n[1] \"C75\"\n\n$g3[[9]][[2]]\n[1] \"C97\"\n\n\n$g3[[10]]\n$g3[[10]][[1]]\n[1] \"E06\"\n\n\n$g3[[11]]\n$g3[[11]][[1]]\n[1] \"G0[24]\"\n\n\n$g3[[12]]\n$g3[[12]][[1]]\n[1] \"S23\"\n\n\n\n$g4\n$g4[[1]]\n$g4[[1]][[1]]\n[1] \"050[67]\"\n\n$g4[[1]][[2]]\n[1] \"021[457-9]\"\n\n$g4[[1]][[3]]\n[1] \"022[0-2]\"\n\n$g4[[1]][[4]]\n[1] \"026[3569]\"\n\n$g4[[1]][[5]]\n[1] \"027[45]\"\n\n$g4[[1]][[6]]\n[1] \"0329\"\n\n$g4[[1]][[7]]\n[1] \"0330\"\n\n$g4[[1]][[8]]\n[1] \"0422\"\n\n$g4[[1]][[9]]\n[1] \"044[45]\"\n\n\n$g4[[2]]\n$g4[[2]][[1]]\n[1] \"1577\"\n\n\n$g4[[3]]\n$g4[[3]][[1]]\n[1] \"2093\"\n\n$g4[[3]][[2]]\n[1] \"225[12]\"\n\n$g4[[3]][[3]]\n[1] \"2719\"\n\n\n$g4[[4]]\n$g4[[4]][[1]]\n[1] \"3080\"\n\n$g4[[4]][[2]]\n[1] \"3123\"\n\n$g4[[4]][[3]]\n[1] \"3267\"\n\n$g4[[4]][[4]]\n[1] \"3557\"\n\n$g4[[4]][[5]]\n[1] \"3622\"\n\n$g4[[4]][[6]]\n[1] \"3471\"\n\n$g4[[4]][[7]]\n[1] \"348[1-3]\"\n\n\n$g4[[5]]\n$g4[[5]][[1]]\n[1] \"544[23]\"\n\n$g4[[5]][[2]]\n[1] \"5030\"\n\n$g4[[5]][[3]]\n[1] \"5054\"\n\n$g4[[5]][[4]]\n[1] \"552[05]\"\n\n$g4[[5]][[5]]\n[1] \"5530\"\n\n$g4[[5]][[6]]\n[1] \"5857\"\n\n$g4[[5]][[7]]\n[1] \"5860\"\n\n$g4[[5]][[8]]\n[1] \"587[02]\"\n\n$g4[[5]][[9]]\n[1] \"5880\"\n\n$g4[[5]][[10]]\n[1] \"589[024]\"\n\n\n$g4[[6]]\n$g4[[6]][[1]]\n[1] \"630[34]\"\n\n$g4[[6]][[2]]\n[1] \"6100\"\n\n$g4[[6]][[3]]\n[1] \"6125\"\n\n$g4[[6]][[4]]\n[1] \"644[289]\"\n\n$g4[[6]][[5]]\n[1] \"6463\"\n\n\n$g4[[7]]\n$g4[[7]][[1]]\n[1] \"7651\"\n\n\n$g4[[8]]\n$g4[[8]][[1]]\n[1] \"9587\"\n\n$g4[[8]][[2]]\n[1] \"920[28]\"\n\n$g4[[8]][[3]]\n[1] \"921[34]\"\n\n$g4[[8]][[4]]\n[1] \"922[02-4]\"\n\n\n$g4[[9]]\n$g4[[9]][[1]]\n[1] \"C750\"\n\n$g4[[9]][[2]]\n[1] \"C977\"\n\n\n$g4[[10]]\n$g4[[10]][[1]]\n[1] \"E067\"\n\n\n$g4[[11]]\n$g4[[11]][[1]]\n[1] \"G027\"\n\n$g4[[11]][[2]]\n[1] \"G041\"\n\n\n$g4[[12]]\n$g4[[12]][[1]]\n[1] \"S234\"\n\n\n\n$g5\n$g5[[1]]\n$g5[[1]][[1]]\n[1] \"15777\"\n\n\n$g5[[2]]\n$g5[[2]][[1]]\n[1] \"20939\"\n\n$g5[[2]][[2]]\n[1] \"2719[78]\"\n\n$g5[[2]][[3]]\n[1] \"2251[0-5]\"\n\n$g5[[2]][[4]]\n[1] \"2252[67]\"\n\n\n$g5[[3]]\n$g5[[3]][[1]]\n[1] \"3080[12]\"\n\n$g5[[3]][[2]]\n[1] \"31231\"\n\n$g5[[3]][[3]]\n[1] \"32673\"\n\n$g5[[3]][[4]]\n[1] \"3471[3-7]\"\n\n$g5[[3]][[5]]\n[1] \"35572\"\n\n$g5[[3]][[6]]\n[1] \"36221\"\n\n$g5[[3]][[7]]\n[1] \"34812\"\n\n$g5[[3]][[8]]\n[1] \"34820\"\n\n$g5[[3]][[9]]\n[1] \"3483[34]\"\n\n\n$g5[[4]]\n$g5[[4]][[1]]\n[1] \"50300\"\n\n$g5[[4]][[2]]\n[1] \"50540\"\n\n$g5[[4]][[3]]\n[1] \"55300\"\n\n$g5[[4]][[4]]\n[1] \"58575\"\n\n$g5[[4]][[5]]\n[1] \"5860[05]\"\n\n$g5[[4]][[6]]\n[1] \"5880[05]\"\n\n$g5[[4]][[7]]\n[1] \"54420\"\n\n$g5[[4]][[8]]\n[1] \"54430\"\n\n$g5[[4]][[9]]\n[1] \"55200\"\n\n$g5[[4]][[10]]\n[1] \"55250\"\n\n$g5[[4]][[11]]\n[1] \"58700\"\n\n$g5[[4]][[12]]\n[1] \"58720\"\n\n$g5[[4]][[13]]\n[1] \"58900\"\n\n$g5[[4]][[14]]\n[1] \"5892[05]\"\n\n$g5[[4]][[15]]\n[1] \"5894[03]\"\n\n\n$g5[[5]]\n$g5[[5]][[1]]\n[1] \"6100[01]\"\n\n$g5[[5]][[2]]\n[1] \"61253\"\n\n$g5[[5]][[3]]\n[1] \"6463[46]\"\n\n$g5[[5]][[4]]\n[1] \"63035\"\n\n$g5[[5]][[5]]\n[1] \"6304[3-8]\"\n\n$g5[[5]][[6]]\n[1] \"64421\"\n\n$g5[[5]][[7]]\n[1] \"6448[04]\"\n\n$g5[[5]][[8]]\n[1] \"6449[1245]\"\n\n\n$g5[[6]]\n$g5[[6]][[1]]\n[1] \"76514\"\n\n\n$g5[[7]]\n$g5[[7]][[1]]\n[1] \"95870\"\n\n$g5[[7]][[2]]\n[1] \"92025\"\n\n$g5[[7]][[3]]\n[1] \"9208[1-3]\"\n\n$g5[[7]][[4]]\n[1] \"9213[2-4]\"\n\n$g5[[7]][[5]]\n[1] \"92145\"\n\n$g5[[7]][[6]]\n[1] \"9220[12]\"\n\n$g5[[7]][[7]]\n[1] \"9222[7-9]\"\n\n$g5[[7]][[8]]\n[1] \"92235\"\n\n$g5[[7]][[9]]\n[1] \"9224[02]\"\n\n\n$g5[[8]]\n$g5[[8]][[1]]\n[1] \"C750[1245]\"\n\n$g5[[8]][[2]]\n[1] \"C9771\"\n\n\n$g5[[9]]\n$g5[[9]][[1]]\n[1] \"E0675\"\n\n\n$g5[[10]]\n$g5[[10]][[1]]\n[1] \"G0279\"\n\n$g5[[10]][[2]]\n[1] \"G041[2-5]\"\n\n\n$g5[[11]]\n$g5[[11]][[1]]\n[1] \"S2342\"\n\n\n$g5[[12]]\n$g5[[12]][[1]]\n[1] \"0329T\"\n\n$g5[[12]][[2]]\n[1] \"0330T\"\n\n$g5[[12]][[3]]\n[1] \"0422T\"\n\n$g5[[12]][[4]]\n[1] \"0214T\"\n\n$g5[[12]][[5]]\n[1] \"0215T\"\n\n$g5[[12]][[6]]\n[1] \"0217T\"\n\n$g5[[12]][[7]]\n[1] \"0218T\"\n\n$g5[[12]][[8]]\n[1] \"0219T\"\n\n$g5[[12]][[9]]\n[1] \"0220T\"\n\n$g5[[12]][[10]]\n[1] \"0221T\"\n\n$g5[[12]][[11]]\n[1] \"0222T\"\n\n$g5[[12]][[12]]\n[1] \"0263T\"\n\n$g5[[12]][[13]]\n[1] \"0265T\"\n\n$g5[[12]][[14]]\n[1] \"0266T\"\n\n$g5[[12]][[15]]\n[1] \"0269T\"\n\n$g5[[12]][[16]]\n[1] \"0274T\"\n\n$g5[[12]][[17]]\n[1] \"0275T\"\n\n$g5[[12]][[18]]\n[1] \"0444T\"\n\n$g5[[12]][[19]]\n[1] \"0445T\"\n\n$g5[[12]][[20]]\n[1] \"0506T\"\n\n$g5[[12]][[21]]\n[1] \"0507T\"\n```\n\n\n:::\n:::\n\n\n\n\n::: \n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n\n# Recombine Vectors\n\n::: {.panel-tabset}\n\n## recombine2\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrecombine2 <- function(x) {\n  \n  x <- getelem(x, \"g2\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  sf_convert(str_glue(\"^({sf_collapse(list_c(x), collapse = '|')})[A-Z0-9]{{3}}$\"))\n  \n  # paste0(\"^(\", sf_collapse(list_c(x), collapse = \"|\"), \")[A-Z0-9]{3}$\")\n}\n\nlong_test2[sf_nchar(long_test2) == 2] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |> \n  recombine2()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^(0[2-5]|15|2[027]|3[0-24-6]|5[0458]|6[134]|76|9[25]|C[79]|E0|G0|S2)[A-Z0-9]{3}$\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs2() |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |> \n  recombine2()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"^(3[35]|50|72|88|P9|S9)[A-Z0-9]{3}$\"\n```\n\n\n:::\n:::\n\n\n\n\n## recombine3\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrecombine3 <- function(x) {\n  \n  x <- getelem(x, \"g3\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  c(\n    if (empty(x[vlen(x) == 1])) \n      character(0) \n    else \n      sf_convert(str_glue(\"{list_c(x[vlen(x) == 1])}\")),\n    \n    if (empty(x[vlen(x) > 1])) \n      character(0) \n    else \n      map(\n        x[vlen(x) > 1], function(x) {\n          \n          front <- uniq(sf_sub(delist(x), start = 1, stop = 1))\n          back  <- sf_collapse(sf_remove(delist(x), str_glue(\"^[{front}]{{1}}\")), collapse = \"|\")\n          sf_convert(str_glue(\"{front}({back})\"))\n          }\n        )\n    )\n  }\n\nlong_test2[sf_nchar(long_test2) == 3] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  reduce_groups() |> \n  recombine3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"157\"\n\n[[2]]\n[1] \"765\"\n\n[[3]]\n[1] \"E06\"\n\n[[4]]\n[1] \"G0[24]\"\n\n[[5]]\n[1] \"S23\"\n\n[[6]]\n[1] \"0(2[1267]|3[23]|4[24]|50)\"\n\n[[7]]\n[1] \"2(09|25|71)\"\n\n[[8]]\n[1] \"3(08|12|26|4[78]|55|62)\"\n\n[[9]]\n[1] \"5(0[35]|44|5[23]|8[5-9])\"\n\n[[10]]\n[1] \"6(1[02]|30|4[46])\"\n\n[[11]]\n[1] \"9(2[0-2]|58)\"\n\n[[12]]\n[1] \"C(75|97)\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs(50) |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |> \n  recombine3()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"193\"\n\n[[2]]\n[1] \"383\"\n\n[[3]]\n[1] \"400\"\n\n[[4]]\n[1] \"598\"\n\n[[5]]\n[1] \"770\"\n\n[[6]]\n[1] \"A95\"\n\n[[7]]\n[1] \"D21\"\n\n[[8]]\n[1] \"G8[78]\"\n\n[[9]]\n[1] \"H20\"\n\n[[10]]\n[1] \"K10\"\n\n[[11]]\n[1] \"M12\"\n\n[[12]]\n[1] \"0(19|22|46|73)\"\n\n[[13]]\n[1] \"2(51|83|90)\"\n\n[[14]]\n[1] \"6(06|52|85)\"\n\n[[15]]\n[1] \"8(20|7[24])\"\n\n[[16]]\n[1] \"9(36|69)\"\n\n[[17]]\n[1] \"C(26|89)\"\n\n[[18]]\n[1] \"J(12|72)\"\n\n[[19]]\n[1] \"L(5[26]|74|84)\"\n```\n\n\n:::\n:::\n\n\n\n\n## recombine4\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrecombine4 <- function(x) {\n  \n  x <- getelem(x, \"g4\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  c(\n    if (empty(x[vlen(x) == 1])) \n      character(0) \n    else \n      sf_convert(str_glue(\"{list_c(x[vlen(x) == 1])}\")),\n    \n    if (empty(x[vlen(x) > 1])) \n      character(0) \n    else \n      map(\n        x[vlen(x) > 1], function(x) {\n          \n          front <- uniq(sf_sub(delist(x), start = 1, stop = 1))\n          back  <- sf_collapse(sf_remove(delist(x), str_glue(\"^[{front}]{{1}}\")), collapse = \"|\")\n          sf_convert(str_glue(\"{front}({back})\"))\n          }\n        )\n    )\n  }\n\nlong_test2[sf_nchar(long_test2) == 4] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  reduce_groups() |> \n  recombine4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"1577\"\n\n[[2]]\n[1] \"7651\"\n\n[[3]]\n[1] \"E067\"\n\n[[4]]\n[1] \"S234\"\n\n[[5]]\n[1] \"0(50[67]|21[457-9]|22[0-2]|26[3569]|27[45]|329|330|422|44[45])\"\n\n[[6]]\n[1] \"2(093|25[12]|719)\"\n\n[[7]]\n[1] \"3(080|123|267|557|622|471|48[1-3])\"\n\n[[8]]\n[1] \"5(44[23]|030|054|52[05]|530|857|860|87[02]|880|89[024])\"\n\n[[9]]\n[1] \"6(30[34]|100|125|44[289]|463)\"\n\n[[10]]\n[1] \"9(587|20[28]|21[34]|22[02-4])\"\n\n[[11]]\n[1] \"C(750|977)\"\n\n[[12]]\n[1] \"G(027|041)\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs(50) |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |> \n  recombine4()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"5366\"\n\n[[2]]\n[1] \"7422\"\n\n[[3]]\n[1] \"A551\"\n\n[[4]]\n[1] \"H204\"\n\n[[5]]\n[1] \"L181\"\n\n[[6]]\n[1] \"M106\"\n\n[[7]]\n[1] \"S514\"\n\n[[8]]\n[1] \"T102\"\n\n[[9]]\n[1] \"0(245|117|171)\"\n\n[[10]]\n[1] \"3(305|369)\"\n\n[[11]]\n[1] \"6(462|942)\"\n\n[[12]]\n[1] \"8(729|779)\"\n```\n\n\n:::\n:::\n\n\n\n\n## recombine5\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrecombine5 <- function(x) {\n  \n  x <- getelem(x, \"g5\")\n  \n  if (empty(x)) \n    return(character(0))\n  \n  c(\n    if (empty(x[vlen(x) == 1])) \n      character(0) \n    else \n      sf_convert(str_glue(\"{list_c(x[vlen(x) == 1])}\")),\n    \n    if (empty(x[vlen(x) > 1])) \n      character(0) \n    else \n      map(\n        x[vlen(x) > 1], function(x) {\n          \n          front <- uniq(sf_sub(delist(x), start = 1, stop = 1))\n          back  <- sf_collapse(sf_remove(delist(x), str_glue(\"^[{front}]{{1}}\")), collapse = \"|\")\n          sf_convert(str_glue(\"{front}({back})\"))\n          }\n        )\n    )\n  }\n\nlong_test2[sf_nchar(long_test2) == 5] |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  reduce_groups() |> \n  recombine5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"15777\"\n\n[[2]]\n[1] \"76514\"\n\n[[3]]\n[1] \"E0675\"\n\n[[4]]\n[1] \"S2342\"\n\n[[5]]\n[1] \"2(0939|719[78]|251[0-5]|252[67])\"\n\n[[6]]\n[1] \"3(080[12]|1231|2673|471[3-7]|5572|6221|4812|4820|483[34])\"\n\n[[7]]\n[1] \"5(0300|0540|5300|8575|860[05]|880[05]|4420|4430|5200|5250|8700|8720|8900|892[05]|894[03])\"\n\n[[8]]\n[1] \"6(100[01]|1253|463[46]|3035|304[3-8]|4421|448[04]|449[1245])\"\n\n[[9]]\n[1] \"9(5870|2025|208[1-3]|213[2-4]|2145|220[12]|222[7-9]|2235|224[02])\"\n\n[[10]]\n[1] \"C(750[1245]|9771)\"\n\n[[11]]\n[1] \"G(0279|041[2-5])\"\n\n[[12]]\n[1] \"0(329T|330T|422T|214T|215T|217T|218T|219T|220T|221T|222T|263T|265T|266T|269T|274T|275T|444T|445T|506T|507T)\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs(50) |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |> \n  recombine5()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"01960\"\n\n[[2]]\n[1] \"43215\"\n\n[[3]]\n[1] \"55866\"\n\n[[4]]\n[1] \"63746\"\n\n[[5]]\n[1] \"78205\"\n\n[[6]]\n[1] \"92621\"\n\n[[7]]\n[1] \"C7549\"\n\n[[8]]\n[1] \"H1002\"\n\n[[9]]\n[1] \"J9210\"\n\n[[10]]\n[1] \"L4210\"\n\n[[11]]\n[1] \"Q4263\"\n\n[[12]]\n[1] \"S8131\"\n\n[[13]]\n[1] \"T2030\"\n\n[[14]]\n[1] \"1022F\"\n\n[[15]]\n[1] \"0372T\"\n\n[[16]]\n[1] \"1(1044|1302)\"\n\n[[17]]\n[1] \"3(1770|3779)\"\n\n[[18]]\n[1] \"G(2161|6013)\"\n```\n\n\n:::\n:::\n\n\n\n\n## recombine_groups\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrecombine_groups <- \\(x) {\n  \n  list(\n    v1 = x$g1,\n    v2 = recombine2(x),\n    v3 = recombine3(x),\n    v4 = recombine4(x),\n    v5 = recombine5(x)\n  )\n}\n\nlong_test2 |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |> \n  reduce_groups() |> \n  recombine_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$v1\n[1] \"^[CEGS0-35-79][A-Z0-9]{4}\"\n\n$v2\ncharacter(0)\n\n$v3\ncharacter(0)\n\n$v4\ncharacter(0)\n\n$v5\ncharacter(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nrandom_hcpcs(50) |>\n  split_lengths() |>\n  remove_redundant() |>\n  split_first() |>\n  process_groups() |>\n  reduce_groups() |>\n  recombine_groups()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$v1\n[1] \"^H[0-9]{4}\"\n\n$v2\n[1] \"^(0[034]|14|2[17]|3[138]|4[0589]|50|61|8[236]|9[0-259]|A9|C5|E2|G[14689]|J1|L[16]|M1|S0|T1|V5)[A-Z0-9]{3}$\"\n\n$v3\n$v3[[1]]\n[1] \"417\"\n\n$v3[[2]]\n[1] \"671\"\n\n$v3[[3]]\n[1] \"989\"\n\n$v3[[4]]\n[1] \"A42\"\n\n$v3[[5]]\n[1] \"B41\"\n\n$v3[[6]]\n[1] \"C16\"\n\n$v3[[7]]\n[1] \"D01\"\n\n$v3[[8]]\n[1] \"E09\"\n\n$v3[[9]]\n[1] \"G21\"\n\n$v3[[10]]\n[1] \"J84\"\n\n$v3[[11]]\n[1] \"L39\"\n\n$v3[[12]]\n[1] \"S38\"\n\n$v3[[13]]\n[1] \"0(10|2[34]|67)\"\n\n$v3[[14]]\n[1] \"1(10|58)\"\n\n$v3[[15]]\n[1] \"2(28|44|60|98)\"\n\n$v3[[16]]\n[1] \"3(53|72)\"\n\n$v3[[17]]\n[1] \"8(01|7[25]|81)\"\n\n\n$v4\n$v4[[1]]\n[1] \"1203\"\n\n$v4[[2]]\n[1] \"5344\"\n\n$v4[[3]]\n[1] \"9356\"\n\n$v4[[4]]\n[1] \"E123\"\n\n$v4[[5]]\n[1] \"K007\"\n\n$v4[[6]]\n[1] \"L804\"\n\n$v4[[7]]\n[1] \"S943\"\n\n$v4[[8]]\n[1] \"0(185|612|689)\"\n\n$v4[[9]]\n[1] \"2(436|800|926|069|092)\"\n\n$v4[[10]]\n[1] \"4(330|436)\"\n\n$v4[[11]]\n[1] \"6(441|487)\"\n\n$v4[[12]]\n[1] \"7(595|737|801|880)\"\n\n$v4[[13]]\n[1] \"8(124|599|780)\"\n\n$v4[[14]]\n[1] \"A(445|456)\"\n\n$v4[[15]]\n[1] \"C(189|977)\"\n\n$v4[[16]]\n[1] \"G(024|200)\"\n\n$v4[[17]]\n[1] \"Q(424|432)\"\n\n\n$v5\n$v5[[1]]\n[1] \"01462\"\n\n$v5[[2]]\n[1] \"D7250\"\n\n$v5[[3]]\n[1] \"L8631\"\n\n$v5[[4]]\n[1] \"Q4284\"\n\n$v5[[5]]\n[1] \"S2142\"\n\n$v5[[6]]\n[1] \"V2715\"\n\n$v5[[7]]\n[1] \"0731T\"\n\n$v5[[8]]\n[1] \"0297U\"\n\n$v5[[9]]\n[1] \"1(0011|5733)\"\n\n$v5[[10]]\n[1] \"2(5105|6860)\"\n\n$v5[[11]]\n[1] \"3(6200|7181)\"\n\n$v5[[12]]\n[1] \"4(4211|3820|3886)\"\n\n$v5[[13]]\n[1] \"7(0390|2202|7525)\"\n\n$v5[[14]]\n[1] \"8(0051|4410|5130|5597)\"\n\n$v5[[15]]\n[1] \"9(3284|7152)\"\n\n$v5[[16]]\n[1] \"A(4420|6560)\"\n\n$v5[[17]]\n[1] \"E(0680|1221)\"\n\n$v5[[18]]\n[1] \"J(3250|7182|7322)\"\n```\n\n\n:::\n:::\n\n\n\n\n\n::: \n\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n# Collapse Regex\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvec_to_regex <- vrg <- \\(x, n) {\n  \n  if (empty(x)) \n    return(character(0))\n  \n  post <- iif_else(sf_detect(x, \"^\\\\[?[A-Z]\\\\-?\"), \"[0-9]\", \"[A-Z0-9]\")\n  \n  x <- fcase(\n    n == 0, glue::glue(\"^{x}$\"),                \n    n == 1, glue::glue(\"^{x}{post}$\"),\n    n == 2, glue::glue(\"^{x}{post}{{2}}$\"),\n    n == 3, glue::glue(\"^{x}{post}{{3}}$\")\n    )\n    \n  glue::glue_collapse(x)\n}\n\ncollapse_regex <- \\(x) {\n  \n  list(\n    g1 = red1(x),\n    g2 = map_chr(x$g2, red2) |> map_chr(vrg, n = 3) |> glue::as_glue(),\n    g3 = map_chr(x$g3, red3) |> map_chr(vrg, n = 2) |> glue::as_glue(),\n    g4 = map_chr(x$g4, red4) |> map_chr(vrg, n = 1) |> glue::as_glue(),\n    g5 = map_chr(x$g5, red5) |> map_chr(vrg, n = 0) |> glue::as_glue()\n  )\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n{{< pagebreak >}}\n\n\n\n\n\n\n# S7 Class\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhcpcs <- new_class(\n  name = \"hcpcs\",\n  properties = list(\n    input = class_vector,\n    split_length     = new_property(class = class_list, getter = \\(self) split_lengths(self@input)),\n    remove_redundant = new_property(class = class_list, getter = \\(self) remove_redundant(self@split_length)),\n    split_first      = new_property(class = class_list, getter = \\(self) split_first(self@remove_redundant)),\n    process_groups   = new_property(class = class_list, getter = \\(self) process_groups(self@split_first)),\n    reduce_groups    = new_property(class = class_list, getter = \\(self) reduce_groups(self@process_groups)),\n    recombine_groups = new_property(class = class_list, getter = \\(self) recombine_groups(self@reduce_groups))\n    )\n  )\n\nx <- hcpcs(input = random_hcpcs(50))\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<hcpcs>\n @ input           : chr [1:203] \"S\" \"T\" \"C\" \"J1\" \"04\" \"65\" \"J1\" \"97\" \"92\" \"64\" \"G9\" \"21\" ...\n @ split_length    :List of 5\n .. $ x1: chr [1:3] \"C\" \"S\" \"T\"\n .. $ x2: chr [1:41] \"04\" \"11\" \"17\" \"21\" ...\n .. $ x3: chr [1:48] \"017\" \"038\" \"112\" \"158\" ...\n .. $ x4: chr [1:50] \"0258\" \"0278\" \"0406\" \"0516\" ...\n .. $ x5: chr [1:50] \"0097U\" \"0334T\" \"0724T\" \"15272\" ...\n @ remove_redundant:List of 5\n .. $ x1: chr [1:3] \"C\" \"S\" \"T\"\n .. $ x2: chr [1:38] \"04\" \"11\" \"17\" \"21\" ...\n .. $ x3: chr [1:28] \"017\" \"038\" \"158\" \"209\" ...\n .. $ x4: chr [1:23] \"0258\" \"0278\" \"0516\" \"2022\" ...\n .. $ x5: chr [1:25] \"0097U\" \"0334T\" \"0724T\" \"15272\" ...\n @ split_first     :List of 5\n .. $ x1:List of 1\n ..  ..$ : chr [1:3] \"C\" \"S\" \"T\"\n .. $ x2:List of 14\n ..  ..$ : chr \"04\"\n ..  ..$ : chr [1:2] \"11\" \"17\"\n ..  ..$ : chr [1:5] \"21\" \"23\" \"25\" \"27\" ...\n ..  ..$ : chr [1:2] \"30\" \"38\"\n ..  ..$ : chr [1:4] \"42\" \"44\" \"47\" \"49\"\n ..  ..$ : chr [1:3] \"61\" \"64\" \"65\"\n ..  ..$ : chr \"70\"\n ..  ..$ : chr [1:4] \"81\" \"84\" \"85\" \"87\"\n ..  ..$ : chr [1:4] \"92\" \"95\" \"97\" \"99\"\n ..  ..$ : chr [1:3] \"A4\" \"A7\" \"A9\"\n ..  ..$ : chr [1:4] \"G0\" \"G2\" \"G8\" \"G9\"\n ..  ..$ : chr \"H0\"\n ..  ..$ : chr [1:2] \"J1\" \"J7\"\n ..  ..$ : chr [1:2] \"L2\" \"L5\"\n .. $ x3:List of 14\n ..  ..$ : chr [1:2] \"017\" \"038\"\n ..  ..$ : chr \"158\"\n ..  ..$ : chr \"209\"\n ..  ..$ : chr \"335\"\n ..  ..$ : chr \"414\"\n ..  ..$ : chr [1:4] \"506\" \"507\" \"542\" \"598\"\n ..  ..$ : chr [1:3] \"601\" \"603\" \"669\"\n ..  ..$ : chr [1:6] \"741\" \"742\" \"758\" \"768\" ...\n ..  ..$ : chr [1:2] \"867\" \"868\"\n ..  ..$ : chr \"B50\"\n ..  ..$ : chr \"G60\"\n ..  ..$ : chr \"J92\"\n ..  ..$ : chr [1:2] \"L17\" \"L70\"\n ..  ..$ : chr [1:2] \"M12\" \"M13\"\n .. $ x4:List of 10\n ..  ..$ : chr [1:3] \"0258\" \"0278\" \"0516\"\n ..  ..$ : chr [1:4] \"2022\" \"2287\" \"2936\" \"2979\"\n ..  ..$ : chr [1:4] \"3291\" \"3390\" \"3490\" \"3514\"\n ..  ..$ : chr [1:2] \"5110\" \"5200\"\n ..  ..$ : chr \"6022\"\n ..  ..$ : chr [1:2] \"8018\" \"8246\"\n ..  ..$ : chr [1:2] \"9359\" \"9636\"\n ..  ..$ : chr [1:2] \"A017\" \"A622\"\n ..  ..$ : chr [1:2] \"J070\" \"J231\"\n ..  ..$ : chr \"V521\"\n .. $ x5:List of 13\n ..  ..$ : chr \"15272\"\n ..  ..$ : chr [1:2] \"22864\" \"26415\"\n ..  ..$ : chr [1:2] \"43237\" \"43264\"\n ..  ..$ : chr [1:6] \"51701\" \"53275\" \"53460\" \"53620\" ...\n ..  ..$ : chr \"63091\"\n ..  ..$ : chr \"76511\"\n ..  ..$ : chr [1:3] \"93278\" \"93304\" \"98977\"\n ..  ..$ : chr \"H1004\"\n ..  ..$ : chr \"J9039\"\n ..  ..$ : chr \"K0857\"\n ..  ..$ : chr [1:3] \"L0452\" \"L1851\" \"L3202\"\n ..  ..$ : chr [1:2] \"0334T\" \"0724T\"\n ..  ..$ : chr \"0097U\"\n @ process_groups  :List of 5\n .. $ g1:List of 1\n ..  ..$ : chr [1:3] \"C\" \"S\" \"T\"\n .. $ g2:List of 14\n ..  ..$ : chr \"04\"\n ..  ..$ : chr [1:2] \"11\" \"17\"\n ..  ..$ : chr [1:5] \"21\" \"23\" \"25\" \"27\" ...\n ..  ..$ : chr [1:2] \"30\" \"38\"\n ..  ..$ : chr [1:4] \"42\" \"44\" \"47\" \"49\"\n ..  ..$ : chr [1:3] \"61\" \"64\" \"65\"\n ..  ..$ : chr \"70\"\n ..  ..$ : chr [1:4] \"81\" \"84\" \"85\" \"87\"\n ..  ..$ : chr [1:4] \"92\" \"95\" \"97\" \"99\"\n ..  ..$ : chr [1:3] \"A4\" \"A7\" \"A9\"\n ..  ..$ : chr [1:4] \"G0\" \"G2\" \"G8\" \"G9\"\n ..  ..$ : chr \"H0\"\n ..  ..$ : chr [1:2] \"J1\" \"J7\"\n ..  ..$ : chr [1:2] \"L2\" \"L5\"\n .. $ g3:List of 14\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"017\"\n ..  .. ..$ : chr \"038\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"158\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"209\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"335\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"414\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr [1:2] \"506\" \"507\"\n ..  .. ..$ : chr \"542\"\n ..  .. ..$ : chr \"598\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr [1:2] \"601\" \"603\"\n ..  .. ..$ : chr \"669\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr [1:2] \"741\" \"742\"\n ..  .. ..$ : chr \"758\"\n ..  .. ..$ : chr \"768\"\n ..  .. ..$ : chr [1:2] \"781\" \"782\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr [1:2] \"867\" \"868\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"B50\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"G60\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"J92\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"L17\"\n ..  .. ..$ : chr \"L70\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr [1:2] \"M12\" \"M13\"\n .. $ g4:List of 10\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"0516\"\n ..  .. ..$ : chr \"0258\"\n ..  .. ..$ : chr \"0278\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr \"2022\"\n ..  .. ..$ : chr \"2287\"\n ..  .. ..$ : chr \"2936\"\n ..  .. ..$ : chr \"2979\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr \"3291\"\n ..  .. ..$ : chr \"3390\"\n ..  .. ..$ : chr \"3490\"\n ..  .. ..$ : chr \"3514\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"5110\"\n ..  .. ..$ : chr \"5200\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"6022\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"8018\"\n ..  .. ..$ : chr \"8246\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"9359\"\n ..  .. ..$ : chr \"9636\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"A017\"\n ..  .. ..$ : chr \"A622\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"J070\"\n ..  .. ..$ : chr \"J231\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"V521\"\n .. $ g5:List of 13\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"15272\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"22864\"\n ..  .. ..$ : chr \"26415\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"43237\"\n ..  .. ..$ : chr \"43264\"\n ..  ..$ :List of 6\n ..  .. ..$ : chr \"51701\"\n ..  .. ..$ : chr \"53275\"\n ..  .. ..$ : chr \"53460\"\n ..  .. ..$ : chr \"53620\"\n ..  .. ..$ : chr \"57150\"\n ..  .. ..$ : chr \"57520\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"63091\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"76511\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"93278\"\n ..  .. ..$ : chr \"93304\"\n ..  .. ..$ : chr \"98977\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"H1004\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"J9039\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"K0857\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"L0452\"\n ..  .. ..$ : chr \"L1851\"\n ..  .. ..$ : chr \"L3202\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"0334T\"\n ..  .. ..$ : chr \"0724T\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"0097U\"\n @ reduce_groups   :List of 5\n .. $ g1: chr \"^CST[0-9]{4}\"\n .. $ g2:List of 14\n ..  ..$ : chr \"04\"\n ..  ..$ : chr \"1[17]\"\n ..  ..$ : chr \"2[13578]\"\n ..  ..$ : chr \"3[08]\"\n ..  ..$ : chr \"4[2479]\"\n ..  ..$ : chr \"6[145]\"\n ..  ..$ : chr \"70\"\n ..  ..$ : chr \"8[1457]\"\n ..  ..$ : chr \"9[2579]\"\n ..  ..$ : chr \"A[479]\"\n ..  ..$ : chr \"G[0289]\"\n ..  ..$ : chr \"H0\"\n ..  ..$ : chr \"J[17]\"\n ..  ..$ : chr \"L[25]\"\n .. $ g3:List of 14\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"017\"\n ..  .. ..$ : chr \"038\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"158\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"209\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"335\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"414\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"50[67]\"\n ..  .. ..$ : chr \"542\"\n ..  .. ..$ : chr \"598\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"60[13]\"\n ..  .. ..$ : chr \"669\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr \"74[12]\"\n ..  .. ..$ : chr \"758\"\n ..  .. ..$ : chr \"768\"\n ..  .. ..$ : chr \"78[12]\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"86[78]\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"B50\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"G60\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"J92\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"L17\"\n ..  .. ..$ : chr \"L70\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"M1[23]\"\n .. $ g4:List of 10\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"0516\"\n ..  .. ..$ : chr \"0258\"\n ..  .. ..$ : chr \"0278\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr \"2022\"\n ..  .. ..$ : chr \"2287\"\n ..  .. ..$ : chr \"2936\"\n ..  .. ..$ : chr \"2979\"\n ..  ..$ :List of 4\n ..  .. ..$ : chr \"3291\"\n ..  .. ..$ : chr \"3390\"\n ..  .. ..$ : chr \"3490\"\n ..  .. ..$ : chr \"3514\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"5110\"\n ..  .. ..$ : chr \"5200\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"6022\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"8018\"\n ..  .. ..$ : chr \"8246\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"9359\"\n ..  .. ..$ : chr \"9636\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"A017\"\n ..  .. ..$ : chr \"A622\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"J070\"\n ..  .. ..$ : chr \"J231\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"V521\"\n .. $ g5:List of 13\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"15272\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"22864\"\n ..  .. ..$ : chr \"26415\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"43237\"\n ..  .. ..$ : chr \"43264\"\n ..  ..$ :List of 6\n ..  .. ..$ : chr \"51701\"\n ..  .. ..$ : chr \"53275\"\n ..  .. ..$ : chr \"53460\"\n ..  .. ..$ : chr \"53620\"\n ..  .. ..$ : chr \"57150\"\n ..  .. ..$ : chr \"57520\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"63091\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"76511\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"93278\"\n ..  .. ..$ : chr \"93304\"\n ..  .. ..$ : chr \"98977\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"H1004\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"J9039\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"K0857\"\n ..  ..$ :List of 3\n ..  .. ..$ : chr \"L0452\"\n ..  .. ..$ : chr \"L1851\"\n ..  .. ..$ : chr \"L3202\"\n ..  ..$ :List of 2\n ..  .. ..$ : chr \"0334T\"\n ..  .. ..$ : chr \"0724T\"\n ..  ..$ :List of 1\n ..  .. ..$ : chr \"0097U\"\n @ recombine_groups:List of 5\n .. $ v1: chr \"^CST[0-9]{4}\"\n .. $ v2: chr \"^(04|1[17]|2[13578]|3[08]|4[2479]|6[145]|70|8[1457]|9[2579]|A[479]|G[0289]|H0|J[17]|L[25])[A-Z0-9]{3}$\"\n .. $ v3:List of 14\n ..  ..$ : chr \"158\"\n ..  ..$ : chr \"209\"\n ..  ..$ : chr \"335\"\n ..  ..$ : chr \"414\"\n ..  ..$ : chr \"86[78]\"\n ..  ..$ : chr \"B50\"\n ..  ..$ : chr \"G60\"\n ..  ..$ : chr \"J92\"\n ..  ..$ : chr \"M1[23]\"\n ..  ..$ : chr \"0(17|38)\"\n ..  ..$ : chr \"5(0[67]|42|98)\"\n ..  ..$ : chr \"6(0[13]|69)\"\n ..  ..$ : chr \"7(4[12]|58|68|8[12])\"\n ..  ..$ : chr \"L(17|70)\"\n .. $ v4:List of 10\n ..  ..$ : chr \"6022\"\n ..  ..$ : chr \"V521\"\n ..  ..$ : chr \"0(516|258|278)\"\n ..  ..$ : chr \"2(022|287|936|979)\"\n ..  ..$ : chr \"3(291|390|490|514)\"\n ..  ..$ : chr \"5(110|200)\"\n ..  ..$ : chr \"8(018|246)\"\n ..  ..$ : chr \"9(359|636)\"\n ..  ..$ : chr \"A(017|622)\"\n ..  ..$ : chr \"J(070|231)\"\n .. $ v5:List of 13\n ..  ..$ : chr \"15272\"\n ..  ..$ : chr \"63091\"\n ..  ..$ : chr \"76511\"\n ..  ..$ : chr \"H1004\"\n ..  ..$ : chr \"J9039\"\n ..  ..$ : chr \"K0857\"\n ..  ..$ : chr \"0097U\"\n ..  ..$ : chr \"2(2864|6415)\"\n ..  ..$ : chr \"4(3237|3264)\"\n ..  ..$ : chr \"5(1701|3275|3460|3620|7150|7520)\"\n ..  ..$ : chr \"9(3278|3304|8977)\"\n ..  ..$ : chr \"L(0452|1851|3202)\"\n ..  ..$ : chr \"0(334T|724T)\"\n```\n\n\n:::\n:::\n\n{{< pagebreak >}}\n\n\n\n\n\n\n::: {#nte-references .callout-tip collapse=\"true\"}\n\n## Links\n### Reference\n\n   - [Regex Cheatsheet](https://github.com/raredd/regex)\n   - [Learn Regex](https://github.com/ziishaned/learn-regex)\n   - [Evaluating strings as code](https://josiahparry.com/posts/2024-06-13-eval-strings)\n   - [Building rules from code operands](https://github.com/Permian-Global-Research/rsi)\n   - [Filter logic](https://github.com/atorus-research/ardis/blob/main/R/denom.R)\n   - [Regular-Expression.info](https://www.regular-expressions.info/tutorial.html)\n   - [RexEgg](https://www.rexegg.com/)\n   - [Regular Expressions as used in R](https://stat.ethz.ch/R-manual/R-devel/library/base/html/regex.html)\n   - [Debuggex](https://www.debuggex.com/)\n\n### Packages\n\n   - [**textshape**](https://github.com/trinker/textshape)\n   - [**stringr.plus**](https://github.com/johncassil/stringr.plus)\n   - [**regexmagic**](https://github.com/jonocarroll/regexmagic)\n   - [**makeunique**](https://github.com/selkamand/makeunique)\n   - [**similiars**](https://github.com/davidsjoberg/similiars)\n   - [**strex**](https://github.com/rorynolan/strex/)\n   - [**stringfish**](https://github.com/traversc/stringfish)\n   - [**collapse**](https://sebkrantz.github.io/collapse/)\n   - [**kit**](https://github.com/2005m/kit)\n   - [**cheapr**](https://github.com/NicChr/cheapr)\n   - [**fastplyr**](https://github.com/NicChr/fastplyr)\n   - [**stringi**](https://stringi.gagolewski.com/)\n   - [**qdapRegex**](https://github.com/trinker/qdapRegex)\n   - [**charcuterie**](https://github.com/jonocarroll/charcuterie)\n\n### Functions\n\n   - [mark::globbing](https://github.com/jmbarbone/mark/blob/main/R/glob.R)\n   - [RUtil::make_unique_comb](https://github.com/raivokolde/RUtil/blob/master/Source/R/make_unique_comb.r)\n   - [mirmisc::longest_common_substring](https://github.com/mirvie/mirmisc/blob/main/R/utils.R)\n   - [hutils::longest prefix/suffix](https://github.com/HughParsonage/hutils/blob/master/R/longest_affix.R)\n   - [tidyext::combn_2_col](https://github.com/m-clark/tidyext/blob/master/R/combn_2_col.R)\n\n::: \n\n\n## Session Information \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n**R version 4.4.2 (2024-10-31 ucrt)**\n\n**Platform:** x86_64-w64-mingw32/x64 \n\n**locale:**\n_LC_COLLATE=English_United States.utf8_, _LC_CTYPE=English_United States.utf8_, _LC_MONETARY=English_United States.utf8_, _LC_NUMERIC=C_ and _LC_TIME=English_United States.utf8_\n\n**attached base packages:** \n_compiler_, _stats_, _graphics_, _grDevices_, _utils_, _datasets_, _methods_ and _base_\n\n**other attached packages:** \n_codex(v.0.0.0.9000)_, _kit(v.0.0.19)_, _collapse(v.2.0.17)_, _data.table(v.1.16.99)_, _stringfish(v.0.16.0)_, _S7(v.0.2.0)_, _vctrs(v.0.6.5)_, _cli(v.3.6.3)_, _rlang(v.1.1.4)_, _stringr(v.1.5.1)_, _purrr(v.1.0.2)_, _dplyr(v.1.1.4)_ and _fuimus(v.0.0.2)_\n\n**loaded via a namespace (and not attached):** \n_rappdirs(v.0.3.3)_, _utf8(v.1.2.4)_, _generics(v.0.1.3)_, _stringi(v.1.8.4)_, _digest(v.0.6.37)_, _magrittr(v.2.0.3)_, _evaluate(v.1.0.1)_, _fastmap(v.1.2.0)_, _rprojroot(v.2.0.4)_, _jsonlite(v.1.8.9)_, _pins(v.1.4.0)_, _bench(v.1.1.3)_, _pander(v.0.6.5)_, _fansi(v.1.0.6)_, _northstar(v.0.0.7)_, _textshaping(v.0.4.0)_, _RApiSerialize(v.0.1.4)_, _withr(v.3.0.2)_, _yaml(v.2.3.10)_, _tools(v.4.4.2)_, _qs(v.0.27.2)_, _parallel(v.4.4.2)_, _profmem(v.0.6.0)_, _here(v.1.0.1)_, _R6(v.2.5.1)_, _lifecycle(v.1.0.4)_, _cheapr(v.0.9.91)_, _fs(v.1.6.5)_, _htmlwidgets(v.1.6.4)_, _ragg(v.1.3.3)_, _pkgconfig(v.2.0.3)_, _RcppParallel(v.5.1.9)_, _pillar(v.1.9.0)_, _glue(v.1.8.0)_, _Rcpp(v.1.0.13-1)_, _systemfonts(v.1.1.0)_, _xfun(v.0.49)_, _tibble(v.3.2.1)_, _tidyselect(v.1.2.1)_, _rstudioapi(v.0.17.1)_, _knitr(v.1.49)_, _htmltools(v.0.5.8.1)_ and _rmarkdown(v.2.29)_\n:::\n:::\n",
    "supporting": [
      "regex_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}