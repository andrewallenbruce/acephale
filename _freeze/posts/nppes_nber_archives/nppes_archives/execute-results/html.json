{
  "hash": "b5853cc7d8c11ad3bd18e1431d82bb2e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NPPES NPI Archives\"\nformat:\n  html:\n    reference-location: block\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# 2024-01-01\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_base <- wk_2024_01_01$basic |> \n  fcompute(\n    npi = npi,\n    entity = fcase(entity == \"Ind\", \"I\", \n                   entity == \"Org\", \"O\"),\n    prefix = sf_remove(prefix, \"\\\\.\"),\n    first_name = sf_remove(first, \"\\\\.\"),\n    middle_name = sf_remove(middle, \"\\\\.\"),\n    last_name = sf_remove(last, \"\\\\.\"),\n    suffix = sf_remove(suffix, \"\\\\.\"),\n    credential = sf_remove(credential, \"\\\\.\"),\n    org_parent = sf_remove(parent_org_lbn, \"\\\\.|,\"),\n    org_prov = sf_remove(prov_org_lbn, \"\\\\.|,\"),\n    cert_date = certified,\n    enum_date = enum_date,\n    deact_date = deact_date,\n    react_date = react_date,\n    sole_prop = sole_prop,\n    org_subpart = org_sub)\n\n# Isolate deactivated NPIs with no reactivation date\nw241_deact <- remove_quiet(w241_base[not_na(w241_base$deact_date) & na(w241_base$react_date),]) |> arrange(deact_date)\n\nlist(npi = sf_convert(w241_deact$npi), date = sf_convert(as.character(w241_deact$deact_date)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$npi\n  [1] \"1669187142\" \"1740769108\" \"1306947155\" \"1629162847\" \"1932764321\"\n  [6] \"1639777162\" \"1225721004\" \"1881387454\" \"1659064103\" \"1245710276\"\n [11] \"1407550650\" \"1861958381\" \"1366032211\" \"1871643411\" \"1356965545\"\n [16] \"1053909168\" \"1598141798\" \"1558827089\" \"1396498929\" \"1427635978\"\n [21] \"1003372533\" \"1356098677\" \"1124584644\" \"1043834245\" \"1275099707\"\n [26] \"1750905949\" \"1922564459\" \"1669938189\" \"1801352331\" \"1174921001\"\n [31] \"1255533444\" \"1053451807\" \"1902956584\" \"1972727766\" \"1043221609\"\n [36] \"1497360507\" \"1528204658\" \"1427209394\" \"1952187734\" \"1306961792\"\n [41] \"1609370246\" \"1801911540\" \"1740847706\" \"1447285531\" \"1659940278\"\n [46] \"1336197292\" \"1619744679\" \"1356046247\" \"1972506574\" \"1326041351\"\n [51] \"1912900531\" \"1730182320\" \"1275538464\" \"1295732659\" \"1457357329\"\n [56] \"1760489017\" \"1750389383\" \"1073510996\" \"1427056662\" \"1942208053\"\n [61] \"1669472007\" \"1134120363\" \"1922008028\" \"1518959428\" \"1891797825\"\n [66] \"1528052602\" \"1740274141\" \"1669467247\" \"1578558276\" \"1942296686\"\n [71] \"1306834817\" \"1275521544\" \"1386633493\" \"1760472328\" \"1073504015\"\n [76] \"1275523367\" \"1861473555\" \"1184607566\" \"1841272275\" \"1932183092\"\n [81] \"1255314068\" \"1841273349\" \"1215910740\" \"1366427106\" \"1033194899\"\n [86] \"1215913496\" \"1245216142\" \"1255318051\" \"1346220787\" \"1386614378\"\n [91] \"1619947637\" \"1386615953\" \"1023089505\" \"1639142748\" \"1336111087\"\n [96] \"1902879919\" \"1427023191\" \"1154397800\" \"1417922345\" \"1225003585\"\n[101] \"1770552424\" \"1497724215\" \"1639147804\" \"1700846839\" \"1639139041\"\n[106] \"1841251758\" \"1386605335\" \"1821051590\" \"1184688228\" \"1184688129\"\n[111] \"1386600849\" \"1184689234\" \"1386600294\" \"1992762132\" \"1649237009\"\n[116] \"1760430789\" \"1053369033\" \"1659320349\" \"1720039530\" \"1932152535\"\n[121] \"1659325991\" \"1730133919\" \"1831143122\" \"1235185430\" \"1114974540\"\n[126] \"1619924974\" \"1255388609\" \"1881632859\" \"1609815869\" \"1356381636\"\n[131] \"1336182211\" \"1366485898\" \"1508809120\" \"1720023302\" \"1043243652\"\n[136] \"1760413967\" \"1639103104\" \"1356375919\" \"1962437822\" \"1467486670\"\n[141] \"1922029834\" \"1861411779\" \"1184643595\" \"1871514489\" \"1427071125\"\n[146] \"1568485332\" \"1437165677\" \"1982618047\" \"1881618981\" \"1477569440\"\n[151] \"1477577740\" \"1780691543\" \"1932117272\" \"1861401663\" \"1124036827\"\n[156] \"1932118957\" \"1033126685\" \"1003826454\" \"1396754388\" \"1922010149\"\n[161] \"1770594152\" \"1265445324\" \"1770594921\" \"1710091509\" \"1083728422\"\n[166] \"1316051956\" \"1528174570\" \"1932215399\" \"1437265402\" \"1982712402\"\n[171] \"1295843746\" \"1235245473\" \"1023123759\" \"1457469082\" \"1063529410\"\n[176] \"1780793810\" \"1760593461\" \"1477665677\" \"1669583241\" \"1912018672\"\n[181] \"1154428670\" \"1598868085\" \"1083718621\" \"1255438321\" \"1720184344\"\n[186] \"1538260690\" \"1639270879\" \"1629169420\" \"1114026937\" \"1275632788\"\n[191] \"1811089683\" \"1255425021\" \"1164515011\" \"1245326628\" \"1093800625\"\n[196] \"1285728733\" \"1437247541\" \"1821178880\" \"1962590984\" \"1437246196\"\n[201] \"1467549980\" \"1902994353\" \"1932298205\" \"1174603070\" \"1821172297\"\n[206] \"1932289667\" \"1356421135\" \"1043393945\" \"1730261009\" \"1245312784\"\n[211] \"1801970397\" \"1740362045\" \"1235213372\" \"1700962636\" \"1932285368\"\n[216] \"1598840605\" \"1356427868\" \"1376629683\" \"1366513582\" \"1316018476\"\n[221] \"1265504278\" \"1033283304\" \"1568537553\" \"1992870935\" \"1356418461\"\n[226] \"1427116953\" \"1962570119\" \"1043388226\" \"1003975871\" \"1740358027\"\n[231] \"1346308319\" \"1275694507\" \"1043379308\" \"1326116567\" \"1356400485\"\n[236] \"1699835322\" \"1386704591\" \"1487717021\" \"1467514083\" \"1215099874\"\n[241] \"1538223102\" \"1942364435\" \"1053473496\" \"1356403752\" \"1568525798\"\n[246] \"1326100371\" \"1245394485\" \"1477616704\" \"1134282254\" \"1932262508\"\n[251] \"1568529782\" \"1982760195\" \"1508923038\" \"1710037379\" \"1083766737\"\n[256] \"1578615068\" \"1932259876\" \"1487708228\" \"1689727182\" \"1538213897\"\n[261] \"1487708921\" \"1083768170\" \"1033255864\" \"1154467512\" \"1124165907\"\n[266] \"1295873172\" \"1457490575\" \"1407996630\" \"1679612543\" \"1467591156\"\n[271] \"1114068251\" \"1922149061\" \"1578605358\" \"1952436370\" \"1144362393\"\n[276] \"1437293370\" \"1942335815\" \"1235264599\" \"1558496729\" \"1700912581\"\n[281] \"1942336839\" \"1265564868\" \"1730212184\" \"1679607121\" \"1821112509\"\n[286] \"1437276870\" \"1700901865\" \"1356467625\" \"1235254343\" \"1447375142\"\n[291] \"1598885402\" \"1215059027\" \"1588784706\" \"1841416377\" \"1275656423\"\n[296] \"1528181922\" \"1780809699\" \"1508083437\" \"1750500583\" \"1326260266\"\n[301] \"1740400795\" \"1427270560\" \"1629282298\" \"1245445477\" \"1053526947\"\n[306] \"1689884256\" \"1023226347\" \"1598973711\" \"1467662247\" \"1578767976\"\n[311] \"1942403894\" \"1144423773\" \"1992900070\" \"1134329204\" \"1407053507\"\n[316] \"1225233414\" \"1376747311\" \"1881891562\" \"1306030135\" \"1619165339\"\n[321] \"1699969642\" \"1821281767\" \"1184801300\" \"1962686576\" \"1649452756\"\n[326] \"1457539207\" \"1093990848\" \"1902074552\" \"1952589871\" \"1669655585\"\n[331] \"1841476819\" \"1285807735\" \"1316117773\" \"1255506440\" \"1346417060\"\n[336] \"1013184928\" \"1033387360\" \"1003086117\" \"1467611046\" \"1861652844\"\n[341] \"1285884171\" \"1962659441\" \"1730330911\" \"1033366901\" \"1134371297\"\n[346] \"1639323231\" \"1154571263\" \"1548417678\" \"1609024207\" \"1457599839\"\n[351] \"1205074663\" \"1265677793\" \"1043457815\" \"1720223100\" \"1760637912\"\n[356] \"1013152446\" \"1144465246\" \"1679728224\" \"1841437977\" \"1437391380\"\n[361] \"1770719379\" \"1356583314\" \"1063648905\" \"1073747481\" \"1760716864\"\n[366] \"1679705297\" \"1154552669\" \"1073848909\" \"1265769483\" \"1861729907\"\n[371] \"1760615405\" \"1669706982\" \"1356675185\" \"1710215488\" \"1922331081\"\n[376] \"1154656460\" \"1376871178\" \"1770811671\" \"1790017010\" \"1316261555\"\n[381] \"1962733766\" \"1831420223\" \"1346567245\" \"1346556545\" \"1801103411\"\n[386] \"1104134741\" \"1316255862\" \"1700188323\" \"1699070011\" \"1659689669\"\n[391] \"1285944959\" \"1649580465\" \"1477855393\" \"1508166299\" \"1689975682\"\n[396] \"1891093092\" \"1124312855\" \"1285931196\" \"1720371701\" \"1467732594\"\n[401] \"1194007401\" \"1760760797\" \"1255627261\" \"1780972000\" \"1710265343\"\n[406] \"1497033708\" \"1528330057\" \"1417231945\" \"1083990972\" \"1649556689\"\n[411] \"1205112844\" \"1700150257\" \"1235404138\" \"1801156534\" \"1447514989\"\n[416] \"1689938573\" \"1629332374\" \"1164779237\" \"1609124742\" \"1992054092\"\n[421] \"1285984088\" \"1356694327\" \"1871845990\" \"1144565482\" \"1386989176\"\n[426] \"1396080578\" \"1154668754\" \"1376881284\" \"1427397975\" \"1316286040\"\n[431] \"1013257211\" \"1720329683\" \"1679814297\" \"1831534809\" \"1376975938\"\n[436] \"1841624863\" \"1518391697\" \"1689008013\" \"1205263811\" \"1093136848\"\n[441] \"1760805626\" \"1518386077\" \"1487060851\" \"1811391600\" \"1770989857\"\n[446] \"1245628080\" \"1134517915\" \"1457747073\" \"1871970616\" \"1952788275\"\n[451] \"1366820417\" \"1659750982\" \"1669852521\" \"1811357312\" \"1023479227\"\n[456] \"1124473913\" \"1689025751\" \"1437501616\" \"1639623713\" \"1467903450\"\n[461] \"1649722133\" \"1396297933\" \"1801331368\" \"1720523871\" \"1407396732\"\n[466] \"1568996874\" \"1467974840\" \"1063935708\" \"1023536133\" \"1972015303\"\n[471] \"1588176556\" \"1558875278\" \"1114425923\" \"1609375559\" \"1467952598\"\n[476] \"1023518917\" \"1477052926\" \"1508368861\" \"1972006302\" \"1346746427\"\n[481] \"1669979852\" \"1750888236\" \"1457840233\" \"1003307265\" \"1396236451\"\n[486] \"1104319466\" \"1396238861\" \"1871063750\" \"1518437367\" \"1972075604\"\n[491] \"1245704527\" \"1720631344\" \"1477195550\" \"1316586522\" \"1255952008\"\n[496] \"1578174835\" \"1265043202\" \"1508466632\" \"1801491634\" \"1063008134\"\n[501] \"1386232106\" \"1427647551\" \"1114511607\" \"1265026637\" \"1568046233\"\n[506] \"1992474092\" \"1629732847\" \"1295493518\" \"1487315156\" \"1366192494\"\n[511] \"1245974054\" \"1003552092\" \"1952022394\" \"1235864588\" \"1235866948\"\n[516] \"1689391971\" \"1366154361\" \"1548975683\" \"1184323222\" \"1609579325\"\n[521] \"1790486686\" \"1144914037\" \"1518648617\" \"1962185629\" \"1831975721\"\n[526] \"1336927466\" \"1285415810\" \"1538940481\" \"1700659679\" \"1649737792\"\n[531] \"1336682863\" \"1750155792\" \"1922709831\" \"1851608574\" \"1366824591\"\n[536] \"1477977817\" \"1821559766\" \"1811361330\" \"1295449643\" \"1487387064\"\n[541] \"1598414906\" \"1205865227\" \"1336460971\" \"1528092053\" \"1942234406\"\n[546] \"1669693636\" \"1083085245\" \"1538534862\" \"1578287702\" \"1083180269\"\n[551] \"1861472409\" \"1053951210\" \"1568880334\" \"1598840381\" \"1659099729\"\n[556] \"1649051202\" \"1861054199\" \"1104859362\" \"1356446876\" \"1154190866\"\n[561] \"1417732553\" \"1982247896\" \"1144624016\" \"1154393114\" \"1174017081\"\n[566] \"1871086421\" \"1407349897\" \"1598225377\" \"1740740331\" \"1265622831\"\n[571] \"1538768197\" \"1396382586\" \"1457908071\" \"1528720141\" \"1184383424\"\n[576] \"1396350658\" \"1205428919\" \"1982383394\" \"1538852686\" \"1164115218\"\n[581] \"1528751617\" \"1184317232\" \"1639862766\" \"1851084990\" \"1225721392\"\n[586] \"1780378216\" \"1386413516\" \"1346228897\" \"1013695105\" \"1891439659\"\n[591] \"1629532890\" \"1558825364\" \"1316717234\" \"1114276995\" \"1487209482\"\n[596] \"1649987660\" \"1073219028\" \"1558889527\" \"1063648350\" \"1134905524\"\n[601] \"1942855531\"\n\n$date\n  [1] \"2024-01-01\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n  [6] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [11] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [16] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [21] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [26] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [31] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [36] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [41] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [46] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-03\" \"2024-01-03\"\n [51] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [56] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [61] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [66] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [71] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [76] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [81] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [86] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [91] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [96] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[101] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[106] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[111] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[116] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[121] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[126] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[131] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[136] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[141] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[146] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[151] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[156] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[161] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[166] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[171] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[176] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[181] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[186] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[191] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[196] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[201] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[206] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[211] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[216] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[221] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[226] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[231] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[236] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[241] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[246] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[251] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[256] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[261] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[266] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[271] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[276] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[281] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[286] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[291] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[296] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[301] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[306] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[311] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[316] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[321] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[326] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[331] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[336] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[341] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[346] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[351] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[356] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[361] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[366] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[371] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[376] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[381] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[386] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[391] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[396] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[401] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[406] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[411] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[416] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[421] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[426] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[431] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[436] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[441] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[446] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[451] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[456] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[461] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[466] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[471] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[476] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[481] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[486] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[491] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[496] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[501] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[506] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[511] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[516] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[521] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[526] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[531] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[536] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[541] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[546] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[551] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[556] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[561] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[566] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[571] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[576] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-05\" \"2024-01-05\"\n[581] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[586] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[591] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[596] \"2024-01-05\" \"2024-01-06\" \"2024-01-06\" \"2024-01-06\" \"2024-01-06\"\n[601] \"2024-01-06\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Remove them from base frame\nw241_base <- fsubset(w241_base, npi %!in% w241_deact$npi)\n\n# Split into individuals and organizations\nbase_g <- GRP(w241_base, ~ entity)\n\nrsplit(w241_base, base_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(base_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 15,267 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   <chr>      <chr>  <chr>  <chr>      <chr>       <chr>       <chr>  <chr>     \n 1 1912620808 I      <NA>   DEIDRE     <NA>        HAMILTON    <NA>   <NA>      \n 2 1518543511 I      <NA>   VANESSA    <NA>        CHAMBERS    <NA>   RN        \n 3 1619688645 I      <NA>   DESTINY    RENEE       BARNETT     <NA>   AGACNP-BC \n 4 1437575206 I      <NA>   MICHELE    <NA>        WHITE       <NA>   PHD LLP L…\n 5 1053912162 I      MS     CHANEL     MARIE       POOLE       <NA>   LMT       \n 6 1265752158 I      <NA>   LIVIA      S           MACHADO, R… <NA>   <NA>      \n 7 1609131515 I      <NA>   EYAD       <NA>        ALDAAS      <NA>   MD        \n 8 1750841870 I      <NA>   TAM        T           TRAN        <NA>   MD        \n 9 1942708748 I      <NA>   WINFORD    <NA>        PALMA       <NA>   CRNA      \n10 1255864583 I      <NA>   GWENDOLYN  <NA>        WILSON      <NA>   LMHC, ATR \n# ℹ 15,257 more rows\n# ℹ 5 more variables: cert_date <date>, enum_date <date>, deact_date <date>,\n#   react_date <date>, sole_prop <chr>\n\n$O\n# A tibble: 3,917 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   <chr>  <chr>  <chr>      <chr>    <date>     <date>     <date>     <date>    \n 1 19527… O      <NA>       WHITE B… 2024-01-01 2014-01-31 NA         NA        \n 2 15489… O      <NA>       MORGAN … 2022-10-04 2021-10-29 NA         NA        \n 3 12955… O      <NA>       KENDRA … 2023-09-26 2024-01-01 NA         NA        \n 4 13864… O      <NA>       ULYSSES… 2023-09-19 2024-01-01 NA         NA        \n 5 15581… O      <NA>       RETHINK… 2023-12-21 2024-01-01 NA         NA        \n 6 18218… O      <NA>       AURORA … 2023-12-28 2024-01-01 NA         NA        \n 7 16490… O      <NA>       PULSE U… 2023-12-27 2024-01-01 NA         NA        \n 8 12753… O      <NA>       NVR & S… 2023-12-30 2024-01-01 NA         NA        \n 9 13561… O      <NA>       HEBKRAM… 2023-12-30 2024-01-01 NA         NA        \n10 15086… O      <NA>       HYPNOSI… 2023-12-30 2024-01-01 NA         NA        \n# ℹ 3,907 more rows\n# ℹ 1 more variable: org_subpart <chr>\n```\n\n\n:::\n:::\n\n\n\n\n### Other Transformations to Keep in Mind\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Credentials in Last Name\nw241_base |> \n  fsubset(sf_detect(last_name, \", \")) |> \n  fsubset(na(credential)) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2\nColumns: 16\n$ npi         <chr> \"1265752158\", \"1386886174\"\n$ entity      <chr> \"I\", \"I\"\n$ prefix      <chr> NA, \"MS\"\n$ first_name  <chr> \"LIVIA\", \"JUDY\"\n$ middle_name <chr> \"S\", \"A\"\n$ last_name   <chr> \"MACHADO, RPH, PHARMD, BCPS\", \"LIU, INC\"\n$ suffix      <chr> NA, NA\n$ credential  <chr> NA, NA\n$ org_parent  <chr> NA, NA\n$ org_prov    <chr> NA, NA\n$ cert_date   <date> 2024-01-01, 2024-01-03\n$ enum_date   <date> 2010-06-02, 2009-03-25\n$ deact_date  <date> 2018-02-20, NA\n$ react_date  <date> 2018-09-11, NA\n$ sole_prop   <chr> \"N\", \"Y\"\n$ org_subpart <chr> NA, NA\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_base_spl <- rsplit(w241_base, base_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(base_g))\n\n# Org NPIs that are org_subpart have org_parent names\nrsplit(w241_base_spl$O, w241_base_spl$O$org_subpart)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$N\n# A tibble: 3,514 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   <chr>  <chr>  <chr>      <chr>    <date>     <date>     <date>     <date>    \n 1 19527… O      <NA>       WHITE B… 2024-01-01 2014-01-31 NA         NA        \n 2 15489… O      <NA>       MORGAN … 2022-10-04 2021-10-29 NA         NA        \n 3 12955… O      <NA>       KENDRA … 2023-09-26 2024-01-01 NA         NA        \n 4 13864… O      <NA>       ULYSSES… 2023-09-19 2024-01-01 NA         NA        \n 5 15581… O      <NA>       RETHINK… 2023-12-21 2024-01-01 NA         NA        \n 6 18218… O      <NA>       AURORA … 2023-12-28 2024-01-01 NA         NA        \n 7 16490… O      <NA>       PULSE U… 2023-12-27 2024-01-01 NA         NA        \n 8 12753… O      <NA>       NVR & S… 2023-12-30 2024-01-01 NA         NA        \n 9 13561… O      <NA>       HEBKRAM… 2023-12-30 2024-01-01 NA         NA        \n10 15086… O      <NA>       HYPNOSI… 2023-12-30 2024-01-01 NA         NA        \n# ℹ 3,504 more rows\n# ℹ 1 more variable: org_subpart <chr>\n\n$Y\n# A tibble: 403 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   <chr>  <chr>  <chr>      <chr>    <date>     <date>     <date>     <date>    \n 1 16894… O      RAE 6 LLC  RAE6TECH 2023-12-30 2024-01-01 NA         NA        \n 2 11248… O      POPLAR PE… POPLAR … 2024-01-01 2023-09-06 NA         NA        \n 3 19420… O      ASTERRA L… AUBURN … 2024-01-01 2024-01-01 NA         NA        \n 4 15783… O      LW CARE L… LW CARE… 2023-12-27 2024-01-01 NA         NA        \n 5 10137… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 6 18319… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 7 15682… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 8 14671… O      1336854454 CLINICA… 2024-01-01 2023-01-23 NA         NA        \n 9 18218… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n10 11144… O      LAKE WASH… ADVANCE… 2024-01-01 2018-06-11 NA         NA        \n# ℹ 393 more rows\n# ℹ 1 more variable: org_subpart <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Individuals - Sole Proprietors\nrsplit(w241_base_spl$I, w241_base_spl$I$sole_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$N\n# A tibble: 10,405 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   <chr>      <chr>  <chr>  <chr>      <chr>       <chr>       <chr>  <chr>     \n 1 1912620808 I      <NA>   DEIDRE     <NA>        HAMILTON    <NA>   <NA>      \n 2 1619688645 I      <NA>   DESTINY    RENEE       BARNETT     <NA>   AGACNP-BC \n 3 1265752158 I      <NA>   LIVIA      S           MACHADO, R… <NA>   <NA>      \n 4 1609131515 I      <NA>   EYAD       <NA>        ALDAAS      <NA>   MD        \n 5 1750841870 I      <NA>   TAM        T           TRAN        <NA>   MD        \n 6 1942708748 I      <NA>   WINFORD    <NA>        PALMA       <NA>   CRNA      \n 7 1477895621 I      <NA>   GARY       FRANK       RIVAS       <NA>   RD, PA-C  \n 8 1891305488 I      <NA>   ALISHA     LYNNE       RUKOVISHNI… <NA>   <NA>      \n 9 1477322501 I      <NA>   ELLA       <NA>        COOK        <NA>   NP        \n10 1568231694 I      <NA>   ANNA       <NA>        THOMPSON    <NA>   <NA>      \n# ℹ 10,395 more rows\n# ℹ 5 more variables: cert_date <date>, enum_date <date>, deact_date <date>,\n#   react_date <date>, sole_prop <chr>\n\n$X\n# A tibble: 29 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   <chr>      <chr>  <chr>  <chr>      <chr>       <chr>       <chr>  <chr>     \n 1 1639155427 I      <NA>   STEPHEN    JOHN        SMITH       <NA>   MD        \n 2 1992706071 I      <NA>   PRISCILA   <NA>        SUNTAY      <NA>   MD        \n 3 1619942935 I      DR     NORMA      VB          MADERAZO    <NA>   MD        \n 4 1710978242 I      DR     SHAHIRA    HALIM       FELOUS      <NA>   MD        \n 5 1376521179 I      <NA>   ROSEMARY   M           BRANSTETTER <NA>   LCSW      \n 6 1033109871 I      DR     JOHN       B           LAFAVE      <NA>   MD        \n 7 1750325726 I      MS     MERRILL    <NA>        GOLDSTEIN   <NA>   NYPSYA    \n 8 1144274283 I      MS     LUCILLE    J           ST-PIERRE   <NA>   PTA       \n 9 1528045325 I      MR     JOHN       <NA>        BOYD        <NA>   LCPC      \n10 1578511382 I      DR     DONALD     MICHAEL     MANZO       <NA>   OD        \n# ℹ 19 more rows\n# ℹ 5 more variables: cert_date <date>, enum_date <date>, deact_date <date>,\n#   react_date <date>, sole_prop <chr>\n\n$Y\n# A tibble: 4,833 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   <chr>      <chr>  <chr>  <chr>      <chr>       <chr>       <chr>  <chr>     \n 1 1518543511 I      <NA>   VANESSA    <NA>        CHAMBERS    <NA>   RN        \n 2 1437575206 I      <NA>   MICHELE    <NA>        WHITE       <NA>   PHD LLP L…\n 3 1053912162 I      MS     CHANEL     MARIE       POOLE       <NA>   LMT       \n 4 1255864583 I      <NA>   GWENDOLYN  <NA>        WILSON      <NA>   LMHC, ATR \n 5 1831968973 I      MS     APRIL      JENILLE     JULIAN-ST … <NA>   <NA>      \n 6 1922877067 I      <NA>   VASHTI     <NA>        CLARK       <NA>   LMSW      \n 7 1568231603 I      <NA>   LYNDSEY    <NA>        HANSEN      <NA>   <NA>      \n 8 1477322519 I      <NA>   MOHAMED    <NA>        ABDURAHMAN  <NA>   <NA>      \n 9 1912776055 I      <NA>   DWIGHT     <NA>        ADAMS       <NA>   CRNA      \n10 1730958877 I      <NA>   GIFTY      <NA>        BREW-THOMP… <NA>   <NA>      \n# ℹ 4,823 more rows\n# ℹ 5 more variables: cert_date <date>, enum_date <date>, deact_date <date>,\n#   react_date <date>, sole_prop <chr>\n```\n\n\n:::\n:::\n\n\n\n\n\n## Address\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_add <- join(\n  wk_2024_01_01$address, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi)\n\nmake_case <- function(x, y) {\n  fcase(\n    not_na(x) & not_na(y) & x == y, str_glue(\"{y}\"), \n    not_na(x) & not_na(y) & x != y, str_glue(\"{x}, {y}\"), \n    not_na(x) & na(y), str_glue(\"{x}\"), \n    na(x) & not_na(y), str_glue(\"{y}\")\n  )\n}\n\nmake_zip <- function(x) {\n  map_chr(\n    x, \n    function(x) {\n      if (not_na(x) & nchar(x) == 9) \n        str_glue(\n          \"{substr(x, 1, 5)}-{substr(x, 6, 9)}\"\n          )\n      else \n        x\n    }\n  )\n}\n\nmake_phone <- function(x) {\n  \n  cnd1 <- \"({substr(x, 1, 3)}) {substr(x, 4, 6)}-{substr(x, 7, 10)}\"\n  cnd2 <- smush(cnd1, \", ({substr(x, 13, 15)})-{substr(x, 16, 18)}-{substr(x, 19, 22)}\")\n  \n  map_chr(x, function(x) {if (not_na(x)) {\n    fcase(\n      nchar(x) == 10, str_glue(cnd1), \n      nchar(x) > 10, str_glue(cnd2),\n      default = str_glue(\"{x}\"))} else str_glue(\"{x}\") })\n}\n\n# Exact match on all address fields\nw241_exact <- w241_add |> \n  filter(\n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_zip == prac_zip,\n    mail_country == prac_country,\n    mail_phone == prac_phone,\n    mail_fax == prac_fax) |> \n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = \"MP\",\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_phone(prac_fax))\n\n# Match on all except FAX\nw241_fax <- w241_add |> \n  filter(\n    npi %!in% w241_exact$npi,  \n    mail_address == prac_address, \n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country,\n    mail_zip == prac_zip,\n    mail_phone == prac_phone) |> \n  fcompute(\n    npi = npi,\n    entity = entity,\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_case(mail_fax, prac_fax),\n    purpose = fcase(\n      not_na(mail_fax) & na(prac_fax), \"M\",\n      na(mail_fax) & not_na(prac_fax), \"P\",\n      default = \"MP\")) |> \n  fmutate(fax = make_phone(fax))\n\n# Match on all except ZIP, PHONE, and FAX\nw241_phone <- w241_add |> \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi),      \n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country) |>\n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = fcase(\n      not_na(mail_phone) & na(prac_phone), \"M\",\n      na(mail_phone) & not_na(prac_phone), \"P\",\n      default = \"MP\"),\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_case(mail_zip, prac_zip),\n    country = prac_country,\n    phone = make_case(mail_phone, prac_phone),\n    fax = make_case(mail_fax, prac_fax)) |> \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Pivot remaining addresses\nw241_piv <- w241_add |> \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi, \n      w241_phone$npi\n      )) |> \n  pivot_longer(\n    -c(npi, entity), \n    names_to = \"type_part\", \n    values_to = \"value\", \n    names_transform = list(\n      type_part = stringr::str_to_title)\n    ) |> \n  separate_wider_delim(\n    type_part, \n    delim = \"_\", \n    names = c(\"type\", \"part\")) |> \n  fmutate(\n    purpose = case_when(\n      type == \"Mail\" ~ \"M\",\n      type == \"Prac\" ~ \"P\",\n    .default = type),\n    type = NULL) |>\n  pivot_wider(\n    names_from = part, \n    values_from = value) |> \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Combine all address matches\nw241_add <- rowbind(w241_exact, w241_fax, w241_phone, w241_piv)\n\nadd_g <- GRP(w241_add, ~ entity)\n\nrsplit(w241_add, add_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(add_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 22,883 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   <chr>      <chr>  <chr>   <chr>         <chr> <chr> <chr> <chr>   <chr> <chr>\n 1 1437575206 I      MP      3840 PACKARD… ANN … MI    4810… US      (734… (734…\n 2 1477895621 I      MP      3144 SANTA A… EL M… CA    9173… US      (626… (626…\n 3 1346019486 I      MP      57 TOWNSHIP … CHES… OH    4561… US      (740… (740…\n 4 1265201206 I      MP      822 LOVELACE… BREW… AL    3642… US      (251… (800…\n 5 1447029483 I      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 6 1295504249 I      MP      1550 N 115TH… SEAT… WA    9813… US      (206… (206…\n 7 1073382024 I      MP      401 16TH ST … ROCH… MN    5590… US      (507… (507…\n 8 1639948698 I      MP      920 SARATOGA… SAN … CA    9512… US      (408… (408…\n 9 1508635574 I      MP      14725 SE RHO… PORT… OR    9723… US      (971… (971…\n10 1932978905 I      MP      3801 KELL BL… WICH… TX    7630… US      (940… (940…\n# ℹ 22,873 more rows\n\n$O\n# A tibble: 5,839 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   <chr>      <chr>  <chr>   <chr>         <chr> <chr> <chr> <chr>   <chr> <chr>\n 1 1548924087 O      MP      46 GRAMATAN … MOUN… NY    1055… US      (295… (646…\n 2 1205605342 O      MP      7610 CARROLL… TAKO… MD    2091… US      (301… (301…\n 3 1114796257 O      MP      6510 KENILWO… RIVE… MD    2073… US      (301… (301…\n 4 1902675945 O      MP      2585 PACIFIC… TORR… CA    9050… US      (424… (310…\n 5 1538938576 O      MP      10751 W ROWE… PEOR… AZ    8538… US      (623… (623…\n 6 1568231512 O      MP      1121 FIRECRA… JUST… TX    7624… US      (940… (940…\n 7 1912776964 O      MP      3760 CURTIS … COCOA FL    3292… US      (321… (321…\n 8 1306615364 O      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 9 1336918390 O      MP      240 E GARRIS… GAST… NC    2805… US      (980… (980…\n10 1649049610 O      MP      6751 N SUNSE… GLEN… AZ    8530… US      (775… (702…\n# ℹ 5,829 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Taxonomy\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_tax <- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"taxonomy_code\", \n      \"taxonomy_group\", \n      \"taxonomy_primary\")\n    ], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi) |> \n  fmutate(\n    level = fcase(\n      taxonomy_primary == \"Y\", \"Primary\",\n      taxonomy_primary == \"N\", \"Other\",\n      taxonomy_primary == \"X\", \"X\"),\n    taxonomy_primary = NULL)\n\nw241_tax <- rowbind(\n  w241_tax |> \n    fsubset(na(taxonomy_group)) |> \n    fselect(-taxonomy_group) |> \n    distinct(),\n  w241_tax |> \n    fsubset(not_na(taxonomy_group)) |> \n    fselect(-taxonomy_code, -level) |> \n    distinct() |> \n    frename(taxonomy_code = taxonomy_group) |> \n    fmutate(level = \"Group\"))\n\ntax_g <- GRP(w241_tax, ~ entity)\n\nw241_tax <- rsplit(w241_tax, tax_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(tax_g))\n\nw241_tax\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 20,828 × 4\n   npi        taxonomy_code entity level  \n   <chr>      <chr>         <chr>  <chr>  \n 1 1003009861 207RC0000X    I      Primary\n 2 1003013137 363AM0700X    I      Primary\n 3 1003013137 363AM0700X    I      Other  \n 4 1003018060 106H00000X    I      Primary\n 5 1003047531 207L00000X    I      Primary\n 6 1003047531 390200000X    I      Other  \n 7 1003047531 207L00000X    I      Other  \n 8 1003052903 2084P0800X    I      Primary\n 9 1003063173 208G00000X    I      Primary\n10 1003063173 208G00000X    I      Other  \n# ℹ 20,818 more rows\n\n$O\n# A tibble: 5,433 × 4\n   npi        taxonomy_code entity level  \n   <chr>      <chr>         <chr>  <chr>  \n 1 1003096488 261Q00000X    O      Primary\n 2 1003196072 3416L0300X    O      Primary\n 3 1003200874 253Z00000X    O      Primary\n 4 1003200874 251E00000X    O      Other  \n 5 1003330226 251E00000X    O      Primary\n 6 1003330226 251J00000X    O      Other  \n 7 1003337734 324500000X    O      Primary\n 8 1003407230 261QM1300X    O      Primary\n 9 1003407230 251E00000X    O      Other  \n10 1003463092 333600000X    O      Primary\n# ℹ 5,423 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n#### Duplicates\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_tax$O |> \n  mutate(N = n(), .by = npi) |> \n  filter(N == 2) |> \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |> \n  filter(eq)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 21 × 6\n   npi        taxonomy_code entity level     N eq   \n   <chr>      <chr>         <chr>  <chr> <int> <lgl>\n 1 1093182198 324500000X    O      Other     2 TRUE \n 2 1194812784 332B00000X    O      Other     2 TRUE \n 3 1235225210 251E00000X    O      Other     2 TRUE \n 4 1336114131 3416L0300X    O      Other     2 TRUE \n 5 1376554865 332B00000X    O      Other     2 TRUE \n 6 1396804225 324500000X    O      Other     2 TRUE \n 7 1396867578 3336C0002X    O      Other     2 TRUE \n 8 1427298140 261QP2000X    O      Other     2 TRUE \n 9 1457587222 251E00000X    O      Other     2 TRUE \n10 1467558668 332B00000X    O      Other     2 TRUE \n# ℹ 11 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nw241_tax$I |> \n  mutate(N = n(), .by = npi) |> \n  filter(N == 2) |> \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |> \n  filter(eq)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,135 × 6\n   npi        taxonomy_code entity level     N eq   \n   <chr>      <chr>         <chr>  <chr> <int> <lgl>\n 1 1003013137 363AM0700X    I      Other     2 TRUE \n 2 1003063173 208G00000X    I      Other     2 TRUE \n 3 1003122698 2085R0202X    I      Other     2 TRUE \n 4 1003182908 207ZP0101X    I      Other     2 TRUE \n 5 1003202565 207ZP0102X    I      Other     2 TRUE \n 6 1003249749 207L00000X    I      Other     2 TRUE \n 7 1003443680 207W00000X    I      Other     2 TRUE \n 8 1003461666 152W00000X    I      Other     2 TRUE \n 9 1003561242 111N00000X    I      Other     2 TRUE \n10 1003859794 363LF0000X    I      Other     2 TRUE \n# ℹ 1,125 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## License\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_lic <- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"license_number\", \n      \"license_state\")], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi)\n\nlic_g <- GRP(w241_lic, ~ entity)\n\nw241_lic <- rsplit(w241_lic, lic_g) |> \n  map(\\(df) \n      remove_quiet(df) |> \n        filter(not_na(license_number))) |> \n  setNames(GRPnames(lic_g))\n\nw241_lic\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 15,565 × 4\n   npi        license_number license_state entity\n   <chr>      <chr>          <chr>         <chr> \n 1 1003009861 45263          AZ            I     \n 2 1003013137 4354           WI            I     \n 3 1003018060 959            NV            I     \n 4 1003047531 116063         CA            I     \n 5 1003047531 30135          OK            I     \n 6 1003047531 MD60681697     WA            I     \n 7 1003052903 087968         NY            I     \n 8 1003063173 5499           OK            I     \n 9 1003063173 036.143737     IL            I     \n10 1003063173 007606         AZ            I     \n# ℹ 15,555 more rows\n\n$O\n# A tibble: 592 × 4\n   npi        license_number license_state entity\n   <chr>      <chr>          <chr>         <chr> \n 1 1003096488 12-296         MS            O     \n 2 1003196072 23-255         OH            O     \n 3 1003199829 10000          ND            O     \n 4 1003200874 HHA201205      NE            O     \n 5 1013007475 1673           WI            O     \n 6 1013069608 28RS00588100   NJ            O     \n 7 1013105568 H80CS06662     IN            O     \n 8 1013174127 X 05660-1      NY            O     \n 9 1013214089 230304         NY            O     \n10 1013995521 1038           WI            O     \n# ℹ 582 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Identifiers\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_id <- join(\n  wk_2024_01_01$identifier, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi) |> \n  # Remove Taxonomy Codes\n  fsubset(sf_ndetect(other_id, \"^[A-Z0-9]{9}X$\"))\n\nid_g <- GRP(w241_id, ~ entity)\n\nrsplit(w241_id, id_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(id_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 3,052 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   <chr>      <chr>      <chr>         <chr>          <chr>               <chr> \n 1 1003685140 3496       01            NH             STATE OF NEW HAMPS… I     \n 2 1134998198 1194322628 05            MI             <NA>                I     \n 3 1578544367 10007752   05            TX             <NA>                I     \n 4 1578544367 152031401  05            TX             <NA>                I     \n 5 1578544367 152028001  05            TX             <NA>                I     \n 6 1316936222 4160095    01            TN             BLUE CROSS          I     \n 7 1316936222 1053635    05            LA             <NA>                I     \n 8 1316936222 087281     05            AZ             <NA>                I     \n 9 1316936222 3000540    05            TN             <NA>                I     \n10 1316936222 P00444174  01            <NA>           MEDICARE RAILROAD   I     \n# ℹ 3,042 more rows\n\n$O\n# A tibble: 1,314 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   <chr>      <chr>      <chr>         <chr>          <chr>               <chr> \n 1 1417726456 0155098    05            OH             <NA>                O     \n 2 1225765241 U5083      01            TX             TEXAS MEDICAL LICE… O     \n 3 1689443665 1417266396 05            NY             <NA>                O     \n 4 1255611539 014469     01            TX             TEXAS HCSSA LICENSE O     \n 5 1508824574 890596700  05            FL             <NA>                O     \n 6 1750958104 1386940575 05            WI             <NA>                O     \n 7 1982294732 250000218  05            NV             <NA>                O     \n 8 1891209284 U300404468 01            RI             MEDICARE PTAN       O     \n 9 1730729385 1952817926 01            <NA>           ORGANIZATIONAL NPI  O     \n10 1730729385 1043526098 01            <NA>           NPI                 O     \n# ℹ 1,304 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Other\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_oth <- join(\n  wk_2024_01_01$other, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi) |> \n  fcompute(\n    npi = npi,\n    entity = entity,\n    org_name = sf_remove(other_org_name, \"\\\\.\"),\n    org_type = sf_remove(other_org_type, \"\\\\.\"),\n    prefix = sf_remove(other_prefix, \"\\\\.\"),\n    first_name = sf_remove(other_first, \"\\\\.\"),\n    middle_name = sf_remove(other_middle, \"\\\\.\"),\n    last_name = sf_remove(other_last, \"\\\\.\"),\n    last_type = sf_remove(other_last_type, \"\\\\.\"),\n    suffix = sf_remove(other_suffix, \"\\\\.\"),\n    credential = sf_remove(other_credential, \"\\\\.\"))\n\noth_g <- GRP(w241_oth, ~ entity)\n\nw241_oth <- rsplit(w241_oth, oth_g) |> \n  map(remove_quiet) |> \n  setNames(GRPnames(oth_g))\n\nw241_oth$I <- vctrs::vec_slice(w241_oth$I, cheapr::row_na_counts(w241_oth$I) < 6)\n\nw241_oth\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$I\n# A tibble: 1,219 × 9\n   npi        entity prefix first_name middle_name last_name  last_type suffix\n   <chr>      <chr>  <chr>  <chr>      <chr>       <chr>      <chr>     <chr> \n 1 1255864583 I      <NA>   GWEN       <NA>        WILSON     2         <NA>  \n 2 1659140796 I      <NA>   KATELIN    LEE ANN     BOYER      1         <NA>  \n 3 1184493223 I      <NA>   AESHA      ISHWARBHAI  PATEL      5         <NA>  \n 4 1437928579 I      <NA>   TREVA      JO          MOYA       1         <NA>  \n 5 1881463826 I      <NA>   AMANDA     RENEE       SCHELLHORN 1         <NA>  \n 6 1871362814 I      <NA>   BRITTANY   C           DARNELL    1         <NA>  \n 7 1770352718 I      <NA>   PEBBLES    MAURINE     YEE        5         <NA>  \n 8 1497524441 I      <NA>   CARING     FOR         MAMAS      2         <NA>  \n 9 1033988084 I      <NA>   JANINE     LISSETT     LESSLEY    1         <NA>  \n10 1952170912 I      <NA>   NICOLE     <NA>        BORDEN     1         <NA>  \n# ℹ 1,209 more rows\n# ℹ 1 more variable: credential <chr>\n\n$O\n# A tibble: 1,125 × 4\n   npi        entity org_name                                  org_type\n   <chr>      <chr>  <chr>                                     <chr>   \n 1 1548924087 O      MORGAN HEART PLLC                         4       \n 2 1538845474 O      SRS-LA MIRADA, LLC                        3       \n 3 1477337988 O      RISING SUN DERMATOLOGY & COSMETICS CENTER 3       \n 4 1447567391 O      UNITED PLUS HOME HEALTH LLC               3       \n 5 1841442092 O      PALOMA HOME HEALTHCARE                    3       \n 6 1508824574 O      THE ALFANO CENTER                         3       \n 7 1295004455 O      MAXSERVE HOSPICE                          3       \n 8 1790271476 O      MAXSERVE HOSPICE                          3       \n 9 1740833243 O      SUMMIT HEALTHCARE                         3       \n10 1427561562 O      J&CO CHIROPRACTIC                         3       \n# ℹ 1,115 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Authorized\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw241_ao <- join(\n  wk_2024_01_01$authorized, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |> \n  fsubset(npi %!in% w241_deact$npi) |> \n  fcompute(\n    npi = npi,\n    entity = entity,\n    ao_prefix = sf_remove(ao_prefix, \"\\\\.\"),\n    ao_first_name = sf_remove(ao_first, \"\\\\.\"),\n    ao_middle_name = sf_remove(ao_middle, \"\\\\.\"),\n    ao_last_name = sf_remove(ao_last, \"\\\\.\"),\n    ao_suffix = sf_remove(ao_suffix, \"\\\\.\"),\n    ao_credential = sf_remove(ao_credential, \"\\\\.\"),\n    ao_title = sf_remove(ao_title, \"\\\\.\"),\n    ao_phone = make_phone(ao_phone)\n  )\n\nw241_ao\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,917 × 10\n   npi      entity ao_prefix ao_first_name ao_middle_name ao_last_name ao_suffix\n * <chr>    <chr>  <chr>     <chr>         <chr>          <chr>        <chr>    \n 1 1952724… O      <NA>      MICHELE       <NA>           WHITE        <NA>     \n 2 1548924… O      <NA>      TANESHA       <NA>           MORGAN       <NA>     \n 3 1295504… O      <NA>      KENDRA        <NA>           TAYLOR       <NA>     \n 4 1386413… O      <NA>      MELISSA       <NA>           DELLA FEMINA <NA>     \n 5 1558130… O      MRS       MALYNDI       R              WEST         <NA>     \n 6 1821867… O      <NA>      AURORA        CANE           HOYLE        <NA>     \n 7 1649049… O      DR        ASMITA        <NA>           PATEL        <NA>     \n 8 1275302… O      MR        RANGANARAYAN  <NA>           NARASIMHAN   <NA>     \n 9 1356110… O      DR        AKRAM         <NA>           ABD EL KADER <NA>     \n10 1508635… O      <NA>      JAYSON        <NA>           ROWLAND      <NA>     \n# ℹ 3,907 more rows\n# ℹ 3 more variables: ao_credential <chr>, ao_title <chr>, ao_phone <chr>\n```\n\n\n:::\n:::\n\n\n\n\n<hr>\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n\n## Session Information \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n**R version 4.4.2 (2024-10-31 ucrt)**\n\n**Platform:** x86_64-w64-mingw32/x64 \n\n**locale:**\n_LC_COLLATE=English_United States.utf8_, _LC_CTYPE=English_United States.utf8_, _LC_MONETARY=English_United States.utf8_, _LC_NUMERIC=C_ and _LC_TIME=English_United States.utf8_\n\n**attached base packages:** \n_stats_, _graphics_, _grDevices_, _utils_, _datasets_, _methods_ and _base_\n\n**other attached packages:** \n_S7(v.0.2.0)_, _arktax(v.0.0.0.9000)_, _nppez(v.0.0.1)_, _codex(v.0.0.1)_, _fuimus(v.0.0.2)_, _collapse(v.2.0.18)_, _data.table(v.1.16.99)_, _lubridate(v.1.9.3)_, _forcats(v.1.0.0)_, _stringr(v.1.5.1)_, _dplyr(v.1.1.4)_, _purrr(v.1.0.2)_, _readr(v.2.1.5)_, _tidyr(v.1.3.1)_, _tibble(v.3.2.1)_, _ggplot2(v.3.5.1)_ and _tidyverse(v.2.0.0)_\n\n**loaded via a namespace (and not attached):** \n_rappdirs(v.0.3.3)_, _utf8(v.1.2.4)_, _generics(v.0.1.3)_, _stringi(v.1.8.4)_, _hms(v.1.1.3)_, _digest(v.0.6.37)_, _magrittr(v.2.0.3)_, _evaluate(v.1.0.1)_, _grid(v.4.4.2)_, _timechange(v.0.3.0)_, _fastmap(v.1.2.0)_, _jsonlite(v.1.8.9)_, _pins(v.1.4.0)_, _pander(v.0.6.5)_, _fansi(v.1.0.6)_, _scales(v.1.3.0)_, _textshaping(v.0.4.0)_, _RApiSerialize(v.0.1.4)_, _cli(v.3.6.3)_, _rlang(v.1.1.4)_, _munsell(v.0.5.1)_, _withr(v.3.0.2)_, _yaml(v.2.3.10)_, _qs(v.0.27.2)_, _tools(v.4.4.2)_, _parallel(v.4.4.2)_, _tzdb(v.0.4.0)_, _colorspace(v.2.1-1)_, _vctrs(v.0.6.5)_, _R6(v.2.5.1)_, _lifecycle(v.1.0.4)_, _snakecase(v.0.11.1)_, _cheapr(v.0.9.91)_, _stringfish(v.0.16.0)_, _fs(v.1.6.5)_, _htmlwidgets(v.1.6.4)_, _janitor(v.2.2.0)_, _ragg(v.1.3.3)_, _pkgconfig(v.2.0.3)_, _RcppParallel(v.5.1.9)_, _pillar(v.1.9.0)_, _gtable(v.0.3.6)_, _glue(v.1.8.0)_, _Rcpp(v.1.0.13-1)_, _systemfonts(v.1.1.0)_, _xfun(v.0.49)_, _tidyselect(v.1.2.1)_, _rstudioapi(v.0.17.1)_, _knitr(v.1.49)_, _htmltools(v.0.5.8.1)_, _rmarkdown(v.2.29)_ and _compiler(v.4.4.2)_\n:::\n:::\n",
    "supporting": [
      "nppes_archives_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}