[
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html",
    "href": "posts/taxonomy/provider_taxonomy.html",
    "title": "Taxonomy Codes",
    "section": "",
    "text": "Purpose: Categorize health care providers by their type, classification, and specialization.\n\nMaintenance: National Uniform Claim Committee (NUCC). Updated twice a year, in January and July.\n\nApplication: Used in various healthcare processes, including:\n\nElectronic healthcare transactions\nNPI enumeration\nMedicare provider enrollment\nInsurance credentialing\nClaims processing\nDetermining network adequacy"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#raw",
    "href": "posts/taxonomy/provider_taxonomy.html#raw",
    "title": "Taxonomy Codes",
    "section": "\n3.1 Raw",
    "text": "3.1 Raw\n\narktax::taxonomy_raw()\n\n# A tibble: 27,054 × 13\n    year version code       display_name section grouping         classification\n   &lt;dbl&gt;   &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;            &lt;chr&gt;         \n 1  2009       0 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 2  2009       1 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 3  2010       0 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 4  2010       1 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 5  2011       0 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 6  2011       1 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 7  2012       0 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 8  2012       1 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n 9  2013       0 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n10  2013       1 101Y00000X &lt;NA&gt;         &lt;NA&gt;    Behavioral Heal… Counselor     \n# ℹ 27,044 more rows\n# ℹ 6 more variables: specialization &lt;chr&gt;, definition &lt;chr&gt;, notes &lt;chr&gt;,\n#   modified &lt;date&gt;, effective &lt;date&gt;, deactivated &lt;date&gt;"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#hierarchy",
    "href": "posts/taxonomy/provider_taxonomy.html#hierarchy",
    "title": "Taxonomy Codes",
    "section": "\n3.2 Hierarchy",
    "text": "3.2 Hierarchy\n\narktax::taxonomy_hierarchy()\n\n# A tibble: 3,259 × 3\n   code       level               description                                 \n   &lt;chr&gt;      &lt;ord&gt;               &lt;chr&gt;                                       \n 1 101200000X I. Section          Individual                                  \n 2 101200000X II. Grouping        Behavioral Health & Social Service Providers\n 3 101200000X III. Classification Drama Therapist                             \n 4 101Y00000X I. Section          Individual                                  \n 5 101Y00000X II. Grouping        Behavioral Health & Social Service Providers\n 6 101Y00000X III. Classification Counselor                                   \n 7 101YA0400X I. Section          Individual                                  \n 8 101YA0400X II. Grouping        Behavioral Health & Social Service Providers\n 9 101YA0400X III. Classification Counselor                                   \n10 101YA0400X IV. Specialization  Addiction (Substance Use Disorder)          \n# ℹ 3,249 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#changelog",
    "href": "posts/taxonomy/provider_taxonomy.html#changelog",
    "title": "Taxonomy Codes",
    "section": "\n3.3 Changelog",
    "text": "3.3 Changelog\n\narktax::taxonomy_changelog()\n\n# A tibble: 599 × 4\n   code       date       change      details           \n   &lt;chr&gt;      &lt;date&gt;     &lt;ord&gt;       &lt;chr&gt;             \n 1 101200000X 2021-01-01 effective   new               \n 2 102L00000X 2007-01-01 effective   new               \n 3 102L00000X 2007-07-01 modified    definition, source\n 4 102X00000X 2007-07-01 effective   new               \n 5 103G00000X 2007-01-01 modified    title             \n 6 103G00000X 2019-01-01 modified    definition        \n 7 103GC0700X 2007-01-01 deactivated use 103G00000X    \n 8 103K00000X 2008-07-01 effective   new               \n 9 103K00000X 2016-01-01 modified    definition        \n10 103T00000X 2007-01-01 modified    definition        \n# ℹ 589 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#sources",
    "href": "posts/taxonomy/provider_taxonomy.html#sources",
    "title": "Taxonomy Codes",
    "section": "\n3.4 Sources",
    "text": "3.4 Sources\n\narktax::taxonomy_sources()\n\n# A tibble: 721 × 3\n   code       source     text                                                   \n   &lt;chr&gt;      &lt;ord&gt;      &lt;chr&gt;                                                  \n 1 101200000X primary    North American Drama Therapy Association, www.nadta.org\n 2 101Y00000X primary    Abridged from definitions provided by the National Boa…\n 3 102L00000X primary    Registry of Psychoanalysts published by the National A…\n 4 102X00000X primary    The National Federation for Biblio/Poetry Therapy      \n 5 103G00000X primary    American Psychological Association, www.apa.org        \n 6 103K00000X primary    Association of Professional Behavior Analysts, www.apb…\n 7 103T00000X primary    American Psychological Association                     \n 8 103TA0400X primary    American Psychological Association, www.apa.org        \n 9 103TA0400X additional The APA proficiency is Addiction Psychology.           \n10 103TA0700X primary    American Psychological Association, www.apa.org        \n# ℹ 711 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#display-names",
    "href": "posts/taxonomy/provider_taxonomy.html#display-names",
    "title": "Taxonomy Codes",
    "section": "\n3.5 Display Names",
    "text": "3.5 Display Names\n\narktax::taxonomy_display()\n\n# A tibble: 874 × 2\n   code       display_name                                \n   &lt;chr&gt;      &lt;chr&gt;                                       \n 1 101200000X Drama Therapist                             \n 2 101Y00000X Counselor                                   \n 3 101YA0400X Addiction (Substance Use Disorder) Counselor\n 4 101YM0800X Mental Health Counselor                     \n 5 101YP1600X Pastoral Counselor                          \n 6 101YP2500X Professional Counselor                      \n 7 101YS0200X School Counselor                            \n 8 102L00000X Psychoanalyst                               \n 9 102X00000X Poetry Therapist                            \n10 103G00000X Clinical Neuropsychologist                  \n# ℹ 864 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#definitions",
    "href": "posts/taxonomy/provider_taxonomy.html#definitions",
    "title": "Taxonomy Codes",
    "section": "\n3.6 Definitions",
    "text": "3.6 Definitions\n\narktax::taxonomy_definition()\n\n# A tibble: 874 × 2\n   code       definition                                                        \n   &lt;chr&gt;      &lt;chr&gt;                                                             \n 1 101200000X Drama therapists are trained in the intentional use of drama and …\n 2 101Y00000X A provider who is trained and educated in the performance of beha…\n 3 101YA0400X None                                                              \n 4 101YM0800X None                                                              \n 5 101YP1600X None                                                              \n 6 101YP2500X None                                                              \n 7 101YS0200X None                                                              \n 8 102L00000X Psychoanalysis is a comprehensive, theoretical framework which, w…\n 9 102X00000X A medical or mental health professional who has attained credenti…\n10 103G00000X A clinical psychologist who applies principles of assessment and …\n# ℹ 864 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#nucc-to-medicare",
    "href": "posts/taxonomy/provider_taxonomy.html#nucc-to-medicare",
    "title": "Taxonomy Codes",
    "section": "\n4.1 NUCC to Medicare",
    "text": "4.1 NUCC to Medicare\n\nna_squish &lt;- \\(x) stringr::str_squish(fuimus::na_if_common(x))\n\nxwalk &lt;- provider::taxonomy_crosswalk(tidy = FALSE) |&gt; \n  janitor::clean_names() |&gt; \n  dplyr::tibble() |&gt; \n  dplyr::mutate(\n    dplyr::across(dplyr::everything(), na_squish),\n    .id = dplyr::row_number()) |&gt; \n  dplyr::rename(\n    taxonomy_code = provider_taxonomy_code,\n    taxonomy_type = provider_taxonomy_description_type_classification_specialization,\n    specialty_code = medicare_specialty_code,\n    specialty_type = medicare_provider_supplier_type_description) |&gt; \n  dplyr::mutate(\n    type_note = stringr::str_extract(specialty_type, \"(\\\\[)(.*?)(\\\\])$\", group = 2),\n    code_note = stringr::str_extract(specialty_code, \"(\\\\[)(.*?)(\\\\])$\", group = 2),\n    specialty_type = stringr::str_remove(specialty_type, \"\\\\[.*\\\\]\"),\n    specialty_code = stringr::str_remove(specialty_code, \"\\\\[.*\\\\]\"))\n\nxwalk\n\n# A tibble: 559 × 7\n   specialty_code specialty_type     taxonomy_code taxonomy_type   .id type_note\n   &lt;chr&gt;          &lt;chr&gt;              &lt;chr&gt;         &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;    \n 1 01             Physician/General… 208D00000X    Allopathic &…     1 &lt;NA&gt;     \n 2 02             Physician/General… 208600000X    Allopathic &…     2 &lt;NA&gt;     \n 3 02             Physician/General… 2086H0002X    Allopathic &…     3 &lt;NA&gt;     \n 4 02             Physician/General… 2086S0120X    Allopathic &…     4 &lt;NA&gt;     \n 5 02             Physician/General… 2086S0122X    Allopathic &…     5 &lt;NA&gt;     \n 6 02             Physician/General… 2086S0105X    Allopathic &…     6 &lt;NA&gt;     \n 7 02             Physician/General… 2086S0102X    Allopathic &…     7 &lt;NA&gt;     \n 8 02             Physician/General… 2086X0206X    Allopathic &…     8 &lt;NA&gt;     \n 9 02             Physician/General… 2086S0127X    Allopathic &…     9 &lt;NA&gt;     \n10 02             Physician/General… 2086S0129X    Allopathic &…    10 &lt;NA&gt;     \n# ℹ 549 more rows\n# ℹ 1 more variable: code_note &lt;chr&gt;\n\n\nTaxonomy Split\n\ntaxonomy &lt;- xwalk |&gt; \n  dplyr::select(.id, taxonomy_code, taxonomy_type) |&gt; \n  tidyr::separate_longer_delim(\n    cols = taxonomy_type, \n    delim = stringr::regex(\"[\\\\/|,]\")) |&gt;\n  dplyr::mutate(\n    taxonomy_type = dplyr::if_else(\n      codex::sf_detect(\n        taxonomy_type, \n        \"Urban Indian Health \\\\(I\"), \n      \"Urban Indian Health [ITU] Pharmacy\", \n      str_squish(taxonomy_type)),\n    dlim = NULL,\n    n = NULL) |&gt; \n  dplyr::filter(\n    sf_ndetect(\n      taxonomy_type, \n      \"^T$|U\\\\)\\\\sPharmacy\")\n    ) |&gt;\n  dplyr::mutate(\n    .group = dplyr::row_number(), \n    .by = c(taxonomy_code, .id), \n    .after = .id) |&gt;\n  tidyr::pivot_wider(\n    names_from = .group,\n    values_from = taxonomy_type,\n    names_prefix = \"tax\")\n\ntaxonomy\n\n# A tibble: 552 × 8\n     .id taxonomy_code tax1                        tax2  tax3  tax4  tax5  tax6 \n   &lt;int&gt; &lt;chr&gt;         &lt;chr&gt;                       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n 1     1 208D00000X    Allopathic & Osteopathic P… Gene… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 2     2 208600000X    Allopathic & Osteopathic P… Surg… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 3     3 2086H0002X    Allopathic & Osteopathic P… Surg… Hosp… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 4     4 2086S0120X    Allopathic & Osteopathic P… Surg… Pedi… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 5     5 2086S0122X    Allopathic & Osteopathic P… Surg… Plas… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 6     6 2086S0105X    Allopathic & Osteopathic P… Surg… Surg… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 7     7 2086S0102X    Allopathic & Osteopathic P… Surg… Surg… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 8     8 2086X0206X    Allopathic & Osteopathic P… Surg… Surg… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n 9     9 2086S0127X    Allopathic & Osteopathic P… Surg… Trau… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n10    10 2086S0129X    Allopathic & Osteopathic P… Surg… Vasc… &lt;NA&gt;  &lt;NA&gt;  &lt;NA&gt; \n# ℹ 542 more rows\n\ntaxonomy |&gt; \n  hacksaw::count_split(\n    tax1,\n    tax2,\n    tax3,\n    tax4,\n    tax5,\n    tax6\n  )\n\n[[1]]\n# A tibble: 28 × 2\n   tax1                                                           n\n   &lt;chr&gt;                                                      &lt;int&gt;\n 1 Allopathic & Osteopathic Physicians                          289\n 2 Physician Assistants & Advanced Practice Nursing Providers    58\n 3 Suppliers                                                     40\n 4 Respiratory                                                   32\n 5 Behavioral Health & Social Service Providers                  26\n 6 Hospitals                                                     18\n 7 Ambulatory Health Care Facilities                             15\n 8 Chiropractic Providers                                        12\n 9 Dietary & Nutritional Service Providers                        9\n10 Podiatric Medicine & Surgery Service Providers                 8\n# ℹ 18 more rows\n\n[[2]]\n# A tibble: 97 × 2\n   tax2                          n\n   &lt;chr&gt;                     &lt;int&gt;\n 1 Internal Medicine            42\n 2 Clinical Nurse Specialist    34\n 3 Developmental                31\n 4 Pediatrics                   26\n 5 Pharmacy                     25\n 6 Psychiatry & Neurology       25\n 7 Psychologist                 23\n 8 Surgery                      20\n 9 Nurse Practitioner           18\n10 Orthopedic Surgery           17\n# ℹ 87 more rows\n\n[[3]]\n# A tibble: 249 × 2\n   tax3                                               n\n   &lt;chr&gt;                                          &lt;int&gt;\n 1 &lt;NA&gt;                                              97\n 2 Rehabilitative & Restorative Service Providers    23\n 3 Sports Medicine                                   20\n 4 Hospice and Palliative Medicine                   15\n 5 Center                                            10\n 6 Sleep Medicine                                    10\n 7 Registered                                         9\n 8 Addiction Medicine                                 8\n 9 Psychiatric                                        8\n10 Critical Care Medicine                             6\n# ℹ 239 more rows\n\n[[4]]\n# A tibble: 42 × 2\n   tax4                                  n\n   &lt;chr&gt;                             &lt;int&gt;\n 1 &lt;NA&gt;                                463\n 2 Occupational Therapist               13\n 3 Physical Therapist                   10\n 4 Mental Health                         9\n 5 Nutrition                             8\n 6 and Restorative Service Providers     6\n 7 Rehabilitation                        4\n 8 Critical Care                         2\n 9 Dentist                               2\n10 Multi-Specialty                       2\n# ℹ 32 more rows\n\n[[5]]\n# A tibble: 39 × 2\n   tax5                n\n   &lt;chr&gt;           &lt;int&gt;\n 1 &lt;NA&gt;              507\n 2 Anaplastologist     2\n 3 Ergonomics          2\n 4 Hand                2\n 5 Human Factors       2\n 6 Orthotist           2\n 7 Pediatrics          2\n 8 Prosthetist         2\n 9 & Metabolism        1\n10 Adult               1\n# ℹ 29 more rows\n\n[[6]]\n# A tibble: 4 × 2\n  tax6                      n\n  &lt;chr&gt;                 &lt;int&gt;\n1 &lt;NA&gt;                    549\n2 Brain Injury Medicine     1\n3 Clinical                  1\n4 Eating &Swallowing        1\n\n\nSpecialty Split\n\n### Medicare Footnotes\nfootnotes &lt;- dplyr::tibble(\n  note = as.character(1:14),\n  note_description = readr::read_lines(\n    here::here(\n      \"posts\", \n      \"taxonomy\", \n      \"scripts\", \n      \"taxonomy_notes.txt\")))\n\nspecialty &lt;- xwalk |&gt; \n  dplyr::select(\n    .id, \n    specialty_code,\n    specialty_type,\n    type_note,\n    code_note) |&gt;\n  dplyr::left_join(footnotes, \n    by = dplyr::join_by(type_note == note)) |&gt; \n  dplyr::left_join(footnotes, \n    by = dplyr::join_by(code_note == note)) |&gt; \n  fuimus::combine(\n    name = note, \n    columns = c(\n      \"type_note\", \n      \"code_note\"), \n    sep = \", \") |&gt;\n  fuimus::combine(\n    name = note_description, \n    columns = c(\n      \"note_description.x\", \n      \"note_description.y\"), \n    sep = \" \")\n\n\nspecialty |&gt; \n  dplyr::mutate(.id = as.character(.id)) |&gt; \n  tidyr::nest(data = .id) |&gt; \n  dplyr::mutate(.id = map_chr(\n    data, function(x) \n      glue::glue(\"{codex::delist(x)}\") |&gt; \n      glue::glue_collapse(sep = \", \")),\n    data = NULL) |&gt; \n  tidyr::separate_longer_delim(\n    cols = specialty_type, \n    delim = stringr::fixed(\"/\")) |&gt; \n  dplyr::mutate(specialty_type = str_squish(specialty_type))\n\n# A tibble: 221 × 5\n   specialty_code specialty_type   note  note_description .id                   \n   &lt;chr&gt;          &lt;chr&gt;            &lt;chr&gt; &lt;chr&gt;            &lt;chr&gt;                 \n 1 01             Physician        &lt;NA&gt;  &lt;NA&gt;             1                     \n 2 01             General Practice &lt;NA&gt;  &lt;NA&gt;             1                     \n 3 02             Physician        &lt;NA&gt;  &lt;NA&gt;             2, 3, 4, 5, 6, 7, 8, …\n 4 02             General Surgery  &lt;NA&gt;  &lt;NA&gt;             2, 3, 4, 5, 6, 7, 8, …\n 5 03             Physician        &lt;NA&gt;  &lt;NA&gt;             27, 28, 29            \n 6 03             Allergy          &lt;NA&gt;  &lt;NA&gt;             27, 28, 29            \n 7 03             Immunology       &lt;NA&gt;  &lt;NA&gt;             27, 28, 29            \n 8 04             Physician        &lt;NA&gt;  &lt;NA&gt;             30, 31, 32, 33, 34, 3…\n 9 04             Otolaryngology   &lt;NA&gt;  &lt;NA&gt;             30, 31, 32, 33, 34, 3…\n10 05             Physician        &lt;NA&gt;  &lt;NA&gt;             38, 39, 40, 41, 42, 43\n# ℹ 211 more rows"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#sources-1",
    "href": "posts/taxonomy/provider_taxonomy.html#sources-1",
    "title": "Taxonomy Codes",
    "section": "\n4.2 Sources",
    "text": "4.2 Sources\n\nHealth Care Provider Taxonomy Code Set v24.0 (PDF)\ntaxonomy.NUCC.org\nCMS.gov\nASAM.org"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#session-information",
    "href": "posts/taxonomy/provider_taxonomy.html#session-information",
    "title": "Taxonomy Codes",
    "section": "\n4.3 Session Information",
    "text": "4.3 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: arktax(v.0.0.1), codex(v.0.0.1), collapsibleTree(v.0.1.8), provider(v.0.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.49), httr2(v.1.0.7), htmlwidgets(v.1.6.4), collapse(v.2.0.18), RApiSerialize(v.0.1.4), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.2), generics(v.0.1.3), curl(v.6.0.1), parallel(v.4.4.2), fansi(v.1.0.6), pkgconfig(v.2.0.3), checkmate(v.2.3.2), data.table(v.1.16.99), RcppParallel(v.5.1.9), lifecycle(v.1.0.4), compiler(v.4.4.2), cheapr(v.0.9.91), textshaping(v.0.4.0), munsell(v.0.5.1), data.tree(v.1.1.0), janitor(v.2.2.0), qs(v.0.27.2), snakecase(v.0.11.1), htmltools(v.0.5.8.1), yaml(v.2.3.10), crayon(v.1.5.3), pillar(v.1.9.0), hacksaw(v.0.0.2), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), pander(v.0.6.5), fuimus(v.0.0.2), pins(v.1.4.0), rprojroot(v.2.0.4), fastmap(v.1.2.0), grid(v.4.4.2), archive(v.1.1.10), here(v.1.0.1), colorspace(v.2.1-1), cli(v.3.6.3), magrittr(v.2.0.3), utf8(v.1.2.4), withr(v.3.0.2), backports(v.1.5.0), scales(v.1.3.0), rappdirs(v.0.3.3), bit64(v.4.5.2), timechange(v.0.3.0), rmarkdown(v.2.29), bit(v.4.5.0), ragg(v.1.3.3), hms(v.1.1.3), stringfish(v.0.16.0), evaluate(v.1.0.1), knitr(v.1.49), rlang(v.1.1.4), Rcpp(v.1.0.13-1), zeallot(v.0.1.0), glue(v.1.8.0), strex(v.2.0.1), vroom(v.1.6.5), rstudioapi(v.0.17.1), jsonlite(v.1.8.9), R6(v.2.5.1), systemfonts(v.1.1.0) and fs(v.1.6.5)"
  },
  {
    "objectID": "posts/regex/regex.html",
    "href": "posts/regex/regex.html",
    "title": "Learning to Love Regexes By Learning Them",
    "section": "",
    "text": "The postfix for a wildcard that begins with a letter is [0-9]{n}.\nIn remove_redundant(), try pmap for rr() step.\nGroups 3, 4 & 5 beginning with letters.\nGroup 5 ending with letters.\n\n\n\n\n\n\n\n\nGood Examples\n\n\n\n\n\n\n\nlist(\"L80\", \n     c(\"L56\", \"L59\"))\n\nlength(sf_extract(hcpcs, \"^L56|^L59|^L80\"))\nlength(sf_extract(hcpcs, \"^L(5[69]|80)[0-9]{2}$\"))\n\nbench::mark(\n  raw = sf_extract(hcpcs, \"^L56|^L59|^L80\"),\n  compact = sf_extract(hcpcs, \"^L(5[69]|80)[0-9]{2}$\"),\n  iterations = 10000) |&gt; \n  select(expression:total_time)\n\n\n\nlist(c(\"021\", \"022\", \"026\", \"027\"), \n     c(\"032\", \"033\"), \n     c(\"042\", \"044\"), \n     \"050\")\n\nbench::mark(\n  raw = sf_extract(hcpcs, \"^021|^022|^026|^027|^032|^033|^042|^044|^050\"),\n  compact = sf_extract(hcpcs, sf_convert(\"^0(2[1267]|3[23]|4[24]|50)[A-Z0-9]{2}$\")),\n  iterations = 10000) |&gt; \n  select(expression:total_time)\n\n\n\nlist(c(\"C75\", \"C97\"),\n     c(\"G02\", \"G04\"))\n\nlength(sf_extract(hcpcs, \"^C75|^C97|^G02|^G04\"))\nlength(sf_extract(hcpcs, \"^C(75|97)[0-9]{2}$|^G0[24][0-9]{2}$\"))\nlength(sf_extract(hcpcs, \"^(C(75|97)|G0[24])[0-9]{2}$\"))\n\nbench::mark(\n  raw = sf_extract(hcpcs, \"^C75|^C97|^G02|^G04\"),\n  reduced = sf_extract(hcpcs, \"^C(75|97)[0-9]{2}$|^G0[24][0-9]{2}$\"),\n  compact = sf_extract(hcpcs, sf_convert(\"^(C(75|97)|G0[24])[0-9]{2}$\")),\n  iterations = 10000) |&gt; \n  select(expression:total_time)\n\n\n\nlist(\"0[2-5]\", \n     \"15\", \n     \"2[027]\", \n     \"3[0-24-6]\", \n     \"5[0458]\", \n     \"6[134]\", \n     \"76\", \n     \"9[25]\", \n     \"C[79]\", \n     \"E0\", \n     \"G0\", \n     \"S2\") -&gt; c4list\n\nc4list\n\nc4raw &lt;- \"^02|^03|^04|^05|^15|^20|^22|^27|^30|^31|^32|^34|^35|^36|^50|^54|^55|^58|^61|^63|^64|^76|^92|^95|^C7|^C9|^E0|^G0|^S2\"\n\nc4compact &lt;- paste0(\"^(\", sf_collapse(list_c(c4list), collapse = \"|\"), \")[A-Z0-9]{3}$\")\n\nlength(sf_extract(hcpcs, c4raw))\nlength(sf_extract(hcpcs, c4compact))\n\nbench::mark(\n  raw = sf_extract(hcpcs, c4raw),\n  compact = sf_extract(hcpcs, c4compact),\n  iterations = 10000) |&gt; \n  select(expression:total_time)"
  },
  {
    "objectID": "posts/regex/regex.html#session-information",
    "href": "posts/regex/regex.html#session-information",
    "title": "Learning to Love Regexes By Learning Them",
    "section": "\n6.1 Session Information",
    "text": "6.1 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: compiler, stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: codex(v.0.0.1), kit(v.0.0.19), collapse(v.2.0.18), data.table(v.1.16.99), stringfish(v.0.16.0), S7(v.0.2.0), vctrs(v.0.6.5), cli(v.3.6.3), rlang(v.1.1.4), stringr(v.1.5.1), purrr(v.1.0.2), dplyr(v.1.1.4) and fuimus(v.0.0.2)\nloaded via a namespace (and not attached): rappdirs(v.0.3.3), utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), fastmap(v.1.2.0), rprojroot(v.2.0.4), jsonlite(v.1.8.9), pins(v.1.4.0), pander(v.0.6.5), fansi(v.1.0.6), northstar(v.0.0.7), textshaping(v.0.4.0), RApiSerialize(v.0.1.4), crayon(v.1.5.3), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.2), qs(v.0.27.2), parallel(v.4.4.2), here(v.1.0.1), R6(v.2.5.1), lifecycle(v.1.0.4), cheapr(v.0.9.91), fs(v.1.6.5), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), glue(v.1.8.0), Rcpp(v.1.0.13-1), systemfonts(v.1.1.0), xfun(v.0.49), tibble(v.3.2.1), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.49), htmltools(v.0.5.8.1) and rmarkdown(v.2.29)"
  },
  {
    "objectID": "posts/percent/percent.html",
    "href": "posts/percent/percent.html",
    "title": "100%",
    "section": "",
    "text": "Percent Changes (%ΔX). Let me preface what I have to say about percent changes by saying that–other than being a clue that a percent change or a ratio expressed as a percentage lurks somewhere close–I view the % sign as being equivalent to 1/100. So, for example, 23% is just another name for .23, and 100% is just another name for 1. Indeed, economists are just as likely to say “with probability 1” as they are to say “with a 100% probability.”\nIt turns out that natural logarithms (“ln” or “log”) are the perfect way to think about percent changes. Suppose a variable X has a “before” and an “after” value.\nplatonic_change = \\(old, new) {\n  log(new) - log(old)\n}\n\nearthly_change = \\(old, new) {\n  (new - old) / old\n}\n\nmidpoint_change = \\(old, new) {\n  (new - old) / ((new + old) / 2)\n}\n\nplatonic_change(old = 1, new = 5) * 100\n\n[1] 160.9438\n\nmidpoint_change(old = 1, new = 5) * 100\n\n[1] 133.3333\n\nearthly_change(old = 1, new = 5) * 100\n\n[1] 400\nFormally, that’s because of these limits: lim_{x rightarrow infty} {(x-1) over {(x+1)/2}} = 2\nlim_{x rightarrow infty} {(0-x) over {(x+0)/2}} = -2\nBelow is a table showing the relationship between Platonic percent changes, midpoint percent changes and earthly percent changes. In financial terms, one can think of earthly percentage changes as “continuously compounded” versions of Platonic percent changes:\nex &lt;- dplyr::tibble(\n  platonic = pct$platonic,\n  midpoint = 200 * (exp(platonic / 100) - 1) / (exp(platonic / 100) + 1),\n  earthly = 100 * exp(platonic / 100) - 100,\n  ratio = exp(platonic / 100)\n)\n\nex |&gt; \n  filter(platonic &gt;= 0) |&gt; \n  print(n = 20)\n\n# A tibble: 19 × 4\n   platonic midpoint earthly ratio\n      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1        0     0       0     1   \n 2        5     5.00    5.13  1.05\n 3       10     9.99   10.5   1.11\n 4       15    15.0    16.2   1.16\n 5       20    19.9    22.1   1.22\n 6       25    24.9    28.4   1.28\n 7       30    29.8    35.0   1.35\n 8       40    39.5    49.2   1.49\n 9       50    49.0    64.9   1.65\n10       60    58.3    82.2   1.82\n11       70    67.3   101.    2.01\n12       80    76.0   123.    2.23\n13       90    84.4   146.    2.46\n14      100    92.4   172.    2.72\n15      140   121.    306.    4.06\n16      210   156.    717.    8.17\n17      280   177.   1544.   16.4 \n18      350   188.   3212.   33.1 \n19      420   194.   6569.   66.7\nThere are at least two things to point out in this table:\nLet’s look at negative percent changes as well. Here is the table for how the different concepts of negative percent changes compare:\nex |&gt; \n  filter(platonic &lt;= 0) |&gt; \n  arrange(desc(platonic)) |&gt;\n  print(n = 20)\n\n# A tibble: 19 × 4\n   platonic midpoint earthly  ratio\n      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1        0     0       0    1     \n 2       -5    -5.00   -4.88 0.951 \n 3      -10    -9.99   -9.52 0.905 \n 4      -15   -15.0   -13.9  0.861 \n 5      -20   -19.9   -18.1  0.819 \n 6      -25   -24.9   -22.1  0.779 \n 7      -30   -29.8   -25.9  0.741 \n 8      -40   -39.5   -33.0  0.670 \n 9      -50   -49.0   -39.3  0.607 \n10      -60   -58.3   -45.1  0.549 \n11      -70   -67.3   -50.3  0.497 \n12      -80   -76.0   -55.1  0.449 \n13      -90   -84.4   -59.3  0.407 \n14     -100   -92.4   -63.2  0.368 \n15     -140  -121.    -75.3  0.247 \n16     -210  -156.    -87.8  0.122 \n17     -280  -177.    -93.9  0.0608\n18     -350  -188.    -97.0  0.0302\n19     -420  -194.    -98.5  0.0150\nA key point to make is that with both Platonic (logarithmic) percent changes and midpoint percent changes, equal sized changes of opposite direction cancel each other out. For example, a +50% Platonic percent change, followed by a -50% Platonic percent change, would leave things back where they started. This is true for a +50% midpoint percent change, followed by a -50% midpoint percent change. But, starting from X, a 50% earthly percent change leads to 1.5 X. Following that by a -50% earthly percent change leads to a result of .75 X, which is not at all where things started. This is a very ugly feature of earthly percent changes. That ugliness is one good reason to rise up to the Platonic level, or at least the midpoint level.\nContinuous-Time Growth Rates. There are many wonderful things about Platonic percent changes that I can’t go into without breaking my resolve to keep the equation count down. But one of the most wonderful is that to find a growth rate one only has to divide by the time that has elapsed between Xbefore and Xafter. That is, as long as one is using the Platonic percent change %ΔX=log(Xafter)-log(Xbefore),\n%ΔX / [time elapsed] = growth rate.\nThe growth rate here is technically called a “continuous-time growth rate.” The continuous-time growth rate is not only very useful, it is a thing of great beauty.\nUpdate on How the Different Concepts of Percent Change Relate to Each Other. One of my students asked about how the different percent change concepts relate to each other. For that, I need some equations. And I need “exp” which is the opposite of the natural logarithm “log.” Taking the function exp(X) is the same as taking e, (a number that is famous among mathematicians and equal to 2.718…) to the power X. For the equations below, it is crucial to treat % as another name for 1/100, so that, for example, 5% is the same thing as .05.\nEarthly percent changes are the most familiar. Almost anyone other than an economist who talks about percent changes is talking about earthly percent changes. Most of you learned about earthly percent changes in elementary school. So let me first write down how to get from the earthly percent change to the Platonic and midpoint percent changes. (I won’t try to prove these equations here, just state them.)\nearthly_to_platonic = \\(earthly) log(1 + earthly)\n\nearthly_to_midpoint = \\(earthly) (2 * earthly) / (2 + earthly)\nIf you are trying to figure out the effects of continuously compounded interest, or the effects of some other continuous-time growth rate, you will want to be able go from Platonic percent changes–which come straight from multiplying the growth rate by the amount of elapsed time–to earthly percent changes. For good measure, I will include the formula for midpoint percent changes as well:\nplatonic_to_earthly = \\(platonic) exp(platonic) - 1\n\nplatonic_to_midpoint = \\(platonic) (2 * (exp(platonic) - 1)) / (exp(platonic) + 1)\nI found the function giving the midpoint percent change as a function of the Platonic percent change quite intriguing. For one thing, when I changed signs and put “-Platonic” in the place where you see “Platonic” on the right-hand side of the equation the result equal to -midpoint. When switching the sign of the argument (the inside thing: Platonic) just switches the sign of the overall expression, mathematicians call it an “odd” function (“odd” as in “odd and even” not “odd” as in “strange”). The meaning of this function being odd is that Platonic and midpoint percent changes map into each other the same way for negative changes as for positive changes. (That isn’t true at all for the earthly percent changes.) The other intriguing thing about the function giving the midpoint percent change as a function of the Platonic percent change is how close it is to giving back the same number. To a fourth-order (the squared term and the fourth power term are zero), the approximation for the function is this:\n# midpoint = platonic - (platonic^3 / 12) + (5th power and higher terms)\n\nmidpoint_to_earthly = \\(midpoint) (2 * midpoint) / (2 - midpoint)\n\nmidpoint_to_platonic = \\(midpoint) log(2 + midpoint) - log(2 - midpoint)\n\nmidpoint_to_platonic2 = \\(midpoint) log(1 + (midpoint / 2)) - log(1 - (midpoint / 2))"
  },
  {
    "objectID": "posts/percent/percent.html#session-information",
    "href": "posts/percent/percent.html#session-information",
    "title": "100%",
    "section": "\n1 Session Information",
    "text": "1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: here(v.1.0.1), fuimus(v.0.0.2), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), rprojroot(v.2.0.4), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), rlang(v.1.1.4), crayon(v.1.5.3), bit64(v.4.5.2), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), parallel(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), bit(v.4.5.0), vroom(v.1.6.5), ragg(v.1.3.3), pkgconfig(v.2.0.3), pillar(v.1.9.0), gtable(v.0.3.6), Rcpp(v.1.0.13), glue(v.1.8.0), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html",
    "href": "posts/nppes_nber_archives/nppes_archives.html",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_base &lt;- wk_2024_01_01$basic |&gt; \n  fcompute(\n    npi = npi,\n    entity = fcase(entity == \"Ind\", \"I\", \n                   entity == \"Org\", \"O\"),\n    prefix = sf_remove(prefix, \"\\\\.\"),\n    first_name = sf_remove(first, \"\\\\.\"),\n    middle_name = sf_remove(middle, \"\\\\.\"),\n    last_name = sf_remove(last, \"\\\\.\"),\n    suffix = sf_remove(suffix, \"\\\\.\"),\n    credential = sf_remove(credential, \"\\\\.\"),\n    org_parent = sf_remove(parent_org_lbn, \"\\\\.|,\"),\n    org_prov = sf_remove(prov_org_lbn, \"\\\\.|,\"),\n    cert_date = certified,\n    enum_date = enum_date,\n    deact_date = deact_date,\n    react_date = react_date,\n    sole_prop = sole_prop,\n    org_subpart = org_sub)\n\n# Isolate deactivated NPIs with no reactivation date\nw241_deact &lt;- remove_quiet(w241_base[not_na(w241_base$deact_date) & na(w241_base$react_date),]) |&gt; arrange(deact_date)\n\nlist(npi = sf_convert(w241_deact$npi), date = sf_convert(as.character(w241_deact$deact_date)))\n\n$npi\n  [1] \"1669187142\" \"1740769108\" \"1306947155\" \"1629162847\" \"1932764321\"\n  [6] \"1639777162\" \"1225721004\" \"1881387454\" \"1659064103\" \"1245710276\"\n [11] \"1407550650\" \"1861958381\" \"1366032211\" \"1871643411\" \"1356965545\"\n [16] \"1053909168\" \"1598141798\" \"1558827089\" \"1396498929\" \"1427635978\"\n [21] \"1003372533\" \"1356098677\" \"1124584644\" \"1043834245\" \"1275099707\"\n [26] \"1750905949\" \"1922564459\" \"1669938189\" \"1801352331\" \"1174921001\"\n [31] \"1255533444\" \"1053451807\" \"1902956584\" \"1972727766\" \"1043221609\"\n [36] \"1497360507\" \"1528204658\" \"1427209394\" \"1952187734\" \"1306961792\"\n [41] \"1609370246\" \"1801911540\" \"1740847706\" \"1447285531\" \"1659940278\"\n [46] \"1336197292\" \"1619744679\" \"1356046247\" \"1972506574\" \"1326041351\"\n [51] \"1912900531\" \"1730182320\" \"1275538464\" \"1295732659\" \"1457357329\"\n [56] \"1760489017\" \"1750389383\" \"1073510996\" \"1427056662\" \"1942208053\"\n [61] \"1669472007\" \"1134120363\" \"1922008028\" \"1518959428\" \"1891797825\"\n [66] \"1528052602\" \"1740274141\" \"1669467247\" \"1578558276\" \"1942296686\"\n [71] \"1306834817\" \"1275521544\" \"1386633493\" \"1760472328\" \"1073504015\"\n [76] \"1275523367\" \"1861473555\" \"1184607566\" \"1841272275\" \"1932183092\"\n [81] \"1255314068\" \"1841273349\" \"1215910740\" \"1366427106\" \"1033194899\"\n [86] \"1215913496\" \"1245216142\" \"1255318051\" \"1346220787\" \"1386614378\"\n [91] \"1619947637\" \"1386615953\" \"1023089505\" \"1639142748\" \"1336111087\"\n [96] \"1902879919\" \"1427023191\" \"1154397800\" \"1417922345\" \"1225003585\"\n[101] \"1770552424\" \"1497724215\" \"1639147804\" \"1700846839\" \"1639139041\"\n[106] \"1841251758\" \"1386605335\" \"1821051590\" \"1184688228\" \"1184688129\"\n[111] \"1386600849\" \"1184689234\" \"1386600294\" \"1992762132\" \"1649237009\"\n[116] \"1760430789\" \"1053369033\" \"1659320349\" \"1720039530\" \"1932152535\"\n[121] \"1659325991\" \"1730133919\" \"1831143122\" \"1235185430\" \"1114974540\"\n[126] \"1619924974\" \"1255388609\" \"1881632859\" \"1609815869\" \"1356381636\"\n[131] \"1336182211\" \"1366485898\" \"1508809120\" \"1720023302\" \"1043243652\"\n[136] \"1760413967\" \"1639103104\" \"1356375919\" \"1962437822\" \"1467486670\"\n[141] \"1922029834\" \"1861411779\" \"1184643595\" \"1871514489\" \"1427071125\"\n[146] \"1568485332\" \"1437165677\" \"1982618047\" \"1881618981\" \"1477569440\"\n[151] \"1477577740\" \"1780691543\" \"1932117272\" \"1861401663\" \"1124036827\"\n[156] \"1932118957\" \"1033126685\" \"1003826454\" \"1396754388\" \"1922010149\"\n[161] \"1770594152\" \"1265445324\" \"1770594921\" \"1710091509\" \"1083728422\"\n[166] \"1316051956\" \"1528174570\" \"1932215399\" \"1437265402\" \"1982712402\"\n[171] \"1295843746\" \"1235245473\" \"1023123759\" \"1457469082\" \"1063529410\"\n[176] \"1780793810\" \"1760593461\" \"1477665677\" \"1669583241\" \"1912018672\"\n[181] \"1154428670\" \"1598868085\" \"1083718621\" \"1255438321\" \"1720184344\"\n[186] \"1538260690\" \"1639270879\" \"1629169420\" \"1114026937\" \"1275632788\"\n[191] \"1811089683\" \"1255425021\" \"1164515011\" \"1245326628\" \"1093800625\"\n[196] \"1285728733\" \"1437247541\" \"1821178880\" \"1962590984\" \"1437246196\"\n[201] \"1467549980\" \"1902994353\" \"1932298205\" \"1174603070\" \"1821172297\"\n[206] \"1932289667\" \"1356421135\" \"1043393945\" \"1730261009\" \"1245312784\"\n[211] \"1801970397\" \"1740362045\" \"1235213372\" \"1700962636\" \"1932285368\"\n[216] \"1598840605\" \"1356427868\" \"1376629683\" \"1366513582\" \"1316018476\"\n[221] \"1265504278\" \"1033283304\" \"1568537553\" \"1992870935\" \"1356418461\"\n[226] \"1427116953\" \"1962570119\" \"1043388226\" \"1003975871\" \"1740358027\"\n[231] \"1346308319\" \"1275694507\" \"1043379308\" \"1326116567\" \"1356400485\"\n[236] \"1699835322\" \"1386704591\" \"1487717021\" \"1467514083\" \"1215099874\"\n[241] \"1538223102\" \"1942364435\" \"1053473496\" \"1356403752\" \"1568525798\"\n[246] \"1326100371\" \"1245394485\" \"1477616704\" \"1134282254\" \"1932262508\"\n[251] \"1568529782\" \"1982760195\" \"1508923038\" \"1710037379\" \"1083766737\"\n[256] \"1578615068\" \"1932259876\" \"1487708228\" \"1689727182\" \"1538213897\"\n[261] \"1487708921\" \"1083768170\" \"1033255864\" \"1154467512\" \"1124165907\"\n[266] \"1295873172\" \"1457490575\" \"1407996630\" \"1679612543\" \"1467591156\"\n[271] \"1114068251\" \"1922149061\" \"1578605358\" \"1952436370\" \"1144362393\"\n[276] \"1437293370\" \"1942335815\" \"1235264599\" \"1558496729\" \"1700912581\"\n[281] \"1942336839\" \"1265564868\" \"1730212184\" \"1679607121\" \"1821112509\"\n[286] \"1437276870\" \"1700901865\" \"1356467625\" \"1235254343\" \"1447375142\"\n[291] \"1598885402\" \"1215059027\" \"1588784706\" \"1841416377\" \"1275656423\"\n[296] \"1528181922\" \"1780809699\" \"1508083437\" \"1750500583\" \"1326260266\"\n[301] \"1740400795\" \"1427270560\" \"1629282298\" \"1245445477\" \"1053526947\"\n[306] \"1689884256\" \"1023226347\" \"1598973711\" \"1467662247\" \"1578767976\"\n[311] \"1942403894\" \"1144423773\" \"1992900070\" \"1134329204\" \"1407053507\"\n[316] \"1225233414\" \"1376747311\" \"1881891562\" \"1306030135\" \"1619165339\"\n[321] \"1699969642\" \"1821281767\" \"1184801300\" \"1962686576\" \"1649452756\"\n[326] \"1457539207\" \"1093990848\" \"1902074552\" \"1952589871\" \"1669655585\"\n[331] \"1841476819\" \"1285807735\" \"1316117773\" \"1255506440\" \"1346417060\"\n[336] \"1013184928\" \"1033387360\" \"1003086117\" \"1467611046\" \"1861652844\"\n[341] \"1285884171\" \"1962659441\" \"1730330911\" \"1033366901\" \"1134371297\"\n[346] \"1639323231\" \"1154571263\" \"1548417678\" \"1609024207\" \"1457599839\"\n[351] \"1205074663\" \"1265677793\" \"1043457815\" \"1720223100\" \"1760637912\"\n[356] \"1013152446\" \"1144465246\" \"1679728224\" \"1841437977\" \"1437391380\"\n[361] \"1770719379\" \"1356583314\" \"1063648905\" \"1073747481\" \"1760716864\"\n[366] \"1679705297\" \"1154552669\" \"1073848909\" \"1265769483\" \"1861729907\"\n[371] \"1760615405\" \"1669706982\" \"1356675185\" \"1710215488\" \"1922331081\"\n[376] \"1154656460\" \"1376871178\" \"1770811671\" \"1790017010\" \"1316261555\"\n[381] \"1962733766\" \"1831420223\" \"1346567245\" \"1346556545\" \"1801103411\"\n[386] \"1104134741\" \"1316255862\" \"1700188323\" \"1699070011\" \"1659689669\"\n[391] \"1285944959\" \"1649580465\" \"1477855393\" \"1508166299\" \"1689975682\"\n[396] \"1891093092\" \"1124312855\" \"1285931196\" \"1720371701\" \"1467732594\"\n[401] \"1194007401\" \"1760760797\" \"1255627261\" \"1780972000\" \"1710265343\"\n[406] \"1497033708\" \"1528330057\" \"1417231945\" \"1083990972\" \"1649556689\"\n[411] \"1205112844\" \"1700150257\" \"1235404138\" \"1801156534\" \"1447514989\"\n[416] \"1689938573\" \"1629332374\" \"1164779237\" \"1609124742\" \"1992054092\"\n[421] \"1285984088\" \"1356694327\" \"1871845990\" \"1144565482\" \"1386989176\"\n[426] \"1396080578\" \"1154668754\" \"1376881284\" \"1427397975\" \"1316286040\"\n[431] \"1013257211\" \"1720329683\" \"1679814297\" \"1831534809\" \"1376975938\"\n[436] \"1841624863\" \"1518391697\" \"1689008013\" \"1205263811\" \"1093136848\"\n[441] \"1760805626\" \"1518386077\" \"1487060851\" \"1811391600\" \"1770989857\"\n[446] \"1245628080\" \"1134517915\" \"1457747073\" \"1871970616\" \"1952788275\"\n[451] \"1366820417\" \"1659750982\" \"1669852521\" \"1811357312\" \"1023479227\"\n[456] \"1124473913\" \"1689025751\" \"1437501616\" \"1639623713\" \"1467903450\"\n[461] \"1649722133\" \"1396297933\" \"1801331368\" \"1720523871\" \"1407396732\"\n[466] \"1568996874\" \"1467974840\" \"1063935708\" \"1023536133\" \"1972015303\"\n[471] \"1588176556\" \"1558875278\" \"1114425923\" \"1609375559\" \"1467952598\"\n[476] \"1023518917\" \"1477052926\" \"1508368861\" \"1972006302\" \"1346746427\"\n[481] \"1669979852\" \"1750888236\" \"1457840233\" \"1003307265\" \"1396236451\"\n[486] \"1104319466\" \"1396238861\" \"1871063750\" \"1518437367\" \"1972075604\"\n[491] \"1245704527\" \"1720631344\" \"1477195550\" \"1316586522\" \"1255952008\"\n[496] \"1578174835\" \"1265043202\" \"1508466632\" \"1801491634\" \"1063008134\"\n[501] \"1386232106\" \"1427647551\" \"1114511607\" \"1265026637\" \"1568046233\"\n[506] \"1992474092\" \"1629732847\" \"1295493518\" \"1487315156\" \"1366192494\"\n[511] \"1245974054\" \"1003552092\" \"1952022394\" \"1235864588\" \"1235866948\"\n[516] \"1689391971\" \"1366154361\" \"1548975683\" \"1184323222\" \"1609579325\"\n[521] \"1790486686\" \"1144914037\" \"1518648617\" \"1962185629\" \"1831975721\"\n[526] \"1336927466\" \"1285415810\" \"1538940481\" \"1700659679\" \"1649737792\"\n[531] \"1336682863\" \"1750155792\" \"1922709831\" \"1851608574\" \"1366824591\"\n[536] \"1477977817\" \"1821559766\" \"1811361330\" \"1295449643\" \"1487387064\"\n[541] \"1598414906\" \"1205865227\" \"1336460971\" \"1528092053\" \"1942234406\"\n[546] \"1669693636\" \"1083085245\" \"1538534862\" \"1578287702\" \"1083180269\"\n[551] \"1861472409\" \"1053951210\" \"1568880334\" \"1598840381\" \"1659099729\"\n[556] \"1649051202\" \"1861054199\" \"1104859362\" \"1356446876\" \"1154190866\"\n[561] \"1417732553\" \"1982247896\" \"1144624016\" \"1154393114\" \"1174017081\"\n[566] \"1871086421\" \"1407349897\" \"1598225377\" \"1740740331\" \"1265622831\"\n[571] \"1538768197\" \"1396382586\" \"1457908071\" \"1528720141\" \"1184383424\"\n[576] \"1396350658\" \"1205428919\" \"1982383394\" \"1538852686\" \"1164115218\"\n[581] \"1528751617\" \"1184317232\" \"1639862766\" \"1851084990\" \"1225721392\"\n[586] \"1780378216\" \"1386413516\" \"1346228897\" \"1013695105\" \"1891439659\"\n[591] \"1629532890\" \"1558825364\" \"1316717234\" \"1114276995\" \"1487209482\"\n[596] \"1649987660\" \"1073219028\" \"1558889527\" \"1063648350\" \"1134905524\"\n[601] \"1942855531\"\n\n$date\n  [1] \"2024-01-01\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n  [6] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [11] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [16] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [21] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [26] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [31] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [36] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [41] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-02\"\n [46] \"2024-01-02\" \"2024-01-02\" \"2024-01-02\" \"2024-01-03\" \"2024-01-03\"\n [51] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [56] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [61] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [66] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [71] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [76] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [81] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [86] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [91] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n [96] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[101] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[106] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[111] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[116] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[121] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[126] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[131] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[136] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[141] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[146] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[151] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[156] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[161] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[166] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[171] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[176] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[181] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[186] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[191] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[196] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[201] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[206] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[211] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[216] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[221] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[226] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[231] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[236] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[241] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[246] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[251] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[256] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[261] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[266] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[271] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[276] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[281] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[286] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[291] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[296] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[301] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[306] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[311] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[316] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[321] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[326] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[331] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[336] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[341] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[346] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[351] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[356] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[361] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[366] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[371] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[376] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[381] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[386] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[391] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[396] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[401] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[406] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[411] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[416] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[421] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[426] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[431] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[436] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[441] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[446] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[451] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[456] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[461] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[466] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[471] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[476] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[481] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[486] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[491] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[496] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[501] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[506] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[511] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[516] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[521] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[526] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[531] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[536] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[541] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[546] \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\" \"2024-01-03\"\n[551] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[556] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[561] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[566] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[571] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-04\"\n[576] \"2024-01-04\" \"2024-01-04\" \"2024-01-04\" \"2024-01-05\" \"2024-01-05\"\n[581] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[586] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[591] \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\" \"2024-01-05\"\n[596] \"2024-01-05\" \"2024-01-06\" \"2024-01-06\" \"2024-01-06\" \"2024-01-06\"\n[601] \"2024-01-06\"\n\n# Remove them from base frame\nw241_base &lt;- fsubset(w241_base, npi %!in% w241_deact$npi)\n\n# Split into individuals and organizations\nbase_g &lt;- GRP(w241_base, ~ entity)\n\nrsplit(w241_base, base_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(base_g))\n\n$I\n# A tibble: 15,267 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;     \n 1 1912620808 I      &lt;NA&gt;   DEIDRE     &lt;NA&gt;        HAMILTON    &lt;NA&gt;   &lt;NA&gt;      \n 2 1518543511 I      &lt;NA&gt;   VANESSA    &lt;NA&gt;        CHAMBERS    &lt;NA&gt;   RN        \n 3 1619688645 I      &lt;NA&gt;   DESTINY    RENEE       BARNETT     &lt;NA&gt;   AGACNP-BC \n 4 1437575206 I      &lt;NA&gt;   MICHELE    &lt;NA&gt;        WHITE       &lt;NA&gt;   PHD LLP L…\n 5 1053912162 I      MS     CHANEL     MARIE       POOLE       &lt;NA&gt;   LMT       \n 6 1265752158 I      &lt;NA&gt;   LIVIA      S           MACHADO, R… &lt;NA&gt;   &lt;NA&gt;      \n 7 1609131515 I      &lt;NA&gt;   EYAD       &lt;NA&gt;        ALDAAS      &lt;NA&gt;   MD        \n 8 1750841870 I      &lt;NA&gt;   TAM        T           TRAN        &lt;NA&gt;   MD        \n 9 1942708748 I      &lt;NA&gt;   WINFORD    &lt;NA&gt;        PALMA       &lt;NA&gt;   CRNA      \n10 1255864583 I      &lt;NA&gt;   GWENDOLYN  &lt;NA&gt;        WILSON      &lt;NA&gt;   LMHC, ATR \n# ℹ 15,257 more rows\n# ℹ 5 more variables: cert_date &lt;date&gt;, enum_date &lt;date&gt;, deact_date &lt;date&gt;,\n#   react_date &lt;date&gt;, sole_prop &lt;chr&gt;\n\n$O\n# A tibble: 3,917 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;    &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;date&gt;    \n 1 19527… O      &lt;NA&gt;       WHITE B… 2024-01-01 2014-01-31 NA         NA        \n 2 15489… O      &lt;NA&gt;       MORGAN … 2022-10-04 2021-10-29 NA         NA        \n 3 12955… O      &lt;NA&gt;       KENDRA … 2023-09-26 2024-01-01 NA         NA        \n 4 13864… O      &lt;NA&gt;       ULYSSES… 2023-09-19 2024-01-01 NA         NA        \n 5 15581… O      &lt;NA&gt;       RETHINK… 2023-12-21 2024-01-01 NA         NA        \n 6 18218… O      &lt;NA&gt;       AURORA … 2023-12-28 2024-01-01 NA         NA        \n 7 16490… O      &lt;NA&gt;       PULSE U… 2023-12-27 2024-01-01 NA         NA        \n 8 12753… O      &lt;NA&gt;       NVR & S… 2023-12-30 2024-01-01 NA         NA        \n 9 13561… O      &lt;NA&gt;       HEBKRAM… 2023-12-30 2024-01-01 NA         NA        \n10 15086… O      &lt;NA&gt;       HYPNOSI… 2023-12-30 2024-01-01 NA         NA        \n# ℹ 3,907 more rows\n# ℹ 1 more variable: org_subpart &lt;chr&gt;\n\n\n\n\n# Credentials in Last Name\nw241_base |&gt; \n  fsubset(sf_detect(last_name, \", \")) |&gt; \n  fsubset(na(credential)) |&gt; \n  glimpse()\n\nRows: 2\nColumns: 16\n$ npi         &lt;chr&gt; \"1265752158\", \"1386886174\"\n$ entity      &lt;chr&gt; \"I\", \"I\"\n$ prefix      &lt;chr&gt; NA, \"MS\"\n$ first_name  &lt;chr&gt; \"LIVIA\", \"JUDY\"\n$ middle_name &lt;chr&gt; \"S\", \"A\"\n$ last_name   &lt;chr&gt; \"MACHADO, RPH, PHARMD, BCPS\", \"LIU, INC\"\n$ suffix      &lt;chr&gt; NA, NA\n$ credential  &lt;chr&gt; NA, NA\n$ org_parent  &lt;chr&gt; NA, NA\n$ org_prov    &lt;chr&gt; NA, NA\n$ cert_date   &lt;date&gt; 2024-01-01, 2024-01-03\n$ enum_date   &lt;date&gt; 2010-06-02, 2009-03-25\n$ deact_date  &lt;date&gt; 2018-02-20, NA\n$ react_date  &lt;date&gt; 2018-09-11, NA\n$ sole_prop   &lt;chr&gt; \"N\", \"Y\"\n$ org_subpart &lt;chr&gt; NA, NA\n\n\n\nw241_base_spl &lt;- rsplit(w241_base, base_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(base_g))\n\n# Org NPIs that are org_subpart have org_parent names\nrsplit(w241_base_spl$O, w241_base_spl$O$org_subpart)\n\n$N\n# A tibble: 3,514 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;    &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;date&gt;    \n 1 19527… O      &lt;NA&gt;       WHITE B… 2024-01-01 2014-01-31 NA         NA        \n 2 15489… O      &lt;NA&gt;       MORGAN … 2022-10-04 2021-10-29 NA         NA        \n 3 12955… O      &lt;NA&gt;       KENDRA … 2023-09-26 2024-01-01 NA         NA        \n 4 13864… O      &lt;NA&gt;       ULYSSES… 2023-09-19 2024-01-01 NA         NA        \n 5 15581… O      &lt;NA&gt;       RETHINK… 2023-12-21 2024-01-01 NA         NA        \n 6 18218… O      &lt;NA&gt;       AURORA … 2023-12-28 2024-01-01 NA         NA        \n 7 16490… O      &lt;NA&gt;       PULSE U… 2023-12-27 2024-01-01 NA         NA        \n 8 12753… O      &lt;NA&gt;       NVR & S… 2023-12-30 2024-01-01 NA         NA        \n 9 13561… O      &lt;NA&gt;       HEBKRAM… 2023-12-30 2024-01-01 NA         NA        \n10 15086… O      &lt;NA&gt;       HYPNOSI… 2023-12-30 2024-01-01 NA         NA        \n# ℹ 3,504 more rows\n# ℹ 1 more variable: org_subpart &lt;chr&gt;\n\n$Y\n# A tibble: 403 × 9\n   npi    entity org_parent org_prov cert_date  enum_date  deact_date react_date\n   &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;    &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;date&gt;    \n 1 16894… O      RAE 6 LLC  RAE6TECH 2023-12-30 2024-01-01 NA         NA        \n 2 11248… O      POPLAR PE… POPLAR … 2024-01-01 2023-09-06 NA         NA        \n 3 19420… O      ASTERRA L… AUBURN … 2024-01-01 2024-01-01 NA         NA        \n 4 15783… O      LW CARE L… LW CARE… 2023-12-27 2024-01-01 NA         NA        \n 5 10137… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 6 18319… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 7 15682… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n 8 14671… O      1336854454 CLINICA… 2024-01-01 2023-01-23 NA         NA        \n 9 18218… O      LW CARE L… LW CARE… 2024-01-01 2024-01-01 NA         NA        \n10 11144… O      LAKE WASH… ADVANCE… 2024-01-01 2018-06-11 NA         NA        \n# ℹ 393 more rows\n# ℹ 1 more variable: org_subpart &lt;chr&gt;\n\n# Individuals - Sole Proprietors\nrsplit(w241_base_spl$I, w241_base_spl$I$sole_prop)\n\n$N\n# A tibble: 10,405 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;     \n 1 1912620808 I      &lt;NA&gt;   DEIDRE     &lt;NA&gt;        HAMILTON    &lt;NA&gt;   &lt;NA&gt;      \n 2 1619688645 I      &lt;NA&gt;   DESTINY    RENEE       BARNETT     &lt;NA&gt;   AGACNP-BC \n 3 1265752158 I      &lt;NA&gt;   LIVIA      S           MACHADO, R… &lt;NA&gt;   &lt;NA&gt;      \n 4 1609131515 I      &lt;NA&gt;   EYAD       &lt;NA&gt;        ALDAAS      &lt;NA&gt;   MD        \n 5 1750841870 I      &lt;NA&gt;   TAM        T           TRAN        &lt;NA&gt;   MD        \n 6 1942708748 I      &lt;NA&gt;   WINFORD    &lt;NA&gt;        PALMA       &lt;NA&gt;   CRNA      \n 7 1477895621 I      &lt;NA&gt;   GARY       FRANK       RIVAS       &lt;NA&gt;   RD, PA-C  \n 8 1891305488 I      &lt;NA&gt;   ALISHA     LYNNE       RUKOVISHNI… &lt;NA&gt;   &lt;NA&gt;      \n 9 1477322501 I      &lt;NA&gt;   ELLA       &lt;NA&gt;        COOK        &lt;NA&gt;   NP        \n10 1568231694 I      &lt;NA&gt;   ANNA       &lt;NA&gt;        THOMPSON    &lt;NA&gt;   &lt;NA&gt;      \n# ℹ 10,395 more rows\n# ℹ 5 more variables: cert_date &lt;date&gt;, enum_date &lt;date&gt;, deact_date &lt;date&gt;,\n#   react_date &lt;date&gt;, sole_prop &lt;chr&gt;\n\n$X\n# A tibble: 29 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;     \n 1 1639155427 I      &lt;NA&gt;   STEPHEN    JOHN        SMITH       &lt;NA&gt;   MD        \n 2 1992706071 I      &lt;NA&gt;   PRISCILA   &lt;NA&gt;        SUNTAY      &lt;NA&gt;   MD        \n 3 1619942935 I      DR     NORMA      VB          MADERAZO    &lt;NA&gt;   MD        \n 4 1710978242 I      DR     SHAHIRA    HALIM       FELOUS      &lt;NA&gt;   MD        \n 5 1376521179 I      &lt;NA&gt;   ROSEMARY   M           BRANSTETTER &lt;NA&gt;   LCSW      \n 6 1033109871 I      DR     JOHN       B           LAFAVE      &lt;NA&gt;   MD        \n 7 1750325726 I      MS     MERRILL    &lt;NA&gt;        GOLDSTEIN   &lt;NA&gt;   NYPSYA    \n 8 1144274283 I      MS     LUCILLE    J           ST-PIERRE   &lt;NA&gt;   PTA       \n 9 1528045325 I      MR     JOHN       &lt;NA&gt;        BOYD        &lt;NA&gt;   LCPC      \n10 1578511382 I      DR     DONALD     MICHAEL     MANZO       &lt;NA&gt;   OD        \n# ℹ 19 more rows\n# ℹ 5 more variables: cert_date &lt;date&gt;, enum_date &lt;date&gt;, deact_date &lt;date&gt;,\n#   react_date &lt;date&gt;, sole_prop &lt;chr&gt;\n\n$Y\n# A tibble: 4,833 × 13\n   npi        entity prefix first_name middle_name last_name   suffix credential\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;     \n 1 1518543511 I      &lt;NA&gt;   VANESSA    &lt;NA&gt;        CHAMBERS    &lt;NA&gt;   RN        \n 2 1437575206 I      &lt;NA&gt;   MICHELE    &lt;NA&gt;        WHITE       &lt;NA&gt;   PHD LLP L…\n 3 1053912162 I      MS     CHANEL     MARIE       POOLE       &lt;NA&gt;   LMT       \n 4 1255864583 I      &lt;NA&gt;   GWENDOLYN  &lt;NA&gt;        WILSON      &lt;NA&gt;   LMHC, ATR \n 5 1831968973 I      MS     APRIL      JENILLE     JULIAN-ST … &lt;NA&gt;   &lt;NA&gt;      \n 6 1922877067 I      &lt;NA&gt;   VASHTI     &lt;NA&gt;        CLARK       &lt;NA&gt;   LMSW      \n 7 1568231603 I      &lt;NA&gt;   LYNDSEY    &lt;NA&gt;        HANSEN      &lt;NA&gt;   &lt;NA&gt;      \n 8 1477322519 I      &lt;NA&gt;   MOHAMED    &lt;NA&gt;        ABDURAHMAN  &lt;NA&gt;   &lt;NA&gt;      \n 9 1912776055 I      &lt;NA&gt;   DWIGHT     &lt;NA&gt;        ADAMS       &lt;NA&gt;   CRNA      \n10 1730958877 I      &lt;NA&gt;   GIFTY      &lt;NA&gt;        BREW-THOMP… &lt;NA&gt;   &lt;NA&gt;      \n# ℹ 4,823 more rows\n# ℹ 5 more variables: cert_date &lt;date&gt;, enum_date &lt;date&gt;, deact_date &lt;date&gt;,\n#   react_date &lt;date&gt;, sole_prop &lt;chr&gt;\n\n\n\n\nw241_add &lt;- join(\n  wk_2024_01_01$address, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi)\n\nmake_case &lt;- function(x, y) {\n  fcase(\n    not_na(x) & not_na(y) & x == y, str_glue(\"{y}\"), \n    not_na(x) & not_na(y) & x != y, str_glue(\"{x}, {y}\"), \n    not_na(x) & na(y), str_glue(\"{x}\"), \n    na(x) & not_na(y), str_glue(\"{y}\")\n  )\n}\n\nmake_zip &lt;- function(x) {\n  map_chr(\n    x, \n    function(x) {\n      if (not_na(x) & nchar(x) == 9) \n        str_glue(\n          \"{substr(x, 1, 5)}-{substr(x, 6, 9)}\"\n          )\n      else \n        x\n    }\n  )\n}\n\nmake_phone &lt;- function(x) {\n  \n  cnd1 &lt;- \"({substr(x, 1, 3)}) {substr(x, 4, 6)}-{substr(x, 7, 10)}\"\n  cnd2 &lt;- smush(cnd1, \", ({substr(x, 13, 15)})-{substr(x, 16, 18)}-{substr(x, 19, 22)}\")\n  \n  map_chr(x, function(x) {if (not_na(x)) {\n    fcase(\n      nchar(x) == 10, str_glue(cnd1), \n      nchar(x) &gt; 10, str_glue(cnd2),\n      default = str_glue(\"{x}\"))} else str_glue(\"{x}\") })\n}\n\n# Exact match on all address fields\nw241_exact &lt;- w241_add |&gt; \n  filter(\n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_zip == prac_zip,\n    mail_country == prac_country,\n    mail_phone == prac_phone,\n    mail_fax == prac_fax) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = \"MP\",\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_phone(prac_fax))\n\n# Match on all except FAX\nw241_fax &lt;- w241_add |&gt; \n  filter(\n    npi %!in% w241_exact$npi,  \n    mail_address == prac_address, \n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country,\n    mail_zip == prac_zip,\n    mail_phone == prac_phone) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_case(mail_fax, prac_fax),\n    purpose = fcase(\n      not_na(mail_fax) & na(prac_fax), \"M\",\n      na(mail_fax) & not_na(prac_fax), \"P\",\n      default = \"MP\")) |&gt; \n  fmutate(fax = make_phone(fax))\n\n# Match on all except ZIP, PHONE, and FAX\nw241_phone &lt;- w241_add |&gt; \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi),      \n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country) |&gt;\n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = fcase(\n      not_na(mail_phone) & na(prac_phone), \"M\",\n      na(mail_phone) & not_na(prac_phone), \"P\",\n      default = \"MP\"),\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_case(mail_zip, prac_zip),\n    country = prac_country,\n    phone = make_case(mail_phone, prac_phone),\n    fax = make_case(mail_fax, prac_fax)) |&gt; \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Pivot remaining addresses\nw241_piv &lt;- w241_add |&gt; \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi, \n      w241_phone$npi\n      )) |&gt; \n  pivot_longer(\n    -c(npi, entity), \n    names_to = \"type_part\", \n    values_to = \"value\", \n    names_transform = list(\n      type_part = stringr::str_to_title)\n    ) |&gt; \n  separate_wider_delim(\n    type_part, \n    delim = \"_\", \n    names = c(\"type\", \"part\")) |&gt; \n  fmutate(\n    purpose = case_when(\n      type == \"Mail\" ~ \"M\",\n      type == \"Prac\" ~ \"P\",\n    .default = type),\n    type = NULL) |&gt;\n  pivot_wider(\n    names_from = part, \n    values_from = value) |&gt; \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Combine all address matches\nw241_add &lt;- rowbind(w241_exact, w241_fax, w241_phone, w241_piv)\n\nadd_g &lt;- GRP(w241_add, ~ entity)\n\nrsplit(w241_add, add_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(add_g))\n\n$I\n# A tibble: 22,883 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;\n 1 1437575206 I      MP      3840 PACKARD… ANN … MI    4810… US      (734… (734…\n 2 1477895621 I      MP      3144 SANTA A… EL M… CA    9173… US      (626… (626…\n 3 1346019486 I      MP      57 TOWNSHIP … CHES… OH    4561… US      (740… (740…\n 4 1265201206 I      MP      822 LOVELACE… BREW… AL    3642… US      (251… (800…\n 5 1447029483 I      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 6 1295504249 I      MP      1550 N 115TH… SEAT… WA    9813… US      (206… (206…\n 7 1073382024 I      MP      401 16TH ST … ROCH… MN    5590… US      (507… (507…\n 8 1639948698 I      MP      920 SARATOGA… SAN … CA    9512… US      (408… (408…\n 9 1508635574 I      MP      14725 SE RHO… PORT… OR    9723… US      (971… (971…\n10 1932978905 I      MP      3801 KELL BL… WICH… TX    7630… US      (940… (940…\n# ℹ 22,873 more rows\n\n$O\n# A tibble: 5,839 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;\n 1 1548924087 O      MP      46 GRAMATAN … MOUN… NY    1055… US      (295… (646…\n 2 1205605342 O      MP      7610 CARROLL… TAKO… MD    2091… US      (301… (301…\n 3 1114796257 O      MP      6510 KENILWO… RIVE… MD    2073… US      (301… (301…\n 4 1902675945 O      MP      2585 PACIFIC… TORR… CA    9050… US      (424… (310…\n 5 1538938576 O      MP      10751 W ROWE… PEOR… AZ    8538… US      (623… (623…\n 6 1568231512 O      MP      1121 FIRECRA… JUST… TX    7624… US      (940… (940…\n 7 1912776964 O      MP      3760 CURTIS … COCOA FL    3292… US      (321… (321…\n 8 1306615364 O      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 9 1336918390 O      MP      240 E GARRIS… GAST… NC    2805… US      (980… (980…\n10 1649049610 O      MP      6751 N SUNSE… GLEN… AZ    8530… US      (775… (702…\n# ℹ 5,829 more rows\n\n\n\n\nw241_tax &lt;- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"taxonomy_code\", \n      \"taxonomy_group\", \n      \"taxonomy_primary\")\n    ], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fmutate(\n    level = fcase(\n      taxonomy_primary == \"Y\", \"Primary\",\n      taxonomy_primary == \"N\", \"Other\",\n      taxonomy_primary == \"X\", \"X\"),\n    taxonomy_primary = NULL)\n\nw241_tax &lt;- rowbind(\n  w241_tax |&gt; \n    fsubset(na(taxonomy_group)) |&gt; \n    fselect(-taxonomy_group) |&gt; \n    distinct(),\n  w241_tax |&gt; \n    fsubset(not_na(taxonomy_group)) |&gt; \n    fselect(-taxonomy_code, -level) |&gt; \n    distinct() |&gt; \n    frename(taxonomy_code = taxonomy_group) |&gt; \n    fmutate(level = \"Group\"))\n\ntax_g &lt;- GRP(w241_tax, ~ entity)\n\nw241_tax &lt;- rsplit(w241_tax, tax_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(tax_g))\n\nw241_tax\n\n$I\n# A tibble: 20,828 × 4\n   npi        taxonomy_code entity level  \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;  \n 1 1003009861 207RC0000X    I      Primary\n 2 1003013137 363AM0700X    I      Primary\n 3 1003013137 363AM0700X    I      Other  \n 4 1003018060 106H00000X    I      Primary\n 5 1003047531 207L00000X    I      Primary\n 6 1003047531 390200000X    I      Other  \n 7 1003047531 207L00000X    I      Other  \n 8 1003052903 2084P0800X    I      Primary\n 9 1003063173 208G00000X    I      Primary\n10 1003063173 208G00000X    I      Other  \n# ℹ 20,818 more rows\n\n$O\n# A tibble: 5,433 × 4\n   npi        taxonomy_code entity level  \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;  \n 1 1003096488 261Q00000X    O      Primary\n 2 1003196072 3416L0300X    O      Primary\n 3 1003200874 253Z00000X    O      Primary\n 4 1003200874 251E00000X    O      Other  \n 5 1003330226 251E00000X    O      Primary\n 6 1003330226 251J00000X    O      Other  \n 7 1003337734 324500000X    O      Primary\n 8 1003407230 261QM1300X    O      Primary\n 9 1003407230 251E00000X    O      Other  \n10 1003463092 333600000X    O      Primary\n# ℹ 5,423 more rows\n\n\n\n\nw241_tax$O |&gt; \n  mutate(N = n(), .by = npi) |&gt; \n  filter(N == 2) |&gt; \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |&gt; \n  filter(eq)\n\n# A tibble: 21 × 6\n   npi        taxonomy_code entity level     N eq   \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;lgl&gt;\n 1 1093182198 324500000X    O      Other     2 TRUE \n 2 1194812784 332B00000X    O      Other     2 TRUE \n 3 1235225210 251E00000X    O      Other     2 TRUE \n 4 1336114131 3416L0300X    O      Other     2 TRUE \n 5 1376554865 332B00000X    O      Other     2 TRUE \n 6 1396804225 324500000X    O      Other     2 TRUE \n 7 1396867578 3336C0002X    O      Other     2 TRUE \n 8 1427298140 261QP2000X    O      Other     2 TRUE \n 9 1457587222 251E00000X    O      Other     2 TRUE \n10 1467558668 332B00000X    O      Other     2 TRUE \n# ℹ 11 more rows\n\nw241_tax$I |&gt; \n  mutate(N = n(), .by = npi) |&gt; \n  filter(N == 2) |&gt; \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |&gt; \n  filter(eq)\n\n# A tibble: 1,135 × 6\n   npi        taxonomy_code entity level     N eq   \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;lgl&gt;\n 1 1003013137 363AM0700X    I      Other     2 TRUE \n 2 1003063173 208G00000X    I      Other     2 TRUE \n 3 1003122698 2085R0202X    I      Other     2 TRUE \n 4 1003182908 207ZP0101X    I      Other     2 TRUE \n 5 1003202565 207ZP0102X    I      Other     2 TRUE \n 6 1003249749 207L00000X    I      Other     2 TRUE \n 7 1003443680 207W00000X    I      Other     2 TRUE \n 8 1003461666 152W00000X    I      Other     2 TRUE \n 9 1003561242 111N00000X    I      Other     2 TRUE \n10 1003859794 363LF0000X    I      Other     2 TRUE \n# ℹ 1,125 more rows\n\n\n\n\nw241_lic &lt;- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"license_number\", \n      \"license_state\")], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi)\n\nlic_g &lt;- GRP(w241_lic, ~ entity)\n\nw241_lic &lt;- rsplit(w241_lic, lic_g) |&gt; \n  map(\\(df) \n      remove_quiet(df) |&gt; \n        filter(not_na(license_number))) |&gt; \n  setNames(GRPnames(lic_g))\n\nw241_lic\n\n$I\n# A tibble: 15,565 × 4\n   npi        license_number license_state entity\n   &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;         &lt;chr&gt; \n 1 1003009861 45263          AZ            I     \n 2 1003013137 4354           WI            I     \n 3 1003018060 959            NV            I     \n 4 1003047531 116063         CA            I     \n 5 1003047531 30135          OK            I     \n 6 1003047531 MD60681697     WA            I     \n 7 1003052903 087968         NY            I     \n 8 1003063173 5499           OK            I     \n 9 1003063173 036.143737     IL            I     \n10 1003063173 007606         AZ            I     \n# ℹ 15,555 more rows\n\n$O\n# A tibble: 592 × 4\n   npi        license_number license_state entity\n   &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;         &lt;chr&gt; \n 1 1003096488 12-296         MS            O     \n 2 1003196072 23-255         OH            O     \n 3 1003199829 10000          ND            O     \n 4 1003200874 HHA201205      NE            O     \n 5 1013007475 1673           WI            O     \n 6 1013069608 28RS00588100   NJ            O     \n 7 1013105568 H80CS06662     IN            O     \n 8 1013174127 X 05660-1      NY            O     \n 9 1013214089 230304         NY            O     \n10 1013995521 1038           WI            O     \n# ℹ 582 more rows\n\n\n\n\nw241_id &lt;- join(\n  wk_2024_01_01$identifier, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  # Remove Taxonomy Codes\n  fsubset(sf_ndetect(other_id, \"^[A-Z0-9]{9}X$\"))\n\nid_g &lt;- GRP(w241_id, ~ entity)\n\nrsplit(w241_id, id_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(id_g))\n\n$I\n# A tibble: 3,052 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;               &lt;chr&gt; \n 1 1003685140 3496       01            NH             STATE OF NEW HAMPS… I     \n 2 1134998198 1194322628 05            MI             &lt;NA&gt;                I     \n 3 1578544367 10007752   05            TX             &lt;NA&gt;                I     \n 4 1578544367 152031401  05            TX             &lt;NA&gt;                I     \n 5 1578544367 152028001  05            TX             &lt;NA&gt;                I     \n 6 1316936222 4160095    01            TN             BLUE CROSS          I     \n 7 1316936222 1053635    05            LA             &lt;NA&gt;                I     \n 8 1316936222 087281     05            AZ             &lt;NA&gt;                I     \n 9 1316936222 3000540    05            TN             &lt;NA&gt;                I     \n10 1316936222 P00444174  01            &lt;NA&gt;           MEDICARE RAILROAD   I     \n# ℹ 3,042 more rows\n\n$O\n# A tibble: 1,314 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;               &lt;chr&gt; \n 1 1417726456 0155098    05            OH             &lt;NA&gt;                O     \n 2 1225765241 U5083      01            TX             TEXAS MEDICAL LICE… O     \n 3 1689443665 1417266396 05            NY             &lt;NA&gt;                O     \n 4 1255611539 014469     01            TX             TEXAS HCSSA LICENSE O     \n 5 1508824574 890596700  05            FL             &lt;NA&gt;                O     \n 6 1750958104 1386940575 05            WI             &lt;NA&gt;                O     \n 7 1982294732 250000218  05            NV             &lt;NA&gt;                O     \n 8 1891209284 U300404468 01            RI             MEDICARE PTAN       O     \n 9 1730729385 1952817926 01            &lt;NA&gt;           ORGANIZATIONAL NPI  O     \n10 1730729385 1043526098 01            &lt;NA&gt;           NPI                 O     \n# ℹ 1,304 more rows\n\n\n\n\nw241_oth &lt;- join(\n  wk_2024_01_01$other, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    org_name = sf_remove(other_org_name, \"\\\\.\"),\n    org_type = sf_remove(other_org_type, \"\\\\.\"),\n    prefix = sf_remove(other_prefix, \"\\\\.\"),\n    first_name = sf_remove(other_first, \"\\\\.\"),\n    middle_name = sf_remove(other_middle, \"\\\\.\"),\n    last_name = sf_remove(other_last, \"\\\\.\"),\n    last_type = sf_remove(other_last_type, \"\\\\.\"),\n    suffix = sf_remove(other_suffix, \"\\\\.\"),\n    credential = sf_remove(other_credential, \"\\\\.\"))\n\noth_g &lt;- GRP(w241_oth, ~ entity)\n\nw241_oth &lt;- rsplit(w241_oth, oth_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(oth_g))\n\nw241_oth$I &lt;- vctrs::vec_slice(w241_oth$I, cheapr::row_na_counts(w241_oth$I) &lt; 6)\n\nw241_oth\n\n$I\n# A tibble: 1,219 × 9\n   npi        entity prefix first_name middle_name last_name  last_type suffix\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt; \n 1 1255864583 I      &lt;NA&gt;   GWEN       &lt;NA&gt;        WILSON     2         &lt;NA&gt;  \n 2 1659140796 I      &lt;NA&gt;   KATELIN    LEE ANN     BOYER      1         &lt;NA&gt;  \n 3 1184493223 I      &lt;NA&gt;   AESHA      ISHWARBHAI  PATEL      5         &lt;NA&gt;  \n 4 1437928579 I      &lt;NA&gt;   TREVA      JO          MOYA       1         &lt;NA&gt;  \n 5 1881463826 I      &lt;NA&gt;   AMANDA     RENEE       SCHELLHORN 1         &lt;NA&gt;  \n 6 1871362814 I      &lt;NA&gt;   BRITTANY   C           DARNELL    1         &lt;NA&gt;  \n 7 1770352718 I      &lt;NA&gt;   PEBBLES    MAURINE     YEE        5         &lt;NA&gt;  \n 8 1497524441 I      &lt;NA&gt;   CARING     FOR         MAMAS      2         &lt;NA&gt;  \n 9 1033988084 I      &lt;NA&gt;   JANINE     LISSETT     LESSLEY    1         &lt;NA&gt;  \n10 1952170912 I      &lt;NA&gt;   NICOLE     &lt;NA&gt;        BORDEN     1         &lt;NA&gt;  \n# ℹ 1,209 more rows\n# ℹ 1 more variable: credential &lt;chr&gt;\n\n$O\n# A tibble: 1,125 × 4\n   npi        entity org_name                                  org_type\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;                                     &lt;chr&gt;   \n 1 1548924087 O      MORGAN HEART PLLC                         4       \n 2 1538845474 O      SRS-LA MIRADA, LLC                        3       \n 3 1477337988 O      RISING SUN DERMATOLOGY & COSMETICS CENTER 3       \n 4 1447567391 O      UNITED PLUS HOME HEALTH LLC               3       \n 5 1841442092 O      PALOMA HOME HEALTHCARE                    3       \n 6 1508824574 O      THE ALFANO CENTER                         3       \n 7 1295004455 O      MAXSERVE HOSPICE                          3       \n 8 1790271476 O      MAXSERVE HOSPICE                          3       \n 9 1740833243 O      SUMMIT HEALTHCARE                         3       \n10 1427561562 O      J&CO CHIROPRACTIC                         3       \n# ℹ 1,115 more rows\n\n\n\n\nw241_ao &lt;- join(\n  wk_2024_01_01$authorized, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    ao_prefix = sf_remove(ao_prefix, \"\\\\.\"),\n    ao_first_name = sf_remove(ao_first, \"\\\\.\"),\n    ao_middle_name = sf_remove(ao_middle, \"\\\\.\"),\n    ao_last_name = sf_remove(ao_last, \"\\\\.\"),\n    ao_suffix = sf_remove(ao_suffix, \"\\\\.\"),\n    ao_credential = sf_remove(ao_credential, \"\\\\.\"),\n    ao_title = sf_remove(ao_title, \"\\\\.\"),\n    ao_phone = make_phone(ao_phone)\n  )\n\nw241_ao\n\n# A tibble: 3,917 × 10\n   npi      entity ao_prefix ao_first_name ao_middle_name ao_last_name ao_suffix\n * &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;    \n 1 1952724… O      &lt;NA&gt;      MICHELE       &lt;NA&gt;           WHITE        &lt;NA&gt;     \n 2 1548924… O      &lt;NA&gt;      TANESHA       &lt;NA&gt;           MORGAN       &lt;NA&gt;     \n 3 1295504… O      &lt;NA&gt;      KENDRA        &lt;NA&gt;           TAYLOR       &lt;NA&gt;     \n 4 1386413… O      &lt;NA&gt;      MELISSA       &lt;NA&gt;           DELLA FEMINA &lt;NA&gt;     \n 5 1558130… O      MRS       MALYNDI       R              WEST         &lt;NA&gt;     \n 6 1821867… O      &lt;NA&gt;      AURORA        CANE           HOYLE        &lt;NA&gt;     \n 7 1649049… O      DR        ASMITA        &lt;NA&gt;           PATEL        &lt;NA&gt;     \n 8 1275302… O      MR        RANGANARAYAN  &lt;NA&gt;           NARASIMHAN   &lt;NA&gt;     \n 9 1356110… O      DR        AKRAM         &lt;NA&gt;           ABD EL KADER &lt;NA&gt;     \n10 1508635… O      &lt;NA&gt;      JAYSON        &lt;NA&gt;           ROWLAND      &lt;NA&gt;     \n# ℹ 3,907 more rows\n# ℹ 3 more variables: ao_credential &lt;chr&gt;, ao_title &lt;chr&gt;, ao_phone &lt;chr&gt;\n\n\n\n\n\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: S7(v.0.2.0), arktax(v.0.0.0.9000), nppez(v.0.0.1), codex(v.0.0.1), fuimus(v.0.0.2), collapse(v.2.0.18), data.table(v.1.16.99), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): rappdirs(v.0.3.3), utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.2), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pins(v.1.4.0), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), RApiSerialize(v.0.1.4), cli(v.3.6.3), rlang(v.1.1.4), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), qs(v.0.27.2), tools(v.4.4.2), parallel(v.4.4.2), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), snakecase(v.0.11.1), cheapr(v.0.9.91), stringfish(v.0.16.0), fs(v.1.6.5), htmlwidgets(v.1.6.4), janitor(v.2.2.0), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13-1), systemfonts(v.1.1.0), xfun(v.0.49), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.49), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.2)"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#address",
    "href": "posts/nppes_nber_archives/nppes_archives.html#address",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_add &lt;- join(\n  wk_2024_01_01$address, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi)\n\nmake_case &lt;- function(x, y) {\n  fcase(\n    not_na(x) & not_na(y) & x == y, str_glue(\"{y}\"), \n    not_na(x) & not_na(y) & x != y, str_glue(\"{x}, {y}\"), \n    not_na(x) & na(y), str_glue(\"{x}\"), \n    na(x) & not_na(y), str_glue(\"{y}\")\n  )\n}\n\nmake_zip &lt;- function(x) {\n  map_chr(\n    x, \n    function(x) {\n      if (not_na(x) & nchar(x) == 9) \n        str_glue(\n          \"{substr(x, 1, 5)}-{substr(x, 6, 9)}\"\n          )\n      else \n        x\n    }\n  )\n}\n\nmake_phone &lt;- function(x) {\n  \n  cnd1 &lt;- \"({substr(x, 1, 3)}) {substr(x, 4, 6)}-{substr(x, 7, 10)}\"\n  cnd2 &lt;- smush(cnd1, \", ({substr(x, 13, 15)})-{substr(x, 16, 18)}-{substr(x, 19, 22)}\")\n  \n  map_chr(x, function(x) {if (not_na(x)) {\n    fcase(\n      nchar(x) == 10, str_glue(cnd1), \n      nchar(x) &gt; 10, str_glue(cnd2),\n      default = str_glue(\"{x}\"))} else str_glue(\"{x}\") })\n}\n\n# Exact match on all address fields\nw241_exact &lt;- w241_add |&gt; \n  filter(\n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_zip == prac_zip,\n    mail_country == prac_country,\n    mail_phone == prac_phone,\n    mail_fax == prac_fax) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = \"MP\",\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_phone(prac_fax))\n\n# Match on all except FAX\nw241_fax &lt;- w241_add |&gt; \n  filter(\n    npi %!in% w241_exact$npi,  \n    mail_address == prac_address, \n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country,\n    mail_zip == prac_zip,\n    mail_phone == prac_phone) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_zip(prac_zip),\n    country = prac_country,\n    phone = make_phone(prac_phone),\n    fax = make_case(mail_fax, prac_fax),\n    purpose = fcase(\n      not_na(mail_fax) & na(prac_fax), \"M\",\n      na(mail_fax) & not_na(prac_fax), \"P\",\n      default = \"MP\")) |&gt; \n  fmutate(fax = make_phone(fax))\n\n# Match on all except ZIP, PHONE, and FAX\nw241_phone &lt;- w241_add |&gt; \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi),      \n    mail_address == prac_address,\n    mail_city == prac_city,\n    mail_state == prac_state,\n    mail_country == prac_country) |&gt;\n  fcompute(\n    npi = npi,\n    entity = entity,\n    purpose = fcase(\n      not_na(mail_phone) & na(prac_phone), \"M\",\n      na(mail_phone) & not_na(prac_phone), \"P\",\n      default = \"MP\"),\n    address = prac_address,\n    city = prac_city,\n    state = prac_state,\n    zip = make_case(mail_zip, prac_zip),\n    country = prac_country,\n    phone = make_case(mail_phone, prac_phone),\n    fax = make_case(mail_fax, prac_fax)) |&gt; \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Pivot remaining addresses\nw241_piv &lt;- w241_add |&gt; \n  filter(\n    npi %!in% c(\n      w241_exact$npi, \n      w241_fax$npi, \n      w241_phone$npi\n      )) |&gt; \n  pivot_longer(\n    -c(npi, entity), \n    names_to = \"type_part\", \n    values_to = \"value\", \n    names_transform = list(\n      type_part = stringr::str_to_title)\n    ) |&gt; \n  separate_wider_delim(\n    type_part, \n    delim = \"_\", \n    names = c(\"type\", \"part\")) |&gt; \n  fmutate(\n    purpose = case_when(\n      type == \"Mail\" ~ \"M\",\n      type == \"Prac\" ~ \"P\",\n    .default = type),\n    type = NULL) |&gt;\n  pivot_wider(\n    names_from = part, \n    values_from = value) |&gt; \n  fmutate(\n    zip = make_zip(zip),\n    phone = make_phone(phone),\n    fax = make_phone(fax))\n\n# Combine all address matches\nw241_add &lt;- rowbind(w241_exact, w241_fax, w241_phone, w241_piv)\n\nadd_g &lt;- GRP(w241_add, ~ entity)\n\nrsplit(w241_add, add_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(add_g))\n\n$I\n# A tibble: 22,883 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;\n 1 1437575206 I      MP      3840 PACKARD… ANN … MI    4810… US      (734… (734…\n 2 1477895621 I      MP      3144 SANTA A… EL M… CA    9173… US      (626… (626…\n 3 1346019486 I      MP      57 TOWNSHIP … CHES… OH    4561… US      (740… (740…\n 4 1265201206 I      MP      822 LOVELACE… BREW… AL    3642… US      (251… (800…\n 5 1447029483 I      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 6 1295504249 I      MP      1550 N 115TH… SEAT… WA    9813… US      (206… (206…\n 7 1073382024 I      MP      401 16TH ST … ROCH… MN    5590… US      (507… (507…\n 8 1639948698 I      MP      920 SARATOGA… SAN … CA    9512… US      (408… (408…\n 9 1508635574 I      MP      14725 SE RHO… PORT… OR    9723… US      (971… (971…\n10 1932978905 I      MP      3801 KELL BL… WICH… TX    7630… US      (940… (940…\n# ℹ 22,873 more rows\n\n$O\n# A tibble: 5,839 × 10\n   npi        entity purpose address       city  state zip   country phone fax  \n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;\n 1 1548924087 O      MP      46 GRAMATAN … MOUN… NY    1055… US      (295… (646…\n 2 1205605342 O      MP      7610 CARROLL… TAKO… MD    2091… US      (301… (301…\n 3 1114796257 O      MP      6510 KENILWO… RIVE… MD    2073… US      (301… (301…\n 4 1902675945 O      MP      2585 PACIFIC… TORR… CA    9050… US      (424… (310…\n 5 1538938576 O      MP      10751 W ROWE… PEOR… AZ    8538… US      (623… (623…\n 6 1568231512 O      MP      1121 FIRECRA… JUST… TX    7624… US      (940… (940…\n 7 1912776964 O      MP      3760 CURTIS … COCOA FL    3292… US      (321… (321…\n 8 1306615364 O      MP      350 FAIRWAY … DEER… FL    3344… US      (877… (866…\n 9 1336918390 O      MP      240 E GARRIS… GAST… NC    2805… US      (980… (980…\n10 1649049610 O      MP      6751 N SUNSE… GLEN… AZ    8530… US      (775… (702…\n# ℹ 5,829 more rows"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#taxonomy",
    "href": "posts/nppes_nber_archives/nppes_archives.html#taxonomy",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_tax &lt;- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"taxonomy_code\", \n      \"taxonomy_group\", \n      \"taxonomy_primary\")\n    ], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fmutate(\n    level = fcase(\n      taxonomy_primary == \"Y\", \"Primary\",\n      taxonomy_primary == \"N\", \"Other\",\n      taxonomy_primary == \"X\", \"X\"),\n    taxonomy_primary = NULL)\n\nw241_tax &lt;- rowbind(\n  w241_tax |&gt; \n    fsubset(na(taxonomy_group)) |&gt; \n    fselect(-taxonomy_group) |&gt; \n    distinct(),\n  w241_tax |&gt; \n    fsubset(not_na(taxonomy_group)) |&gt; \n    fselect(-taxonomy_code, -level) |&gt; \n    distinct() |&gt; \n    frename(taxonomy_code = taxonomy_group) |&gt; \n    fmutate(level = \"Group\"))\n\ntax_g &lt;- GRP(w241_tax, ~ entity)\n\nw241_tax &lt;- rsplit(w241_tax, tax_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(tax_g))\n\nw241_tax\n\n$I\n# A tibble: 20,828 × 4\n   npi        taxonomy_code entity level  \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;  \n 1 1003009861 207RC0000X    I      Primary\n 2 1003013137 363AM0700X    I      Primary\n 3 1003013137 363AM0700X    I      Other  \n 4 1003018060 106H00000X    I      Primary\n 5 1003047531 207L00000X    I      Primary\n 6 1003047531 390200000X    I      Other  \n 7 1003047531 207L00000X    I      Other  \n 8 1003052903 2084P0800X    I      Primary\n 9 1003063173 208G00000X    I      Primary\n10 1003063173 208G00000X    I      Other  \n# ℹ 20,818 more rows\n\n$O\n# A tibble: 5,433 × 4\n   npi        taxonomy_code entity level  \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;  \n 1 1003096488 261Q00000X    O      Primary\n 2 1003196072 3416L0300X    O      Primary\n 3 1003200874 253Z00000X    O      Primary\n 4 1003200874 251E00000X    O      Other  \n 5 1003330226 251E00000X    O      Primary\n 6 1003330226 251J00000X    O      Other  \n 7 1003337734 324500000X    O      Primary\n 8 1003407230 261QM1300X    O      Primary\n 9 1003407230 251E00000X    O      Other  \n10 1003463092 333600000X    O      Primary\n# ℹ 5,423 more rows\n\n\n\n\nw241_tax$O |&gt; \n  mutate(N = n(), .by = npi) |&gt; \n  filter(N == 2) |&gt; \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |&gt; \n  filter(eq)\n\n# A tibble: 21 × 6\n   npi        taxonomy_code entity level     N eq   \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;lgl&gt;\n 1 1093182198 324500000X    O      Other     2 TRUE \n 2 1194812784 332B00000X    O      Other     2 TRUE \n 3 1235225210 251E00000X    O      Other     2 TRUE \n 4 1336114131 3416L0300X    O      Other     2 TRUE \n 5 1376554865 332B00000X    O      Other     2 TRUE \n 6 1396804225 324500000X    O      Other     2 TRUE \n 7 1396867578 3336C0002X    O      Other     2 TRUE \n 8 1427298140 261QP2000X    O      Other     2 TRUE \n 9 1457587222 251E00000X    O      Other     2 TRUE \n10 1467558668 332B00000X    O      Other     2 TRUE \n# ℹ 11 more rows\n\nw241_tax$I |&gt; \n  mutate(N = n(), .by = npi) |&gt; \n  filter(N == 2) |&gt; \n  mutate(eq = taxonomy_code == flag(taxonomy_code), .by = npi) |&gt; \n  filter(eq)\n\n# A tibble: 1,135 × 6\n   npi        taxonomy_code entity level     N eq   \n   &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;lgl&gt;\n 1 1003013137 363AM0700X    I      Other     2 TRUE \n 2 1003063173 208G00000X    I      Other     2 TRUE \n 3 1003122698 2085R0202X    I      Other     2 TRUE \n 4 1003182908 207ZP0101X    I      Other     2 TRUE \n 5 1003202565 207ZP0102X    I      Other     2 TRUE \n 6 1003249749 207L00000X    I      Other     2 TRUE \n 7 1003443680 207W00000X    I      Other     2 TRUE \n 8 1003461666 152W00000X    I      Other     2 TRUE \n 9 1003561242 111N00000X    I      Other     2 TRUE \n10 1003859794 363LF0000X    I      Other     2 TRUE \n# ℹ 1,125 more rows"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#license",
    "href": "posts/nppes_nber_archives/nppes_archives.html#license",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_lic &lt;- join(\n  wk_2024_01_01$taxonomy[\n    c(\"npi\", \n      \"license_number\", \n      \"license_state\")], \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi)\n\nlic_g &lt;- GRP(w241_lic, ~ entity)\n\nw241_lic &lt;- rsplit(w241_lic, lic_g) |&gt; \n  map(\\(df) \n      remove_quiet(df) |&gt; \n        filter(not_na(license_number))) |&gt; \n  setNames(GRPnames(lic_g))\n\nw241_lic\n\n$I\n# A tibble: 15,565 × 4\n   npi        license_number license_state entity\n   &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;         &lt;chr&gt; \n 1 1003009861 45263          AZ            I     \n 2 1003013137 4354           WI            I     \n 3 1003018060 959            NV            I     \n 4 1003047531 116063         CA            I     \n 5 1003047531 30135          OK            I     \n 6 1003047531 MD60681697     WA            I     \n 7 1003052903 087968         NY            I     \n 8 1003063173 5499           OK            I     \n 9 1003063173 036.143737     IL            I     \n10 1003063173 007606         AZ            I     \n# ℹ 15,555 more rows\n\n$O\n# A tibble: 592 × 4\n   npi        license_number license_state entity\n   &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;         &lt;chr&gt; \n 1 1003096488 12-296         MS            O     \n 2 1003196072 23-255         OH            O     \n 3 1003199829 10000          ND            O     \n 4 1003200874 HHA201205      NE            O     \n 5 1013007475 1673           WI            O     \n 6 1013069608 28RS00588100   NJ            O     \n 7 1013105568 H80CS06662     IN            O     \n 8 1013174127 X 05660-1      NY            O     \n 9 1013214089 230304         NY            O     \n10 1013995521 1038           WI            O     \n# ℹ 582 more rows"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#identifiers",
    "href": "posts/nppes_nber_archives/nppes_archives.html#identifiers",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_id &lt;- join(\n  wk_2024_01_01$identifier, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  # Remove Taxonomy Codes\n  fsubset(sf_ndetect(other_id, \"^[A-Z0-9]{9}X$\"))\n\nid_g &lt;- GRP(w241_id, ~ entity)\n\nrsplit(w241_id, id_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(id_g))\n\n$I\n# A tibble: 3,052 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;               &lt;chr&gt; \n 1 1003685140 3496       01            NH             STATE OF NEW HAMPS… I     \n 2 1134998198 1194322628 05            MI             &lt;NA&gt;                I     \n 3 1578544367 10007752   05            TX             &lt;NA&gt;                I     \n 4 1578544367 152031401  05            TX             &lt;NA&gt;                I     \n 5 1578544367 152028001  05            TX             &lt;NA&gt;                I     \n 6 1316936222 4160095    01            TN             BLUE CROSS          I     \n 7 1316936222 1053635    05            LA             &lt;NA&gt;                I     \n 8 1316936222 087281     05            AZ             &lt;NA&gt;                I     \n 9 1316936222 3000540    05            TN             &lt;NA&gt;                I     \n10 1316936222 P00444174  01            &lt;NA&gt;           MEDICARE RAILROAD   I     \n# ℹ 3,042 more rows\n\n$O\n# A tibble: 1,314 × 6\n   npi        other_id   other_id_code other_id_state other_id_issuer     entity\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;               &lt;chr&gt; \n 1 1417726456 0155098    05            OH             &lt;NA&gt;                O     \n 2 1225765241 U5083      01            TX             TEXAS MEDICAL LICE… O     \n 3 1689443665 1417266396 05            NY             &lt;NA&gt;                O     \n 4 1255611539 014469     01            TX             TEXAS HCSSA LICENSE O     \n 5 1508824574 890596700  05            FL             &lt;NA&gt;                O     \n 6 1750958104 1386940575 05            WI             &lt;NA&gt;                O     \n 7 1982294732 250000218  05            NV             &lt;NA&gt;                O     \n 8 1891209284 U300404468 01            RI             MEDICARE PTAN       O     \n 9 1730729385 1952817926 01            &lt;NA&gt;           ORGANIZATIONAL NPI  O     \n10 1730729385 1043526098 01            &lt;NA&gt;           NPI                 O     \n# ℹ 1,304 more rows"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#other",
    "href": "posts/nppes_nber_archives/nppes_archives.html#other",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_oth &lt;- join(\n  wk_2024_01_01$other, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    org_name = sf_remove(other_org_name, \"\\\\.\"),\n    org_type = sf_remove(other_org_type, \"\\\\.\"),\n    prefix = sf_remove(other_prefix, \"\\\\.\"),\n    first_name = sf_remove(other_first, \"\\\\.\"),\n    middle_name = sf_remove(other_middle, \"\\\\.\"),\n    last_name = sf_remove(other_last, \"\\\\.\"),\n    last_type = sf_remove(other_last_type, \"\\\\.\"),\n    suffix = sf_remove(other_suffix, \"\\\\.\"),\n    credential = sf_remove(other_credential, \"\\\\.\"))\n\noth_g &lt;- GRP(w241_oth, ~ entity)\n\nw241_oth &lt;- rsplit(w241_oth, oth_g) |&gt; \n  map(remove_quiet) |&gt; \n  setNames(GRPnames(oth_g))\n\nw241_oth$I &lt;- vctrs::vec_slice(w241_oth$I, cheapr::row_na_counts(w241_oth$I) &lt; 6)\n\nw241_oth\n\n$I\n# A tibble: 1,219 × 9\n   npi        entity prefix first_name middle_name last_name  last_type suffix\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt; \n 1 1255864583 I      &lt;NA&gt;   GWEN       &lt;NA&gt;        WILSON     2         &lt;NA&gt;  \n 2 1659140796 I      &lt;NA&gt;   KATELIN    LEE ANN     BOYER      1         &lt;NA&gt;  \n 3 1184493223 I      &lt;NA&gt;   AESHA      ISHWARBHAI  PATEL      5         &lt;NA&gt;  \n 4 1437928579 I      &lt;NA&gt;   TREVA      JO          MOYA       1         &lt;NA&gt;  \n 5 1881463826 I      &lt;NA&gt;   AMANDA     RENEE       SCHELLHORN 1         &lt;NA&gt;  \n 6 1871362814 I      &lt;NA&gt;   BRITTANY   C           DARNELL    1         &lt;NA&gt;  \n 7 1770352718 I      &lt;NA&gt;   PEBBLES    MAURINE     YEE        5         &lt;NA&gt;  \n 8 1497524441 I      &lt;NA&gt;   CARING     FOR         MAMAS      2         &lt;NA&gt;  \n 9 1033988084 I      &lt;NA&gt;   JANINE     LISSETT     LESSLEY    1         &lt;NA&gt;  \n10 1952170912 I      &lt;NA&gt;   NICOLE     &lt;NA&gt;        BORDEN     1         &lt;NA&gt;  \n# ℹ 1,209 more rows\n# ℹ 1 more variable: credential &lt;chr&gt;\n\n$O\n# A tibble: 1,125 × 4\n   npi        entity org_name                                  org_type\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;                                     &lt;chr&gt;   \n 1 1548924087 O      MORGAN HEART PLLC                         4       \n 2 1538845474 O      SRS-LA MIRADA, LLC                        3       \n 3 1477337988 O      RISING SUN DERMATOLOGY & COSMETICS CENTER 3       \n 4 1447567391 O      UNITED PLUS HOME HEALTH LLC               3       \n 5 1841442092 O      PALOMA HOME HEALTHCARE                    3       \n 6 1508824574 O      THE ALFANO CENTER                         3       \n 7 1295004455 O      MAXSERVE HOSPICE                          3       \n 8 1790271476 O      MAXSERVE HOSPICE                          3       \n 9 1740833243 O      SUMMIT HEALTHCARE                         3       \n10 1427561562 O      J&CO CHIROPRACTIC                         3       \n# ℹ 1,115 more rows"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#authorized",
    "href": "posts/nppes_nber_archives/nppes_archives.html#authorized",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "w241_ao &lt;- join(\n  wk_2024_01_01$authorized, \n  w241_base[c(\"npi\", \"entity\")], \n  on = \"npi\", \n  verbose = 0) |&gt; \n  fsubset(npi %!in% w241_deact$npi) |&gt; \n  fcompute(\n    npi = npi,\n    entity = entity,\n    ao_prefix = sf_remove(ao_prefix, \"\\\\.\"),\n    ao_first_name = sf_remove(ao_first, \"\\\\.\"),\n    ao_middle_name = sf_remove(ao_middle, \"\\\\.\"),\n    ao_last_name = sf_remove(ao_last, \"\\\\.\"),\n    ao_suffix = sf_remove(ao_suffix, \"\\\\.\"),\n    ao_credential = sf_remove(ao_credential, \"\\\\.\"),\n    ao_title = sf_remove(ao_title, \"\\\\.\"),\n    ao_phone = make_phone(ao_phone)\n  )\n\nw241_ao\n\n# A tibble: 3,917 × 10\n   npi      entity ao_prefix ao_first_name ao_middle_name ao_last_name ao_suffix\n * &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;         &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;    \n 1 1952724… O      &lt;NA&gt;      MICHELE       &lt;NA&gt;           WHITE        &lt;NA&gt;     \n 2 1548924… O      &lt;NA&gt;      TANESHA       &lt;NA&gt;           MORGAN       &lt;NA&gt;     \n 3 1295504… O      &lt;NA&gt;      KENDRA        &lt;NA&gt;           TAYLOR       &lt;NA&gt;     \n 4 1386413… O      &lt;NA&gt;      MELISSA       &lt;NA&gt;           DELLA FEMINA &lt;NA&gt;     \n 5 1558130… O      MRS       MALYNDI       R              WEST         &lt;NA&gt;     \n 6 1821867… O      &lt;NA&gt;      AURORA        CANE           HOYLE        &lt;NA&gt;     \n 7 1649049… O      DR        ASMITA        &lt;NA&gt;           PATEL        &lt;NA&gt;     \n 8 1275302… O      MR        RANGANARAYAN  &lt;NA&gt;           NARASIMHAN   &lt;NA&gt;     \n 9 1356110… O      DR        AKRAM         &lt;NA&gt;           ABD EL KADER &lt;NA&gt;     \n10 1508635… O      &lt;NA&gt;      JAYSON        &lt;NA&gt;           ROWLAND      &lt;NA&gt;     \n# ℹ 3,907 more rows\n# ℹ 3 more variables: ao_credential &lt;chr&gt;, ao_title &lt;chr&gt;, ao_phone &lt;chr&gt;"
  },
  {
    "objectID": "posts/nppes_nber_archives/nppes_archives.html#session-information",
    "href": "posts/nppes_nber_archives/nppes_archives.html#session-information",
    "title": "NPPES NPI Archives",
    "section": "",
    "text": "R version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: S7(v.0.2.0), arktax(v.0.0.0.9000), nppez(v.0.0.1), codex(v.0.0.1), fuimus(v.0.0.2), collapse(v.2.0.18), data.table(v.1.16.99), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): rappdirs(v.0.3.3), utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.2), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pins(v.1.4.0), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), RApiSerialize(v.0.1.4), cli(v.3.6.3), rlang(v.1.1.4), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), qs(v.0.27.2), tools(v.4.4.2), parallel(v.4.4.2), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), snakecase(v.0.11.1), cheapr(v.0.9.91), stringfish(v.0.16.0), fs(v.1.6.5), htmlwidgets(v.1.6.4), janitor(v.2.2.0), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13-1), systemfonts(v.1.1.0), xfun(v.0.49), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.49), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.2)"
  },
  {
    "objectID": "posts/mpfs/mpfs.html",
    "href": "posts/mpfs/mpfs.html",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This is an overview of the general format of the Medicare Physician Fee Schedule (MPFS), specifically the PFS Relative Value File. Updates are released on the first day of each quarter. If required, a correction notice may be issued. The file is a zip archive and typically contains six files:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRVU\nData Dictionary, Record Layout and File Documentation\n\n\n\n\n\nPPRRVU\nPhysician Fee Schedule RVUs and Policy Indicators\n\n\n\n\n\nGPCI\nGeographic Practice Cost Index Components for each Carrier/Locality combination\n\n\n\n\n\nLOCCO\nLocality to County Crosswalk\n\n\n\n\n\nANES\nAnesthesia Conversion Factors\n\n\n\n\n\nOPPSCAP\nOPPS-based capitation-adjusted payment amounts.\n\n\n\n\n\n\nWhat follows is a thorough dissection of each file in the archive, starting with the RVU file.\n\nThe pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")\n\n\n\ndplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\nHCPCS\n16,324\n18,499\n100.00%\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n+\n133\n0.72%\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\nNA\n4,066\n21.98%\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\nNA\n2,468\n13.34%\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\nwork_rvu\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\nnon_fac_pe_rvu\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\nfacility_pe_rvu\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\nmp_rvu\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\nnon_facility_total\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\nfacility_total\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\npre_op\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\nintra_op\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\npost_op\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\nconv_factor\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\nnon_facility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nfacility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nmp_used_for_opps_payment_amount\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁\n\n\n\n\n\n\n\nThe MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment.\n\n\n\nAccepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925\n\n\n\nThis file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment.\n\n\nProvides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFacility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#rvu",
    "href": "posts/mpfs/mpfs.html#rvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators",
    "href": "posts/mpfs/mpfs.html#indicators",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "dplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\nHCPCS\n16,324\n18,499\n100.00%\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n+\n133\n0.72%\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\nNA\n4,066\n21.98%\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\nNA\n2,468\n13.34%\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\nwork_rvu\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\nnon_fac_pe_rvu\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\nfacility_pe_rvu\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\nmp_rvu\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\nnon_facility_total\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\nfacility_total\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\npre_op\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\nintra_op\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\npost_op\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\nconv_factor\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\nnon_facility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nfacility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nmp_used_for_opps_payment_amount\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#pprvu",
    "href": "posts/mpfs/mpfs.html#pprvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#accepting-assignment",
    "href": "posts/mpfs/mpfs.html#accepting-assignment",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Accepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#relative-value-file",
    "href": "posts/mpfs/mpfs.html#relative-value-file",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#global-surgery-days",
    "href": "posts/mpfs/mpfs.html#global-surgery-days",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Provides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators-1",
    "href": "posts/mpfs/mpfs.html#indicators-1",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Facility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#session-information",
    "href": "posts/mpfs/mpfs.html#session-information",
    "title": "Medicare Physician Fee Schedule",
    "section": "\n3.1 Session Information",
    "text": "3.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: cheapr(v.0.9.9), hacksaw(v.0.0.2), rbrvs(v.0.0.1), northstar(v.0.0.7), gt(v.0.11.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.48), htmlwidgets(v.1.6.4), collapse(v.2.0.17), RApiSerialize(v.0.1.4), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.1), generics(v.0.1.3), parallel(v.4.4.1), fansi(v.1.0.6), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), lifecycle(v.1.0.4), compiler(v.4.4.1), textshaping(v.0.4.0), munsell(v.0.5.1), qs(v.0.27.2), htmltools(v.0.5.8.1), sass(v.0.4.9), yaml(v.2.3.10), pracma(v.2.4.4), pillar(v.1.9.0), commonmark(v.1.9.2), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), pander(v.0.6.5), fuimus(v.0.0.2), pins(v.1.4.0), fastmap(v.1.2.0), grid(v.4.4.1), colorspace(v.2.1-1), cli(v.3.6.3), magrittr(v.2.0.3), base64enc(v.0.1-3), utf8(v.1.2.4), withr(v.3.0.2), scales(v.1.3.0), rappdirs(v.0.3.3), timechange(v.0.3.0), rmarkdown(v.2.29), ragg(v.1.3.3), hms(v.1.1.3), stringfish(v.0.16.0), evaluate(v.1.0.1), knitr(v.1.48), markdown(v.1.13), rlang(v.1.1.4), Rcpp(v.1.0.13), zeallot(v.0.1.0), glue(v.1.8.0), xml2(v.1.3.6), rstudioapi(v.0.17.1), jsonlite(v.1.8.9), R6(v.2.5.1), systemfonts(v.1.1.0) and fs(v.1.6.5)"
  },
  {
    "objectID": "posts/dar/art_of_dar.html",
    "href": "posts/dar/art_of_dar.html",
    "title": "The Art of DAR",
    "section": "",
    "text": "Average Days in Accounts Receivable (DAR or Average Days in AR) is a common financial metric known as an efficiency ratio.\nDAR measures the average number of days it takes for a business to collect money owed for services rendered from the responsible parties.\nIts function in the healthcare revenue cycle is as a high-level monitor of the financial health of a healthcare entity.\nThe following is a thorough overview of everything you never knew you didn’t want to know about DAR. Let’s start off with some background and terminology. See Note 1 for more information on the American healthcare economic model.\n\nAging of Accounts\n\nAn account is a billable episode of care. It begins to age once it is billed to the guarantor. These outstanding accounts are monitored in 30-day blocks or bins ([0, 30), [31, 60), [61, 90), [91, 120), and [121, \\infty)) by the number of accounts, the amount owed by each bin and the responsible parties. The older the account, the less likely it will be paid.\n\n\n\n\nGuarantor\n\nThe responsible party for the amount owed (an insurance payer, a patient, etc.) Most claims are originally billed to insurance and, until the insurance makes a payment, the responsibility for the payment continues to be with the insurance payer. After the payer makes or denies a payment (with no just cause for an appeal), the responsibility for the balance of goes to the patient (to be sent an invoice) or the physician (to be written off.)\n\nAccounts Receivable\n\nAR represents money owed to the healthcare practice by patients and/or insurance carriers. The AR balance is the total charges billed to an insurance payer or patient for services rendered but not yet collected. The balance can only be reduced by payment or by adjustments, contractual or otherwise. The AR cycle begins with the delivery of services and ends with reconciliation, or when the balance owed equals zero.\n\nAverage Days in AR\n\nA mathematical formula for the average number of days it takes a business to collect money that it is owed. A low average is good. A high average signals a problem within the revenue cycle.\n\n\n\nSo now we know that a low Days in AR number is good and a high number is bad. How low is good though? How high is bad?\nLet’s say that a practice has a DAR of 95 days. This means that, on average, it takes the practice 95 days to collect it’s outstanding balances. Let’s start with what we can say for sure about a Days in AR of 95:\n\n95 days is roughly equal to a little over three months.\nTherefore, there is three months of unpaid work sitting in Accounts Receivable.\nAs such, this practice will need three months of cash reserves on hand to meet its financial obligations.\n\nThe ideal Days in AR depends entirely upon the medical practice, its customers (patients), its customers’ payers, the services it supplies, the providers performing those services, and the financial situation of the practice.\n\n\n\n\n\n\nTip 1: The American Healthcare Economic Model\n\n\n\n\n\nTo understand the healthcare version of Days in AR, you need to first understand the environment in which it is used.\nTypically, companies sell their products or services directly to consumers and are paid immediately at the point of service (POS). This is called a business-to-consumer revenue model.\nAnother revenue model type is the business-to-business (B2B) model, concerning businesses that transact primarily with each other. Purchases between two businesses tend to be much larger. As such, B2B businesses invoice on a monthly basis, meaning no payment for 30+ days.\nSomewhere in between these two models is the American healthcare system. This gray area is caused by a middleman called a third party payer. Better known as an insurance company, providers enter into a contractual agreement with this third party to be paid for their services at a reduced rate.\nIn exchange, a provider gains access to the payer’s large subscriber base. The difference between the charge a provider submits to a payer and the contracted rate he or she has agreed to is called the contractual adjustment, which is written off once a claim has been adjudicated.\nThe contractual adjustment introduces a critical inefficiency to the healthcare revenue model. Rather than prices being determined by supply and demand, they are set by individually negotiated arrangements, the end result of which is no real demand or pricing curve.\nThis issue is much too complex for me to properly do justice to here. It is, however, an essential concept to grasp when trying to understand healthcare reimbursement. In other words, healthcare reimbursement is crazy, not you.\n\n\n\n\n\n \\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n    \n\n\n30\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n      dct\n      dart\n    \n\n\n30\n$131,440\n$203,460\n$4,381\n46.44\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99.\n\n\n\nTable 1\n\nTable 2"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#formula-for-dar",
    "href": "posts/dar/art_of_dar.html#formula-for-dar",
    "title": "The Art of DAR",
    "section": "",
    "text": "\\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n    \n\n\n30\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n      dct\n      dart\n    \n\n\n30\n$131,440\n$203,460\n$4,381\n46.44\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99.\n\n\n\nTable 1\n\nTable 2"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "href": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "title": "The Art of DAR",
    "section": "\n2.1 EARb Target for DARt",
    "text": "2.1 EARb Target for DARt\nIn the first example, our DAR was 47.99. That’s approximately 13 days over our DARt of 35. What would our EARB need to have been to bring us under our DARt? Here’s our formula:\n eart = (\\ dart \\cdot gc\\ )\\ \\div days_n \nWe’ll calculate the EARB we needed as well as the difference between the two AR figures:"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#session-information",
    "href": "posts/dar/art_of_dar.html#session-information",
    "title": "The Art of DAR",
    "section": "\n2.2 Session Information",
    "text": "2.2 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: forager(v.0.0.1), gt(v.0.11.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): sass(v.0.4.9), utf8(v.1.2.4), generics(v.0.1.3), xml2(v.1.3.6), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), rlang(v.1.1.4), commonmark(v.1.9.2), munsell(v.0.5.1), bigD(v.0.2.0), base64enc(v.0.1-3), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), pillar(v.1.9.0), gtable(v.0.3.6), Rcpp(v.1.0.13), glue(v.1.8.0), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29), compiler(v.4.4.1) and markdown(v.1.13)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Learning for Getting A Head",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nReading Time\n\n\n\n\n\n\n2024-11-29\n\n\nTaxonomy Codes\n\n\n6 min\n\n\n\n\n2024-11-29\n\n\nR Packaging Workflow\n\n\n7 min\n\n\n\n\n2024-11-28\n\n\nLearning to Love Regexes By Learning Them\n\n\n27 min\n\n\n\n\n2024-11-25\n\n\nNPPES NPI Archives\n\n\n9 min\n\n\n\n\n2024-11-24\n\n\nPost-Audit Development\n\n\n14 min\n\n\n\n\n2024-11-19\n\n\nComprehensive Search in {provider}\n\n\n5 min\n\n\n\n\n2024-11-18\n\n\nBuilding Claims Rules\n\n\n19 min\n\n\n\n\n2024-11-15\n\n\nMedical Codes as Matrices\n\n\n3 min\n\n\n\n\n2024-11-12\n\n\nNPIs & Luhn’s Algorithm\n\n\n14 min\n\n\n\n\n2024-11-04\n\n\nThe Art of DAR\n\n\n8 min\n\n\n\n\n2024-11-04\n\n\nMedicare Physician Fee Schedule\n\n\n38 min\n\n\n\n\n2024-11-04\n\n\n100%\n\n\n8 min\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/claims/claims.html",
    "href": "posts/claims/claims.html",
    "title": "Post-Audit Development",
    "section": "",
    "text": "Between the dates of 2022-06-14 and 2024-03-12 (approx 637 days),\n\n512 Dates of Service were recorded\n7158 Unique Patients were seen\nReferred by 232 different Providers\nSeen by 66 different Rendering Providers"
  },
  {
    "objectID": "posts/claims/claims.html#session-information",
    "href": "posts/claims/claims.html#session-information",
    "title": "Post-Audit Development",
    "section": "\n3.1 Session Information",
    "text": "3.1 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: marquee(v.0.1.0), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1), tidyverse(v.2.0.0), fuimus(v.0.0.2), northstar(v.0.0.7), rbrvs(v.0.0.1), gt(v.0.11.1) and here(v.1.0.1)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.49), htmlwidgets(v.1.6.4), collapse(v.2.0.18), RApiSerialize(v.0.1.4), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.2), generics(v.0.1.3), parallel(v.4.4.2), fansi(v.1.0.6), pkgconfig(v.2.0.3), data.table(v.1.16.99), RcppParallel(v.5.1.9), lifecycle(v.1.0.4), farver(v.2.1.2), compiler(v.4.4.2), textshaping(v.0.4.0), munsell(v.0.5.1), janitor(v.2.2.0), qs(v.0.27.2), snakecase(v.0.11.1), htmltools(v.0.5.8.1), yaml(v.2.3.10), pillar(v.1.9.0), crayon(v.1.5.3), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), pander(v.0.6.5), labeling(v.0.4.3), pins(v.1.4.0), rprojroot(v.2.0.4), fastmap(v.1.2.0), grid(v.4.4.2), archive(v.1.1.10), colorspace(v.2.1-1), cli(v.3.6.3), magrittr(v.2.0.3), utf8(v.1.2.4), withr(v.3.0.2), scales(v.1.3.0), rappdirs(v.0.3.3), bit64(v.4.5.2), timechange(v.0.3.0), rmarkdown(v.2.29), ggTimeSeries(v.1.0.2), bit(v.4.5.0), ragg(v.1.3.3), hms(v.1.1.3), stringfish(v.0.16.0), evaluate(v.1.0.1), knitr(v.1.49), rlang(v.1.1.4), Rcpp(v.1.0.13-1), zeallot(v.0.1.0), glue(v.1.8.0), xml2(v.1.3.6), rstudioapi(v.0.17.1), vroom(v.1.6.5), jsonlite(v.1.8.9), R6(v.2.5.1), systemfonts(v.1.1.0) and fs(v.1.6.5)"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html",
    "href": "posts/draw_matrix/draw_matrix.html",
    "title": "Medical Codes as Matrices",
    "section": "",
    "text": "pcs &lt;- lst(\n  c = c(0:9, grep(\"[^IO]\", LETTERS, value = TRUE)),\n  p = seq2_along(1, c),\n  a = 1:7)\n\npcs\n\n$c\n [1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"J\"\n[20] \"K\" \"L\" \"M\" \"N\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"\n\n$p\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34\n\n$a\n[1] 1 2 3 4 5 6 7\n\n\n\nhcpcs &lt;- lst(\n  c = c(0:9, grep(\"[^DINOW-Z]\", LETTERS, value = TRUE)),\n  p = seq2_along(1, c),\n  a = 1:5)\n\nhcpcs\n\n$c\n [1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"A\" \"B\" \"C\" \"E\" \"F\" \"G\" \"H\" \"J\" \"K\"\n[20] \"L\" \"M\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\"\n\n$p\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28\n\n$a\n[1] 1 2 3 4 5\n\n\n\n\nlook &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  \n  names(possible) &lt;- constants\n  \n  unname(possible[splitter(sf_toupper(code))])\n}\n\nlook(\"0G9000Z\", pcs)\n\n[1]  1 17 10  1  1  1 34\n\nlook(\"99213\", hcpcs)\n\n[1] 10 10  3  2  4\n\n\n\n\nmedtrix &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  axis      &lt;- system$a\n  \n  m &lt;- matrix(data     = 0L,\n              nrow     = length(constants),\n              ncol     = length(axis),\n              dimnames = list(constants, axis))\n  \n  x &lt;- look(code, system)\n  \n  for (i in axis) { \n    m[x[i], i] &lt;- 1L \n    }\n  \n  return(m)\n}\n\nICD-10-PCS:\n\nmedtrix(code = \"0G9000Z\", system = pcs)\n\n  1 2 3 4 5 6 7\n0 1 0 0 1 1 1 0\n1 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0\n5 0 0 0 0 0 0 0\n6 0 0 0 0 0 0 0\n7 0 0 0 0 0 0 0\n8 0 0 0 0 0 0 0\n9 0 0 1 0 0 0 0\nA 0 0 0 0 0 0 0\nB 0 0 0 0 0 0 0\nC 0 0 0 0 0 0 0\nD 0 0 0 0 0 0 0\nE 0 0 0 0 0 0 0\nF 0 0 0 0 0 0 0\nG 0 1 0 0 0 0 0\nH 0 0 0 0 0 0 0\nJ 0 0 0 0 0 0 0\nK 0 0 0 0 0 0 0\nL 0 0 0 0 0 0 0\nM 0 0 0 0 0 0 0\nN 0 0 0 0 0 0 0\nP 0 0 0 0 0 0 0\nQ 0 0 0 0 0 0 0\nR 0 0 0 0 0 0 0\nS 0 0 0 0 0 0 0\nT 0 0 0 0 0 0 0\nU 0 0 0 0 0 0 0\nV 0 0 0 0 0 0 0\nW 0 0 0 0 0 0 0\nX 0 0 0 0 0 0 0\nY 0 0 0 0 0 0 0\nZ 0 0 0 0 0 0 1\n\n\nHCPCS (CPT):\n\nmedtrix(code = \"99213\", system = hcpcs)\n\n  1 2 3 4 5\n0 0 0 0 0 0\n1 0 0 0 1 0\n2 0 0 1 0 0\n3 0 0 0 0 1\n4 0 0 0 0 0\n5 0 0 0 0 0\n6 0 0 0 0 0\n7 0 0 0 0 0\n8 0 0 0 0 0\n9 1 1 0 0 0\nA 0 0 0 0 0\nB 0 0 0 0 0\nC 0 0 0 0 0\nE 0 0 0 0 0\nF 0 0 0 0 0\nG 0 0 0 0 0\nH 0 0 0 0 0\nJ 0 0 0 0 0\nK 0 0 0 0 0\nL 0 0 0 0 0\nM 0 0 0 0 0\nP 0 0 0 0 0\nQ 0 0 0 0 0\nR 0 0 0 0 0\nS 0 0 0 0 0\nT 0 0 0 0 0\nU 0 0 0 0 0\nV 0 0 0 0 0"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#lookup",
    "href": "posts/draw_matrix/draw_matrix.html#lookup",
    "title": "Medical Codes as Matrices",
    "section": "",
    "text": "look &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  \n  names(possible) &lt;- constants\n  \n  unname(possible[splitter(sf_toupper(code))])\n}\n\nlook(\"0G9000Z\", pcs)\n\n[1]  1 17 10  1  1  1 34\n\nlook(\"99213\", hcpcs)\n\n[1] 10 10  3  2  4"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#make-matrix",
    "href": "posts/draw_matrix/draw_matrix.html#make-matrix",
    "title": "Medical Codes as Matrices",
    "section": "",
    "text": "medtrix &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  axis      &lt;- system$a\n  \n  m &lt;- matrix(data     = 0L,\n              nrow     = length(constants),\n              ncol     = length(axis),\n              dimnames = list(constants, axis))\n  \n  x &lt;- look(code, system)\n  \n  for (i in axis) { \n    m[x[i], i] &lt;- 1L \n    }\n  \n  return(m)\n}\n\nICD-10-PCS:\n\nmedtrix(code = \"0G9000Z\", system = pcs)\n\n  1 2 3 4 5 6 7\n0 1 0 0 1 1 1 0\n1 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0\n5 0 0 0 0 0 0 0\n6 0 0 0 0 0 0 0\n7 0 0 0 0 0 0 0\n8 0 0 0 0 0 0 0\n9 0 0 1 0 0 0 0\nA 0 0 0 0 0 0 0\nB 0 0 0 0 0 0 0\nC 0 0 0 0 0 0 0\nD 0 0 0 0 0 0 0\nE 0 0 0 0 0 0 0\nF 0 0 0 0 0 0 0\nG 0 1 0 0 0 0 0\nH 0 0 0 0 0 0 0\nJ 0 0 0 0 0 0 0\nK 0 0 0 0 0 0 0\nL 0 0 0 0 0 0 0\nM 0 0 0 0 0 0 0\nN 0 0 0 0 0 0 0\nP 0 0 0 0 0 0 0\nQ 0 0 0 0 0 0 0\nR 0 0 0 0 0 0 0\nS 0 0 0 0 0 0 0\nT 0 0 0 0 0 0 0\nU 0 0 0 0 0 0 0\nV 0 0 0 0 0 0 0\nW 0 0 0 0 0 0 0\nX 0 0 0 0 0 0 0\nY 0 0 0 0 0 0 0\nZ 0 0 0 0 0 0 1\n\n\nHCPCS (CPT):\n\nmedtrix(code = \"99213\", system = hcpcs)\n\n  1 2 3 4 5\n0 0 0 0 0 0\n1 0 0 0 1 0\n2 0 0 1 0 0\n3 0 0 0 0 1\n4 0 0 0 0 0\n5 0 0 0 0 0\n6 0 0 0 0 0\n7 0 0 0 0 0\n8 0 0 0 0 0\n9 1 1 0 0 0\nA 0 0 0 0 0\nB 0 0 0 0 0\nC 0 0 0 0 0\nE 0 0 0 0 0\nF 0 0 0 0 0\nG 0 0 0 0 0\nH 0 0 0 0 0\nJ 0 0 0 0 0\nK 0 0 0 0 0\nL 0 0 0 0 0\nM 0 0 0 0 0\nP 0 0 0 0 0\nQ 0 0 0 0 0\nR 0 0 0 0 0\nS 0 0 0 0 0\nT 0 0 0 0 0\nU 0 0 0 0 0\nV 0 0 0 0 0"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#session-information",
    "href": "posts/draw_matrix/draw_matrix.html#session-information",
    "title": "Medical Codes as Matrices",
    "section": "\n2.1 Session Information",
    "text": "2.1 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: fuimus(v.0.0.2), paintr(v.0.0.1), ggthemes(v.5.1.0), stringfish(v.0.16.0), rlang(v.1.1.4), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.2), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.2), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13-1), systemfonts(v.1.1.0), xfun(v.0.49), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.49), farver(v.2.1.2), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.2)"
  },
  {
    "objectID": "posts/npi/npi_constructor.html",
    "href": "posts/npi/npi_constructor.html",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "",
    "text": "A National Provider Identifier (NPI) is a unique 10-digit identification number assigned to health care providers in the United States through NPPES1 The Centers for Medicare & Medicaid Services (CMS) developed the NPI as a way to standardize the identification of health care providers across the health care industry."
  },
  {
    "objectID": "posts/npi/npi_constructor.html#sec-checkdigit",
    "href": "posts/npi/npi_constructor.html#sec-checkdigit",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n1.1 NPI Check Digit",
    "text": "1.1 NPI Check Digit\nThe check digit is calculated using the Luhn formula for computing the modulus 10 double-add-double check digit.3\n3 Recognized as an ISO standard (ISO/IEC 7812) and is the specified check digit algorithm to be used for the card issuer identifier on a standard health identification card.When an NPI is used as a card issuer identifier on a standard health identification card, it is prefixed with 80840, in which 80 indicates health applications and 840 indicates the United States. To enable this feature for any NPI, the check digit will always be calculated as if the prefix is present. For a non-prefixed NPI, this is accomplished by adding the constant 24 in step 2 of the calculation.\nCheck Digit Calculation\nThe calculation is as follows:\n\nBeginning with the rightmost digit, double the value of the alternate digits.\nAdd the individual digits of the products from Step 1 to the unaffected digits from the original number.\nSubtract the result of step 2 from the next highest number ending in zero. This is the check digit.\n\n\n\n\n\n\n\nNext Multiple of Ten\n\n\n\nThe next highest number ending in zero is the next multiple of ten.\nSpecifically, for some number n, the next multiple of ten would be n + (10 - (n \\mod 10)):\n\nnext_10 &lt;- \\(n) n + (10 - (n %% 10))\n\nFor example, if n is 23, the next multiple of ten is 30:\n\nnext_10(23)\n\n[1] 30\n\n\nIf n is a multiple of ten, such as 50, the next multiple of 10 is 60:\n\nnext_10(50)\n\n[1] 60\n\n\n\n\n\nExamples\nThe following check digit calculation examples are reproduced from the CMS Standard document, which includes demonstrations for both prefixed and non-prefixed NPIs.\n\n\nPrefix\nNon-Prefix\n\n\n\n\npre = c(8, 0, 8, 4, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\nrev = c(8, 0, 8, 8, 0, 2, 2, 6, 4, 10, 6, 14, 8, 18)\nadd = quote(8 + 0 + 8 + 8 + 0 + 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8)\neq  = 67\n\nAssume the prefixed 9-position identifier is:\n\nprefix &lt;- \\(x) {\n  as.integer(\n    unlist(\n      strsplit(\n        paste0(80840, x), \"\")\n      )\n    )\n}\n\nprefix(123456789)\n\n [1] 8 0 8 4 0 1 2 3 4 5 6 7 8 9\n\n\nBeginning on the right, double the alternate digits:\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- c(1, 3, 5, 7, 9, 11, 13)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\n\nprefix(123456789) |&gt; \n  reverse_double()\n\n [1]  8  0  8  8  0  2  2  6  4 10  6 14  8 18\n\n\nSum the individual digits:\n\nadd_digits &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    )\n}\n\nprefix(123456789) |&gt; \n  reverse_double() |&gt; \n  add_digits()\n\n[1] 67\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nprefix(123456789) |&gt; \n  reverse_double() |&gt; \n  add_digits() |&gt;\n  check_digit()\n\n[1] 3\n\n\nAppend the check digit to the identifier: 808401234567893\n\nappend_check &lt;- \\(check, id) {\n  cat(\n    paste0(\n      paste0(\n        prefix(id), \n        collapse = \"\"), \n      check)\n    )\n}\n\nprefix(123456789) |&gt; \n  reverse_double() |&gt; \n  add_digits() |&gt;\n  check_digit() |&gt; \n  append_check(123456789)\n\n808401234567893\n\n\n\n\n\nAssume the non-prefixed 9-position identifier is 123456789\n\n\nsplit_id &lt;- \\(x) {\n  as.integer(\n    unlist(\n      strsplit(\n        as.character(x), \"\"\n        )\n      )\n    )\n}\n\nx &lt;- split_id(123456789)\n\nx\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\n\nBeginning on the right, double the alternate digits: 2  2  6  4 10  6 14  8 18\n\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- c(1, 3, 5, 7, 9)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\nx &lt;- reverse_double(x)\n\nx\n\n[1]  2  2  6  4 10  6 14  8 18\n\n\n\nAdd constant 24 to the sum of the individual digits: 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8 + 1 + 8 + 24 = 67\n\n\nsum_plus_24 &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    ) + 24\n}\n\nx &lt;- sum_plus_24(x)\n\nx\n\n[1] 67\n\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nx &lt;- check_digit(x)\n\nx\n\n[1] 3\n\n\n\nAppend the check digit to the identifier: 1234567893\n\n\nappend_check &lt;- \\(id, check) {\n  cat(paste0(id, check))\n}\n\nappend_check(123456789, x)\n\n1234567893"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#validating-the-input",
    "href": "posts/npi/npi_constructor.html#validating-the-input",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.1 Validating the Input",
    "text": "2.1 Validating the Input\n\nInput string (x) validation order:\n\nAbort if not length(x) == 1\n\nAbort if not 10 characters long\nAbort if any elements of x are not 0-9\n\nAbort if first element is not \"1\" or \"2\"\n\nCoerce to &lt;character&gt; if x is a &lt;numeric&gt; vector\n\n\n\n\n\n\ninput_validation.R\n\n# Abort if `x` is `length(x) != 1`\ncheck_length &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (length(x) != 1) {\n    cli::cli_abort(\n      \"{.arg {arg}} must be of length 1.\", \n      arg = arg, \n      call = call,\n      class = \"check_length\"\n      )\n  }\n}\n\n# If `x` is a `&lt;numeric&gt;` \n# vector, coerce to `&lt;character&gt;`\nnumeric_to_char &lt;- function(x) {\n  if (!rlang::is_character(x)) { \n    as.character(x)\n  } else {\n    x  \n  }\n}\n\n# Abort if any of `x`'s \n# elements are not numbers\ncheck_chars_numeric &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_grepl(x, \"^[0-9]{1,10}$\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must contain numbers only.\", \n      arg = arg, \n      call = call,\n      class = \"check_chars_numeric\"\n      )\n  }\n}\n\n# Abort if `x` is not \n# 10 characters long\ncheck_nchars_10 &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (stringfish::sf_nchar(x) != 10L) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must be 10 characters long.\", \n      arg = arg, \n      call = call,\n      class = \"check_nchars_10\"\n      )\n  }\n}\n\n# Must begin with 1 or 2\ncheck_first_char &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_substr(x, 1, 1) %in% c(\"1\", \"2\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must start with a 1 or 2.\", \n      arg = arg, \n      call = call,\n      class = \"check_first_char\"\n      )\n  }\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#cli-messages",
    "href": "posts/npi/npi_constructor.html#cli-messages",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.2 CLI Messages",
    "text": "2.2 CLI Messages\n\n\n\ncli_messages.R\n\nnpi_inform &lt;- function(x, msg) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (\n      c(\"*\" = glue::glue(\"{msg}: {x}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_inform\"\n  )\n}\n\nnpi_alert_invalid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"x\" = \"NPI is invalid\")),\n    body = (c(\"!\" = glue::glue(\"{x} != {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_invalid\"\n  )\n}\n\nnpi_alert_valid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"v\" = \"NPI is valid\")),\n    body = (c(\"&gt;\" = glue::glue(\"{x} == {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_valid\"\n  )\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#constructor-function",
    "href": "posts/npi/npi_constructor.html#constructor-function",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.3 Constructor Function",
    "text": "2.3 Constructor Function\n\n\n\nnpi_constructor.R\n\nnpi_constructor &lt;- function(npi, verbose = TRUE) {\n  \n  npi &lt;- numeric_to_char(npi)\n  check_length(npi)\n  check_nchars_10(npi)\n  check_chars_numeric(npi)\n  check_first_char(npi)\n  \n  p &lt;- \\(..., ss = \"\") paste0(..., collapse = ss)\n  s &lt;- \\(x) unlist(strsplit(x, \"\"), use.names = FALSE)\n  \n  id &lt;- rev(s(npi)[1:9])\n  \n  if (verbose) {\n    npi_inform(npi, \"Testing NPI candidate\")\n    npi_inform(p(id, ss = \"\"), \"Reverse 9-digit identifier\")\n  }\n  \n  idx     &lt;- c(1, 3, 5, 7, 9)\n  id      &lt;- as.numeric(id)\n  id[idx] &lt;- as.numeric(id[idx]) * 2\n  id[idx] &lt;- ifelse(id[idx] &gt; 9, id[idx] - 9, id[idx])\n  \n  if (verbose) {\n    npi_inform(p(id, ss = \" \"), \"Double & reduce alternates\")\n  }\n  \n  id   &lt;- sum(id)\n  cn   &lt;- id + 24\n  ml   &lt;- ceiling(cn / 10) * 10\n  ck   &lt;- ml - cn\n  test &lt;- substr(npi, 1, 9)\n  test &lt;- p(test, ck)\n  \n  if (verbose) {\n    \n    npi_inform(p(p(c(id, 24), ss = \" + \"), p(\" = \", cn)), \"Add 24 to sum digits\")\n    npi_inform(p(p(\"⌈\", cn, \"⌉\"), p(\" = \", ml)) ,\"Next multiple of 10\")\n    npi_inform(p(p(c(ml, cn), ss = \" - \"), p(\" = \", ck)), \"Find check digit\")\n    npi_inform(p(test, ss = \"\"), \"Append check digit\")\n    \n    if (identical(test, npi)) npi_alert_valid(test, npi)\n    if (!identical(test, npi)) npi_alert_invalid(test, npi)\n  }\n  invisible(test)\n}\n\n\nTest Validations\n\nnpi_constructor(\"123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must be 10 characters long.\n\nnpi_constructor(\"O123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must contain numbers only.\n\nnpi_constructor(\"0000000000\")\n\nError in `npi_constructor()`:\n! An `npi` must start with a 1 or 2.\n\n\nTest Verbose Output\n\nnpi_constructor(1234567891)\n\n• Testing NPI candidate: 1234567891\n• Reverse 9-digit identifier: 987654321\n• Double & reduce alternates: 9 8 5 6 1 4 6 2 2\n• Add 24 to sum digits: 43 + 24 = 67\n• Next multiple of 10: ⌈67⌉ = 70\n• Find check digit: 70 - 67 = 3\n• Append check digit: 1234567893\n✖ NPI is invalid\n\n\n\nnpi_constructor(1043477615)\n\n• Testing NPI candidate: 1043477615\n• Reverse 9-digit identifier: 167743401\n• Double & reduce alternates: 2 6 5 7 8 3 8 0 2\n• Add 24 to sum digits: 41 + 24 = 65\n• Next multiple of 10: ⌈65⌉ = 70\n• Find check digit: 70 - 65 = 5\n• Append check digit: 1043477615\n✔ NPI is valid\n\n\n\nnpi_constructor(\"1000000000\")\n\n• Testing NPI candidate: 1000000000\n• Reverse 9-digit identifier: 000000001\n• Double & reduce alternates: 0 0 0 0 0 0 0 0 2\n• Add 24 to sum digits: 2 + 24 = 26\n• Next multiple of 10: ⌈26⌉ = 30\n• Find check digit: 30 - 26 = 4\n• Append check digit: 1000000004\n✖ NPI is invalid\n\n\nTest Verbose Option/Invisible Return\n\nnpi_constructor(\"1000000000\", verbose = FALSE)\n\nnew_npi &lt;- npi_constructor(\"1000000000\", verbose = FALSE)\n\nnew_npi\n\n[1] \"1000000004\""
  },
  {
    "objectID": "posts/npi/npi_constructor.html#minimal-validator",
    "href": "posts/npi/npi_constructor.html#minimal-validator",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.4 Minimal Validator",
    "text": "2.4 Minimal Validator\n\n\n\nis_valid_npi.R\n\nsmash &lt;- \\(...) paste0(..., collapse = \"\")\nsplat &lt;- \\(x)   unlist(strsplit(x, \"\"), use.names = FALSE)\nidx   &lt;- c(1, 3, 5, 7, 9)\n\nis_valid_npi &lt;- function(x) {\n  \n  stopifnot(stringfish::sf_grepl(x, \"^[12][0-9]{9}$\"))\n  \n  id &lt;- as.numeric(cheapr::cheapr_rev(splat(x)[1:9]))\n  \n  id[idx] &lt;- id[idx] * 2\n  \n  id[idx] &lt;- codex::iif_else(id[idx] &gt; 9, id[idx] - 9, id[idx])\n  \n  id   &lt;- sum(id) + 24\n  ck   &lt;- (ceiling(id / 10) * 10) - id\n  test &lt;- smash(codex::sf_sub(x, start = 1, stop = 9), ck)\n  \n  identical(test, x)\n}\n\n\nTest Validator\n\nis_valid_npi(\"123456789\")\n\nError in is_valid_npi(\"123456789\"): stringfish::sf_grepl(x, \"^[12][0-9]{9}$\") is not TRUE\n\nis_valid_npi(\"O123456789\")\n\nError in is_valid_npi(\"O123456789\"): stringfish::sf_grepl(x, \"^[12][0-9]{9}$\") is not TRUE\n\nis_valid_npi(\"0000000000\") # All leading zeroes will be dropped\n\nError in is_valid_npi(\"0000000000\"): stringfish::sf_grepl(x, \"^[12][0-9]{9}$\") is not TRUE\n\nis_valid_npi(\"3000000000\")\n\nError in is_valid_npi(\"3000000000\"): stringfish::sf_grepl(x, \"^[12][0-9]{9}$\") is not TRUE\n\nis_valid_npi(\"1043477615\")\n\n[1] TRUE\n\nis_valid_npi(\"1234567891\")\n\n[1] FALSE\n\n\n\nluhn &lt;- function(x) {\n  \n  x &lt;- rev(as.integer(unlist(strsplit(x, \"\"), use.names = FALSE)))\n  \n  odd  &lt;- seq_along(x) %% 2 == 1\n  even &lt;- seq_along(x) %% 2 == 0\n  \n  x[even] &lt;- x[even] * 2\n  x[even] &lt;- ifelse(x[even] &gt; 9, x[even] - 9, x[even])\n  \n  sum_odd  &lt;- sum(x[odd])\n  sum_even &lt;- sum(x[even])\n  \n  sum_x &lt;- sum_odd + sum_even\n  \n  sum_x %% 10 == 0\n}\n\n\nrandom_npi_generator &lt;- \\(n) {\n  stringfish::sf_convert(\n    replicate(\n    n = n, \n    expr = paste0(\n      c(sample(1:2, 1, replace = TRUE), \n        sample(0:9, 9, replace = TRUE)), \n      collapse = \"\")))\n}\nrandom_npi_generator(3)\n\n[1] \"2991085381\" \"2752288265\" \"2751381432\"\n\n\n\nn &lt;- 1e5\nx &lt;- random_npi_generator(n)\n# y &lt;- x[purrr::map_lgl(x, is_valid_npi)]\ny &lt;- x[purrr::map_lgl(x, luhn)]\ncat((length(y) / n) * 100, \"%\")\n\n10.045 %\n\nbench::mark(\n  purrr::map_lgl(x, luhn)) |&gt; \n  dplyr::select(1:9) |&gt; \n  dplyr::glimpse()\n\nRows: 1\nColumns: 9\n$ expression &lt;bch:expr&gt; &lt;purrr::map_lgl(x, luhn)&gt;\n$ min        &lt;bch:tm&gt; 2.78s\n$ median     &lt;bch:tm&gt; 2.78s\n$ `itr/sec`  &lt;dbl&gt; 0.3594546\n$ mem_alloc  &lt;bch:byt&gt; 391KB\n$ `gc/sec`   &lt;dbl&gt; 8.626911\n$ n_itr      &lt;int&gt; 1\n$ n_gc       &lt;dbl&gt; 24\n$ total_time &lt;bch:tm&gt; 2.78s"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#session-information",
    "href": "posts/npi/npi_constructor.html#session-information",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.5 Session Information",
    "text": "2.5 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: cli(v.3.6.3), rlang(v.1.1.4), fuimus(v.0.0.2), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), bench(v.1.1.3), pander(v.0.6.5), kit(v.0.0.19), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), parallel(v.4.4.1), tools(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), profmem(v.0.6.0), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), cheapr(v.0.9.91), stringfish(v.0.16.0), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), data.table(v.1.16.99), glue(v.1.8.0), codex(v.0.0.0.9000), Rcpp(v.1.0.13), collapse(v.2.0.17), systemfonts(v.1.1.0), xfun(v.0.49), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.49), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/packaging/packaging.html",
    "href": "posts/packaging/packaging.html",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "initialize_package.R\n\n#' Initialize a new R package\n#'\n#' @param pkgname `&lt;chr&gt;` name of package\n#'\n#' @returns nothing\n#'\n#' @examplesIf FALSE\n#' initialize_package(\"package\")\n#'\n#' @autoglobal\n#'\n#' @noRd\ninitialize_package &lt;- \\(pkgname) {\n  \n  local  &lt;- \"C:/Users/Andrew/Desktop/Repositories/\"\n  github &lt;- \"https://github.com/andrewallenbruce/\"\n  \n  usethis::create_package(\n    path = glue::glue(\"{local}{pkgname}\"),\n    fields = list(\n      Package = glue::glue(\"{pkgname}\"),\n      \"Authors@R\" = utils::person(\n        given = c(\"Andrew\", \"Allen\"), \n        family = \"Bruce\", \n        email = \"andrewallenbruce@gmail.com\", \n        role = c(\"aut\", \"cre\", \"cph\")),\n      Maintainer = \"Andrew Allen Bruce &lt;andrewallenbruce@gmail.com&gt;\",\n      URL = glue::glue(\"{github}{pkgname}\"),\n      BugReports = glue::glue(\"{github}{pkgname}/issues\"))\n  )\n}\n\n\n\n\nusethis::use_git()\n\n\nWill ask you to commit files to Git. Say YES.\n\n\n\nusethis::use_github()\n\n\nWill ask you to commit files to GitHub. Say YES.\n\n\n\nusethis::use_mit_license(copyright_holder = \"Andrew Allen Bruce\")\nusethis::use_code_of_conduct(contact = \"andrewallenbruce@gmail.com\")\nusethis::use_package_doc()\nusethis::use_news_md()\n\n\n\nusethis::use_readme_rmd()\n\n\n&lt;!-- badges: start --&gt;\n\n![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/PACKAGE?style=flat-square&logo=R&label=Package&color=%23192a38)\n[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE)\n[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE/commits/master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)\n\n&lt;!-- badges: end --&gt;\n\n\nroxyglobals::use_roxyglobals()\n\nIn the DESCRIPTION file, make sure the following two fields are as follows:\nConfig/roxyglobals/filename: generated-globals.R\nConfig/roxyglobals/unique: TRUE\n\n\nusethis::use_testthat(parallel = TRUE)\nusethis::use_test(\"add-test\")\n\n\n\nusethis::use_pkgdown_github_pages()\nusethis::use_vignette(\"getting-started\", \"Getting Started\")\n\nCopy and paste into _pkgdown.yml file:\nurl: https://andrewallenbruce.github.io/codex/\n\ntemplate:\n  bootstrap: 5\n  light-switch: true\n  bslib:\n    base_font: {google: \"Roboto\"}\n    heading_font: {google: \"Roboto Slab\"}\n    code_font: {google: \"Source Code Pro\"}\n\nnavbar:\n  structure:\n    left:\n    - intro\n    - reference\n    - articles\n    - tutorials\n    - news\n    right:\n    - search\n    - github\n    - lightswitch\n  components:\n    reference:\n      text: Reference\n      href: reference/index.html\n    search:\n      search: []\n    lightswitch:\n      icon: fa-sun\n      aria-label: Light switch\n      id: lightswitch\n      menu:\n      - text: Light\n        theme: light\n        icon: fa-sun\n      - text: Dark\n        theme: dark\n        icon: fa-moon\n      - text: Auto\n        theme: auto\n        icon: fa-adjust\n    news:\n      text: Changelog\n      href: news/index.html\n    github:\n      icon: fab fa-github fa-lg\n      href: https://github.com/andrewallenbruce/codex/\n      aria-label: GitHub\nFunction Reference Example:\n- title: Classifications\n  desc: &gt;\n    Classification systems for added context and dimensionality reduction.\n  contents:\n  - betos\n  - ndc_lookup\n  - taxonomies\n  - taxonomy_codes\n  - taxonomy_crosswalk\n- title: Utilities\n  desc: &gt;\n    Various helper functions.\n  contents:\n  - change\n  - geomean\n  - years_df\n  - duration_vec\n  - summary_stats\n  - add_counties\n\n\ndevtools::check()\ndevtools::build_rmd(\"README.Rmd\")\nusethis::use_tidy_description()"
  },
  {
    "objectID": "posts/packaging/packaging.html#connect-to-git",
    "href": "posts/packaging/packaging.html#connect-to-git",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_git()\n\n\nWill ask you to commit files to Git. Say YES."
  },
  {
    "objectID": "posts/packaging/packaging.html#create-repository-on-github",
    "href": "posts/packaging/packaging.html#create-repository-on-github",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_github()\n\n\nWill ask you to commit files to GitHub. Say YES."
  },
  {
    "objectID": "posts/packaging/packaging.html#add-license-coc-package-document-and-news",
    "href": "posts/packaging/packaging.html#add-license-coc-package-document-and-news",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_mit_license(copyright_holder = \"Andrew Allen Bruce\")\nusethis::use_code_of_conduct(contact = \"andrewallenbruce@gmail.com\")\nusethis::use_package_doc()\nusethis::use_news_md()"
  },
  {
    "objectID": "posts/packaging/packaging.html#add-readme.rmd",
    "href": "posts/packaging/packaging.html#add-readme.rmd",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_readme_rmd()\n\n\n&lt;!-- badges: start --&gt;\n\n![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/PACKAGE?style=flat-square&logo=R&label=Package&color=%23192a38)\n[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE)\n[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/PACKAGE.svg)](https://github.com/andrewallenbruce/PACKAGE/commits/master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)\n\n&lt;!-- badges: end --&gt;"
  },
  {
    "objectID": "posts/packaging/packaging.html#use-roxyglobals",
    "href": "posts/packaging/packaging.html#use-roxyglobals",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "roxyglobals::use_roxyglobals()\n\nIn the DESCRIPTION file, make sure the following two fields are as follows:\nConfig/roxyglobals/filename: generated-globals.R\nConfig/roxyglobals/unique: TRUE"
  },
  {
    "objectID": "posts/packaging/packaging.html#use-testthat",
    "href": "posts/packaging/packaging.html#use-testthat",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_testthat(parallel = TRUE)\nusethis::use_test(\"add-test\")"
  },
  {
    "objectID": "posts/packaging/packaging.html#create-pkgdown-site",
    "href": "posts/packaging/packaging.html#create-pkgdown-site",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "usethis::use_pkgdown_github_pages()\nusethis::use_vignette(\"getting-started\", \"Getting Started\")\n\nCopy and paste into _pkgdown.yml file:\nurl: https://andrewallenbruce.github.io/codex/\n\ntemplate:\n  bootstrap: 5\n  light-switch: true\n  bslib:\n    base_font: {google: \"Roboto\"}\n    heading_font: {google: \"Roboto Slab\"}\n    code_font: {google: \"Source Code Pro\"}\n\nnavbar:\n  structure:\n    left:\n    - intro\n    - reference\n    - articles\n    - tutorials\n    - news\n    right:\n    - search\n    - github\n    - lightswitch\n  components:\n    reference:\n      text: Reference\n      href: reference/index.html\n    search:\n      search: []\n    lightswitch:\n      icon: fa-sun\n      aria-label: Light switch\n      id: lightswitch\n      menu:\n      - text: Light\n        theme: light\n        icon: fa-sun\n      - text: Dark\n        theme: dark\n        icon: fa-moon\n      - text: Auto\n        theme: auto\n        icon: fa-adjust\n    news:\n      text: Changelog\n      href: news/index.html\n    github:\n      icon: fab fa-github fa-lg\n      href: https://github.com/andrewallenbruce/codex/\n      aria-label: GitHub\nFunction Reference Example:\n- title: Classifications\n  desc: &gt;\n    Classification systems for added context and dimensionality reduction.\n  contents:\n  - betos\n  - ndc_lookup\n  - taxonomies\n  - taxonomy_codes\n  - taxonomy_crosswalk\n- title: Utilities\n  desc: &gt;\n    Various helper functions.\n  contents:\n  - change\n  - geomean\n  - years_df\n  - duration_vec\n  - summary_stats\n  - add_counties"
  },
  {
    "objectID": "posts/packaging/packaging.html#run-commit-and-push",
    "href": "posts/packaging/packaging.html#run-commit-and-push",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "devtools::check()\ndevtools::build_rmd(\"README.Rmd\")\nusethis::use_tidy_description()"
  },
  {
    "objectID": "posts/packaging/packaging.html#session-information",
    "href": "posts/packaging/packaging.html#session-information",
    "title": "R Packaging Workflow",
    "section": "\n6.1 Session Information",
    "text": "6.1 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nloaded via a namespace (and not attached): digest(v.0.6.37), fastmap(v.1.2.0), xfun(v.0.49), knitr(v.1.49), htmltools(v.0.5.8.1), rmarkdown(v.2.29), lifecycle(v.1.0.4), cli(v.3.6.3), pander(v.0.6.5), textshaping(v.0.4.0), systemfonts(v.1.1.0), compiler(v.4.4.2), rstudioapi(v.0.17.1), tools(v.4.4.2), ragg(v.1.3.3), evaluate(v.1.0.1), Rcpp(v.1.0.13-1), yaml(v.2.3.10), rlang(v.1.1.4), jsonlite(v.1.8.9) and htmlwidgets(v.1.6.4)"
  },
  {
    "objectID": "posts/provider_search/provider_search.html",
    "href": "posts/provider_search/provider_search.html",
    "title": "Comprehensive Search in {provider}",
    "section": "",
    "text": "Provider &lt;- new_class(name = \"Provider\", abstract = TRUE)"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#nppes",
    "href": "posts/provider_search/provider_search.html#nppes",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.1 NPPES",
    "text": "3.1 NPPES\n\nnppes(npi = 1043245657)\n\n# A tibble: 1 × 29\n  npi        entity_type enum_date  last_update status prefix first middle last \n  &lt;chr&gt;      &lt;fct&gt;       &lt;date&gt;     &lt;date&gt;      &lt;fct&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n1 1043245657 Individual  2006-07-11 2013-10-08  Active Dr.    MARK  K      FUNG \n# ℹ 20 more variables: gender &lt;fct&gt;, credential &lt;chr&gt;, sole_prop &lt;lgl&gt;,\n#   purpose &lt;fct&gt;, address &lt;chr&gt;, city &lt;chr&gt;, state &lt;ord&gt;, zip &lt;chr&gt;,\n#   country &lt;chr&gt;, phone &lt;chr&gt;, fax &lt;chr&gt;, tx_code &lt;chr&gt;, tx_primary &lt;lgl&gt;,\n#   tx_desc &lt;chr&gt;, tx_license &lt;chr&gt;, tx_state &lt;ord&gt;, id_code &lt;chr&gt;,\n#   id_desc &lt;chr&gt;, id_state &lt;ord&gt;, id_identifier &lt;chr&gt;"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#enrollment-in-medicare",
    "href": "posts/provider_search/provider_search.html#enrollment-in-medicare",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.2 Enrollment in Medicare",
    "text": "3.2 Enrollment in Medicare\n\nproviders(npi = 1043245657)\n\n# A tibble: 1 × 10\n  npi        pac   enid  specialty_code specialty_description state first middle\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;          &lt;chr&gt;                 &lt;ord&gt; &lt;chr&gt; &lt;chr&gt; \n1 1043245657 7810… I200… 14-22          PRACTITIONER - PATHO… VT    MARK  K     \n# ℹ 2 more variables: last &lt;chr&gt;, gender &lt;fct&gt;\n\n\n\nclinicians(npi = 1043245657)\n\n# A tibble: 1 × 19\n  npi        pac     enid  first middle last  gender credential school grad_year\n  &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;fct&gt;  &lt;chr&gt;      &lt;chr&gt;      &lt;int&gt;\n1 1043245657 781089… I200… MARK  K      FUNG  Male   MD         UNIVE…      1999\n# ℹ 9 more variables: specialty &lt;chr&gt;, facility_name &lt;chr&gt;, pac_org &lt;chr&gt;,\n#   members_org &lt;int&gt;, address_org &lt;chr&gt;, city_org &lt;chr&gt;, state_org &lt;ord&gt;,\n#   zip_org &lt;chr&gt;, phone_org &lt;chr&gt;"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#medicare-opt-out",
    "href": "posts/provider_search/provider_search.html#medicare-opt-out",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.3 Medicare Opt-Out",
    "text": "3.3 Medicare Opt-Out\n\nopt_out(npi = 1043245657)"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#order-and-referral-eligibility",
    "href": "posts/provider_search/provider_search.html#order-and-referral-eligibility",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.4 Order and Referral Eligibility",
    "text": "3.4 Order and Referral Eligibility\n\norder_refer(npi = 1043245657)\n\n# A tibble: 5 × 4\n  npi        first last  eligible                 \n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;fct&gt;                    \n1 1043245657 MARK  FUNG  Medicare Part B          \n2 1043245657 MARK  FUNG  Home Health Agency       \n3 1043245657 MARK  FUNG  Durable Medical Equipment\n4 1043245657 MARK  FUNG  Power Mobility Devices   \n5 1043245657 MARK  FUNG  Hospice"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#reassignment-of-benefits",
    "href": "posts/provider_search/provider_search.html#reassignment-of-benefits",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.5 Reassignment of Benefits",
    "text": "3.5 Reassignment of Benefits\n\nreassignments(npi = 1043245657)\n\n# A tibble: 1 × 12\n  npi        pac    enid  first last  associations organization pac_org enid_org\n  &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;        &lt;int&gt; &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;   \n1 1043245657 78108… I200… MARK  FUNG             1 UNIVERSITY … 377949… O200608…\n# ℹ 3 more variables: state_org &lt;ord&gt;, reassignments &lt;int&gt;, entry &lt;fct&gt;"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#affiliations",
    "href": "posts/provider_search/provider_search.html#affiliations",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.6 Affiliations",
    "text": "3.6 Affiliations\n\naffiliations(npi = 1043245657)\n\n# A tibble: 2 × 7\n  npi        pac        first middle last  facility_type facility_ccn\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;fct&gt;         &lt;chr&gt;       \n1 1043245657 7810891009 MARK  K      FUNG  Hospital      470003      \n2 1043245657 7810891009 MARK  K      FUNG  Hospital      330250      \n\n\n\nbind_rows(\n  hospitals(facility_ccn = 470003),\n  hospitals(facility_ccn = 330250))\n\n# A tibble: 3 × 21\n  npi_org    pac_org    enid_org        enid_state facility_ccn organization    \n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;           &lt;ord&gt;      &lt;chr&gt;        &lt;chr&gt;           \n1 1568419976 3779491071 O20021111000009 VT         470003       UNIVERSITY OF V…\n2 1568419976 3779491071 O20021111000009 VT         470003       UNIVERSITY OF V…\n3 1033270699 2769396878 O20120110000201 NY         330250       CHAMPLAIN VALLE…\n# ℹ 15 more variables: doing_business_as &lt;chr&gt;, specialty_code &lt;chr&gt;,\n#   specialty &lt;chr&gt;, incorp_date &lt;date&gt;, incorp_state &lt;ord&gt;, structure &lt;chr&gt;,\n#   address &lt;chr&gt;, city &lt;chr&gt;, state &lt;ord&gt;, zip &lt;chr&gt;, location_type &lt;chr&gt;,\n#   registration &lt;fct&gt;, multi_npi &lt;lgl&gt;, reh_conversion &lt;lgl&gt;, subgroup &lt;fct&gt;"
  },
  {
    "objectID": "posts/provider_search/provider_search.html#session-information",
    "href": "posts/provider_search/provider_search.html#session-information",
    "title": "Comprehensive Search in {provider}",
    "section": "\n3.7 Session Information",
    "text": "3.7 Session Information\n\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: gt(v.0.11.1), S7(v.0.2.0), provider(v.0.0.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): tidyselect(v.1.2.1), blob(v.1.2.4), fastmap(v.1.2.0), janitor(v.2.2.0), digest(v.0.6.37), timechange(v.0.3.0), lifecycle(v.1.0.4), sf(v.1.0-19), terra(v.1.7-83), RSQLite(v.2.3.8), magrittr(v.2.0.3), compiler(v.4.4.2), rlang(v.1.1.4), tools(v.4.4.2), utf8(v.1.2.4), yaml(v.2.3.10), knitr(v.1.49), htmlwidgets(v.1.6.4), bit(v.4.5.0), sp(v.2.1-4), classInt(v.0.4-10), curl(v.6.0.1), xml2(v.1.3.6), tidycensus(v.1.6.7), KernSmooth(v.2.23-24), withr(v.3.0.2), grid(v.4.4.2), fansi(v.1.0.6), e1071(v.1.7-16), colorspace(v.2.1-1), scales(v.1.3.0), zeallot(v.0.1.0), cli(v.3.6.3), rmarkdown(v.2.29), crayon(v.1.5.3), ragg(v.1.3.3), generics(v.0.1.3), rstudioapi(v.0.17.1), httr(v.1.4.7), tzdb(v.0.4.0), DBI(v.1.2.3), cachem(v.1.1.0), proxy(v.0.4-27), pander(v.0.6.5), rvest(v.1.0.4), vctrs(v.0.6.5), tigris(v.2.1), jsonlite(v.1.8.9), hms(v.1.1.3), strex(v.2.0.1), bit64(v.4.5.2), systemfonts(v.1.1.0), units(v.0.8-5), glue(v.1.8.0), codetools(v.0.2-20), stringi(v.1.8.4), gtable(v.0.3.6), raster(v.3.6-30), munsell(v.0.5.1), pillar(v.1.9.0), rappdirs(v.0.3.3), htmltools(v.0.5.8.1), R6(v.2.5.1), httr2(v.1.0.6), textshaping(v.0.4.0), evaluate(v.1.0.1), lattice(v.0.22-6), backports(v.1.5.0), memoise(v.2.0.1), snakecase(v.0.11.1), class(v.7.3-22), Rcpp(v.1.0.13-1), uuid(v.1.2-1), checkmate(v.2.3.2), xfun(v.0.49), zipcodeR(v.0.3.5) and pkgconfig(v.2.0.3)"
  },
  {
    "objectID": "posts/rules/claims_rules.html",
    "href": "posts/rules/claims_rules.html",
    "title": "Building Claims Rules",
    "section": "",
    "text": "To build a composable, portable, and extensible healthcare claims rules engine. The engine will be used to evaluate claims data for compliance with a set of rules. The rules will be defined in a structured format and will be evaluated using R code, but should be general enough to be easily translated to another language. The goal is to create a flexible and extensible system that can be used to evaluate claims data in a variety of scenarios, pre- or post.\n\n\nqueryBuilder\nhealthdb\ninterface\ndataverifyr\ncohortBuilder"
  },
  {
    "objectID": "posts/rules/claims_rules.html#similar-work",
    "href": "posts/rules/claims_rules.html#similar-work",
    "title": "Building Claims Rules",
    "section": "",
    "text": "queryBuilder\nhealthdb\ninterface\ndataverifyr\ncohortBuilder"
  },
  {
    "objectID": "posts/rules/claims_rules.html#descriptors",
    "href": "posts/rules/claims_rules.html#descriptors",
    "title": "Building Claims Rules",
    "section": "\n8.1 Descriptors",
    "text": "8.1 Descriptors\n\n\n\n\n\n\n\n\n\n\n\nnumber\nidentifier\ncategory\n\n\n\n401\nVAX\n\n\n90696 Component billing\n\n\n90696 (DTaP-IPV) has 4 components. Code each component of a combination vaccine individually.\n\n\n\n\n208\nMCD:OH\n\n\n90461\n\n\nCPT code 90460 should be reported separately for each administration of a vaccine toxoid CPT code. ODM does not recognize CPT 90461 for the reporting of additional toxoid components of combination vaccines.\n\n\n\n\n95\nMCD:GA\n\n\nGA Medicaid - nursing home revenue code\n\n\nGA Medicaid requires 0521 revenue code for nursing home visits.\n\n\n\n\n775\nMCD:MI\n\n\nNA\n\n\nA preventive medicine E/M visit and another E/M visit on the same date are billed separately if, during the preventive visit, a problem or abnormality is detected which requires additional work which meets the key component requirements of a problemoriented E/M visit. When this occurs, bill the office/outpatient E/M procedure code using modifier 25 and bill the preventive E/M visit without using a modifier. Refer to CPT guidelines for additional information.\n\n\n\n\n782\nICD:CM\n\n\nJ91.0 cannot be billed as primary\n\n\nJ91.0 cannot be used as primary dx. Code first underlying neoplasm.\n\n\n\n\n52\nFQHC\n\n\nMental Health Qualifying Visits\n\n\nG0469, G0470 should be billed on a UB-04 with revenue code 0900.\n\n\n\n\n1084\nVAX\n\n\nNA\n\n\nVaccine is no longer approved for use in the United States. To report 3 mcg Pfizer tris-sucrose vaccine, see 91318\n\n\n\n\n259\nPREVENT\n\n\nHearing Screening\n\n\nPer AAP: Codes Z01.10 (encounter for examination of ears and hearing without abnormal findings) and Z01.118 (encounter for examination of ears and hearing with other abnormal findings) are reported only when a patient presents for an encounter specific to ears and hearing, not for a routine well-child examination at which a hearing screening is performed. Review payer guidelines.\n\n\n\n\n843\nICD:CM\n\n\nZ34.* with O*\n\n\nZ34.* should not be billed with O* dx codes per excludes 1 note.\n\n\n\n\n798\nBCBS:MI\n\n\nNA\n\n\nFor BCN behavioral health services, always include licensure level (level of care) modifier (forexample: AM, HA, HO, AJ, TD, HE, AH)."
  },
  {
    "objectID": "posts/rules/claims_rules.html#definitions",
    "href": "posts/rules/claims_rules.html#definitions",
    "title": "Building Claims Rules",
    "section": "\n8.2 Definitions",
    "text": "8.2 Definitions\n\n\n\n\n\n\n\n      definition\n    \n\n\n574\n@primary_name is one of [UHC/MCR, United Health Care, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United HealthCare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare, United Healthcare Claim Division, United Healthcare River Valley, United Healthcare Student, UNITED HEALTHCARE/MEDICARE, UNITED HEALTH SHARED SERVICES] %AND% @hcpcs is one of [92507, 92508, 92521, 92522, 92523, 92524, 92526, 92597, 92607, 92608, 92609, 96125, 97012, 97016, 97018, 97022, 97024, 97026, 97028, 97032, 97033, 97034, 97035, 97036, 97110, 97112, 97113, 97116, 97124, 97129, 97130, 97139, 97140, 97150, 97161, 97162, 97163, 97164, 97165, 97166, 97167, 97168, 97530, 97533, 97535, 97537, 97542, 97750, 97755, 97760, 97761, 97763, 97799, G0237, G0238, G0239, G0281, G0283, G0329, S8948 %AND% @mod_1 is not [GN, GO, GP]\n\n\n906\n@hcpcs is one of [E0617, K0606, K0607, K0608, K0609] %AND% &lt;&lt;@mod_1 is not [EY, GA, GZ, KF, KX] %AND% @mod_2 is not [EY, GA, GZ, KF, KX] %AND% @mod_3 is not [EY, GA, GZ, KF, KX] %AND% @mod_4 is not [EY, GA, GZ, KF, KX]&gt;&gt;\n\n\n734\n@hcpcs is [J70*] %AND% @hcpcs is not [9363*]\n\n\n1041\n@primary_name is one of [CIGNA, CIGNA CONNECTICUT GENERAL, CIGNA - GREAT WEST, CIGNA MEDICARE ACCESS, CIGNA INTERNATIONAL, CIGNA GWH, CIGNA VOLUNTARY, CIGNA PPO, CIGNA] %AND% @dos after [05/25/2023] %AND% @hcpcs is one of [99212, 99213, 99214, 99215] %AND% &lt;&lt;@mod_1 is [25] %OR% @mod_2 is [25]&gt;&gt;\n\n\n550\n@hcpcs is one of [9920*, 9921*, 9922*, 9923*, 9924*, 9925*, 9928*, 9929*, 9930*, 9931*, 9932*, 9933*, 9934*, 9935*, 9938*, 9939*, 9946*, 9947*, 9948*, 9949*] %AND% @hcpcs is one of [40490, 40800, 40801, 40804, 40805, 40806, 40808, 40810, 40812, 40820, 40830, 40831, 41000, 41005, 41010, 41019, 41100, 41105, 41108, 41110, 41115, 41250, 41251, 41252, 41530, 41800, 41805, 41806, 41820, 41821, 41822, 41825, 41826, 41828, 41830, 41850, 41870, 42000, 42100, 42104, 42106, 42160, 42180, 42182, 42280, 42281, 42300, 42310, 42320, 42330, 42400, 42405, 42550, 42650, 42660, 42700, 42720, 42800, 42804, 42806, 42808, 42809, 42900, 42960, 42975, 43191, 43192, 43193, 43194, 43195, 43196, 43197, 43198, 43200, 43201, 43202, 43204, 43205, 43206, 43210, 43211, 43212, 43213, 43214, 43215, 43216, 43217, 43220, 43226, 43227, 43229, 43231, 43232, 43233, 43235, 43236, 43237, 43238, 43239, 43240, 43241, 43242, 43243, 43244, 43245, 43246, 43247, 43248, 43249, 43250, 43251, 43252, 43253, 43254, 43255, 43257, 43259, 43260, 43261, 43262, 43263, 43264, 43265, 43266, 43270, 43274, 43275, 43276, 43277, 43278, 43290, 43291, 43450, 43453, 43460, 43752, 43753, 43754, 43755, 43756, 43757, 43761, 43762, 43763, 44100, 44360, 44361, 44363, 44364, 44365, 44366, 44369, 44370, 44372, 44373, 44376, 44377, 44378, 44379, 44380, 44381, 44382, 44384, 44385, 44386, 44388, 44389, 44390, 44391, 44392, 44394, 44401, 44402, 44403, 44404, 44405, 44406, 44407, 44408, 44500, 45005, 45300, 45303, 45305, 45307, 45308, 45309, 45315, 45317, 45320, 45321, 45327, 45330, 45331, 45332, 45333, 45334, 45335, 45337, 45338, 45340, 45341, 45342, 45346, 45347, 45349, 45350, 45378, 45379, 45380, 45381, 45382, 45384, 45385, 45386, 45388, 45389, 45390, 45391, 45392, 45393, 45398, 45520, 45900, 45905, 45910, 45915, 45990, 46020, 46030, 46050, 46080, 46083, 46220, 46221, 46230, 46320, 46500, 46505, 46600, 46601, 46604, 46606, 46607, 46608, 46610, 46611, 46612, 46614, 46615, 46706, 46754, 46900, 46910, 46916, 46917, 46922, 46924, 46940, 46942, 47000, 47382, 47383, 47490, 47531, 47532, 47533, 47534, 47535, 47536, 47537, 47538, 47539, 47540, 47541, 47552, 47553, 47554, 47555, 47556, 48102, 49013, 49014, 49082, 49083, 49084, 49180, 49185, 49320, 49321, 49322, 49324, 49325, 49400, 49405, 49406, 49407, 49411, 49418, 49421, 49422, 49423, 49424, 49427, 49428, 49429, 49436, 49440, 49441, 49442, 49446, 49450, 49451, 49452, 49460, 49465, 49594, 49595, 49596, 49613, 49614, 49615, 49616, 49617, 49618, 49621, 49622] %AND% @mod_1 is not [25] %AND% @claim is not [UB04]\n\n\n807\n@primary_class is [W%OR%KERS COMPENSATION]\n\n\n523\n@primary_class is one of [MEDICAID, MEDICAID CMO] %AND% @hcpcs is [J*] %AND% @ndc is not [PRESENT]\n\n\n482\n@primary_name is [AETNA] %AND% @pos is one of [02, 10] %AND% @hcpcs is one of [G0406, G0407, G0408, G0425, G0426, G0427, G0508, G0509] %AND% @mod_1 is [GT, 95]\n\n\n150\n@age is less than [19 YRS] %AND% @primary_class is one of [MEDICAID, MEDICAID MCO] %AND% @hcpcs is [90460] %AND% @hcpcs is not [10021, 10040, 10060, 10061, 10080, 10081, 10120, 10121, 10140, 10160, 11000, 11010, 11011, 11042, 11055, 11056, 11057, 11100, 11200, 1130*, 1131*, 1140*, 1142*, 1144*, 1145*, 1160*, 1162*, 1164*, 11719, 1172*, 11730, 11740, 1175*, 1176*, 1177*, 1190*, 1200*, 1201*, 1202*, 1203*, 1204*, 1205*, 15271, 16000, 16020, 16025, 16030, 16035, 1700*, 1710*, 1711*, 17250, 1726*, 1727*, 1728*, 19000, 205*, 2060*, 2061*, 23500, 23650, 23931, 24640, 24650, 24670, 25500, 25600, 25622, 26010, 26011, 26115, 26600, 26605, 26750, 27093, 27520, 27530, 27750, 27760, 27780, 27786, 27808, 27824, 28080, 28190, 28450, 28470, 28490, 28515, 29065, 29075, 29085, 29086, 291*, 29240, 29260, 29280, 29305, 29345, 29355, 294*, 295*, 29700, 29705, 30300, 3090*, 45300, 46050, 46083, 46320, 46600, 5170*, 51720, 51725, 51728, 51736, 51741, 51784, 51798, 52000, 52281, 53601, 53661, 5405*, 5406*, 54150, 55700, 56405, 56420, 56440, 56441, 56442, 56501, 56515, 56605, 56606, 56820, 56821, 57061, 57065, 57160, 57420, 57452, 57454, 57455, 57460, 57461, 57500, 57505, 57510, 57511, 58100, 59200, 59425, 59426, 59430, 64405, 64450, 64455, 65205, 65210, 65220, 65222, 69000, 69005, 69200, 69209, 69210, 7680*, 7681*, 76830, 76856, 76857, 92002, 92004, 92012, 92014, 92511, 95992, 97597, 97602, 98925, 98926, 98927, 98928, 98929, 98940, 98941, 98942, 9920*, 9921*, 9930*, 9931*, 9934*, 99350, 99495, 99496, 99497, G0127, G0168, G0245, G0246, G0247, G0490, 99406, 99407, G0101, G0102, G0117, G0118, G0296, G0402, G0436, G0437, G0438, G0439, G0442, G0443, G0444, G0445, G0446, G0447, Q0091, 90791, 90792, 90832, 90834, 90837, 90839, 90845, 9938*, 9939*] %AND% @hcpcs is not [S5190]\n\n\n331\n@primary_class is one of [MEDICAID CMO, MEDICAID] %AND% @claim is [UB04] %AND% @hcpcs is one of [99381, 99382, 99383, 99384, 99385, 99391, 99392, 99393, 99394, 99395]"
  },
  {
    "objectID": "posts/rules/claims_rules.html#step-components",
    "href": "posts/rules/claims_rules.html#step-components",
    "title": "Building Claims Rules",
    "section": "\n8.3 Step Components",
    "text": "8.3 Step Components\nTwo types of a step: qualifier and terminator\nA qualifier is basically a long if (x & y & (a | b | c)) statement.\nA terminator is the final step, analogous to a stopifnot() statement that checks the data.\n\nnumber:\norder:\nidentifier:\nvariable: Recode to standardize names\nclass: Variable Data Class\ngroup: Variable Grouping\naction: Translate to condition\nvalue: Coerce to correct data type, deal with wildcards\ncondition: Predicate function that evaluates to TRUE or FALSE\n\nVariables\n\ndos: 81\npos: 142\nub04: 106\nage: 158\nsex: 3\nreferring: 14\nrendering: 20\nicd: 251\nhcpcs: 1071\nmod_1, mod_2, mod_3, mod_4: 472\nunit: 13\nndc: 23\nrev_code: 19\nprimary_class: 371\nprimary_name: 132\nprimary_auth: 3\nsecondary_class: 6\nsecondary_name: 4"
  }
]