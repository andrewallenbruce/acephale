[
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html",
    "href": "posts/taxonomy/provider_taxonomy.html",
    "title": "Taxonomy Codes",
    "section": "",
    "text": "Purpose: Categorize health care providers by their type, classification, and specialization.\n\nMaintenance: National Uniform Claim Committee (NUCC). Updated twice a year, in January and July.\n\nApplication: Used in various healthcare processes, including:\n\nElectronic healthcare transactions\nNPI enumeration\nMedicare provider enrollment\nInsurance credentialing\nClaims processing\nDetermining network adequacy"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#key-points",
    "href": "posts/taxonomy/provider_taxonomy.html#key-points",
    "title": "Taxonomy Codes",
    "section": "",
    "text": "Purpose: Categorize health care providers by their type, classification, and specialization.\n\nMaintenance: National Uniform Claim Committee (NUCC). Updated twice a year, in January and July.\n\nApplication: Used in various healthcare processes, including:\n\nElectronic healthcare transactions\nNPI enumeration\nMedicare provider enrollment\nInsurance credentialing\nClaims processing\nDetermining network adequacy"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#overview",
    "href": "posts/taxonomy/provider_taxonomy.html#overview",
    "title": "Taxonomy Codes",
    "section": "\n2 Overview",
    "text": "2 Overview\nThe Health Care Provider Taxonomy Code Set is an external, non-medical data code set designed for use in an electronic environment, specifically within the ASC X12N Health Care transactions, including those mandated under HIPAA.\nA taxonomy code is a unique alphanumeric code, ten characters in length, that describes a health care service provider’s type, classification, and the area of specialization.\nTaxonomy codes are selected by the provider at the time of NPI registration. When providers apply for NPIs, the National Plan and Provider Enumeration System (NPPES) does not verify the accuracy of the selected taxonomy codes. It only validates that the codes exist within the current version of the code set.\nIt is important for healthcare providers to select the most appropriate taxonomy code(s) as it can affect various aspects of their practice, including billing and claims processing. Selection of a taxonomy code does not replace any credentialing or validation process that the provider requesting the code should complete."
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#taxonomy-hierarchy",
    "href": "posts/taxonomy/provider_taxonomy.html#taxonomy-hierarchy",
    "title": "Taxonomy Codes",
    "section": "\n3 Taxonomy Hierarchy",
    "text": "3 Taxonomy Hierarchy\nThe code set is structured into 3 distinct levels:\n\nProvider Grouping\nClassification\nArea of Specialization\n\n\n\n\nInteractive Provider Taxonomy Hierarchy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLevel I: Provider Grouping\n\n\n\nA major grouping of service(s) or occupation(s) of health care providers.\nExamples:\n\nAllopathic & Osteopathic Physicians\nDental Providers\nHospitals\n\n\n\n\n\n\n\n\n\nLevel II: Classification\n\n\n\nA more specific service or occupation related to the Provider Grouping.\nFor example, the Classification for Allopathic & Osteopathic Physicians is based upon the General Specialty Certificates, as issued by the appropriate national boards.\nThe following boards, however, will have their general certificates appear as Level III Areas strictly due to display limitations of the code set for Boards that have multiple general certificates:\n\nMedical Genetics\nPreventive Medicine\nPsychiatry & Neurology\nRadiology\nSurgery\nOtolaryngology\nPathology\n\n\n\n\n\n\n\n\n\nLevel III: Area of Specialization\n\n\n\nA more specialized area of the Classification in which a provider chooses to practice or make services available.\nFor example, the Area of Specialization for provider grouping Allopathic & Osteopathic Physicians is based upon the Subspecialty Certificates as issued by the appropriate national boards."
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#medicare-crosswalk",
    "href": "posts/taxonomy/provider_taxonomy.html#medicare-crosswalk",
    "title": "Taxonomy Codes",
    "section": "\n4 Medicare Crosswalk",
    "text": "4 Medicare Crosswalk\n\nProviders and suppliers with the proper taxonomy code eligible for Medicare programs.\n\nThe Medicare Provider and Supplier Taxonomy Crosswalk dataset lists the providers and suppliers eligible to enroll in Medicare programs with the proper healthcare provider taxonomy code. This data includes the Medicare specialty codes, if available, provider/supplier type description, taxonomy code, and the taxonomy description."
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#sources",
    "href": "posts/taxonomy/provider_taxonomy.html#sources",
    "title": "Taxonomy Codes",
    "section": "\n5 Sources",
    "text": "5 Sources\n\nHealth Care Provider Taxonomy Code Set v24.0 (PDF)\ntaxonomy.NUCC.org\nCMS.gov\nASAM.org"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#session-information",
    "href": "posts/taxonomy/provider_taxonomy.html#session-information",
    "title": "Taxonomy Codes",
    "section": "\n6 Session Information",
    "text": "6 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: collapsibleTree(v.0.1.8), provider(v.0.0.1), htmltools(v.0.5.8.1), downlit(v.0.4.4), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.48), httr2(v.1.0.6), htmlwidgets(v.1.6.4), RApiSerialize(v.0.1.4), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.1), generics(v.0.1.3), curl(v.5.2.3), fansi(v.1.0.6), pkgconfig(v.2.0.3), checkmate(v.2.3.2), RcppParallel(v.5.1.9), gt(v.0.11.1), lifecycle(v.1.0.4), compiler(v.4.4.1), textshaping(v.0.4.0), munsell(v.0.5.1), data.tree(v.1.1.0), janitor(v.2.2.0), qs(v.0.27.2), snakecase(v.0.11.1), sass(v.0.4.9), yaml(v.2.3.10), pillar(v.1.9.0), cachem(v.1.1.0), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), pander(v.0.6.5), fuimus(v.0.0.2), pins(v.1.4.0), fastmap(v.1.2.0), grid(v.4.4.1), colorspace(v.2.1-1), cli(v.3.6.3), magrittr(v.2.0.3), utf8(v.1.2.4), withr(v.3.0.2), backports(v.1.5.0), scales(v.1.3.0), rappdirs(v.0.3.3), timechange(v.0.3.0), rmarkdown(v.2.29), ragg(v.1.3.3), hms(v.1.1.3), stringfish(v.0.16.0), memoise(v.2.0.1), evaluate(v.1.0.1), knitr(v.1.48), rlang(v.1.1.4), Rcpp(v.1.0.13), zeallot(v.0.1.0), glue(v.1.8.0), xml2(v.1.3.6), strex(v.2.0.1), rstudioapi(v.0.17.1), jsonlite(v.1.8.9), R6(v.2.5.1), systemfonts(v.1.1.0) and fs(v.1.6.5)"
  },
  {
    "objectID": "posts/regex/regex.html",
    "href": "posts/regex/regex.html",
    "title": "Learning to Love Regexes By Learning Them",
    "section": "",
    "text": "Count                                 RegexAll              18903 ^[A-CEGHJ-MP-V0-9][0-9]{3}[AFMTU0-9]$-Level I         10985                  ^[0-9]{4}[AFMTU0-9]$--Category I      9990                    ^[0-9]{4}[AMU0-9]$--Category II      565                           ^[0-9]{4}F$--Category III     430                           ^[0-9]{4}T$-Level II         7918              ^[A-CEGHJ-MP-V][0-9]{4}$"
  },
  {
    "objectID": "posts/regex/regex.html#checklist",
    "href": "posts/regex/regex.html#checklist",
    "title": "Learning to Love Regexes By Learning Them",
    "section": "\n2.1 Checklist",
    "text": "2.1 Checklist\n\nsplit_lengths()\nremove_redundant()\nprocess_groups()\ng1()\ng2()\ng3()\ng4()\ng5()\nreduce_groups()"
  },
  {
    "objectID": "posts/regex/regex.html#session-information",
    "href": "posts/regex/regex.html#session-information",
    "title": "Learning to Love Regexes By Learning Them",
    "section": "\n8.1 Session Information",
    "text": "8.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: emphatic(v.0.1.8), fuimus(v.0.0.2), collapse(v.2.0.17), data.table(v.1.16.99), codex(v.0.0.0.9000), stringfish(v.0.16.0), cli(v.3.6.3), vctrs(v.0.6.5), rlang(v.1.1.4), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): rappdirs(v.0.3.3), utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), rprojroot(v.2.0.4), jsonlite(v.1.8.9), pins(v.1.4.0), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), northstar(v.0.0.7), textshaping(v.0.4.0), RApiSerialize(v.0.1.4), crayon(v.1.5.3), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), qs(v.0.27.2), tools(v.4.4.1), parallel(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), here(v.1.0.1), R6(v.2.5.1), lifecycle(v.1.0.4), cheapr(v.0.9.9), fs(v.1.6.5), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/packaging/packaging.html",
    "href": "posts/packaging/packaging.html",
    "title": "R Packaging Workflow",
    "section": "",
    "text": "create_package(\"C:/Path/To/Folder/&lt;package-name&gt;\")\n\nConnect to Git\n\nuse_git()\n\nWill ask you to commit files to Git. Say yes.\nCreate Repository on GitHub\n\nuse_github()\n\nWill ask you to commit files to GitHub. Say yes.\nAdd License & COC\n\nuse_mit_license(\"Your Full Name\")\nuse_code_of_conduct(\"your@email.com\")\n\nAdd README, Package Document, and News\n\nuse_readme_rmd()\nuse_package_doc()\nuse_news_md()\n\nUse roxyglobals\n\nroxyglobals::use_roxyglobals()\n\nUse testthat\n\nuse_testthat(parallel = TRUE)\nuse_test(\"add-test\")\n\nCreate pkgdown site\n\nuse_pkgdown_github_pages()\n\nRun Before Committing\n\ncheck()\nbuild_rmd(\"README.Rmd\")\nuse_tidy_description()"
  },
  {
    "objectID": "posts/packaging/packaging.html#session-information",
    "href": "posts/packaging/packaging.html#session-information",
    "title": "R Packaging Workflow",
    "section": "\n2.1 Session Information",
    "text": "2.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: usethis(v.3.0.0)\nloaded via a namespace (and not attached): digest(v.0.6.37), fastmap(v.1.2.0), xfun(v.0.48), magrittr(v.2.0.3), glue(v.1.8.0), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29), lifecycle(v.1.0.4), cli(v.3.6.3), pander(v.0.6.5), vctrs(v.0.6.5), textshaping(v.0.4.0), systemfonts(v.1.1.0), compiler(v.4.4.1), purrr(v.1.0.2), rstudioapi(v.0.17.1), tools(v.4.4.1), ragg(v.1.3.3), evaluate(v.1.0.1), Rcpp(v.1.0.13), yaml(v.2.3.10), rlang(v.1.1.4), jsonlite(v.1.8.9), fs(v.1.6.5) and htmlwidgets(v.1.6.4)"
  },
  {
    "objectID": "posts/mpfs/mpfs.html",
    "href": "posts/mpfs/mpfs.html",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This is an overview of the general format of the Medicare Physician Fee Schedule (MPFS), specifically the PFS Relative Value File. Updates are released on the first day of each quarter. If required, a correction notice may be issued. The file is a zip archive and typically contains six files:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRVU\nData Dictionary, Record Layout and File Documentation\n\n\n\n\n\nPPRRVU\nPhysician Fee Schedule RVUs and Policy Indicators\n\n\n\n\n\nGPCI\nGeographic Practice Cost Index Components for each Carrier/Locality combination\n\n\n\n\n\nLOCCO\nLocality to County Crosswalk\n\n\n\n\n\nANES\nAnesthesia Conversion Factors\n\n\n\n\n\nOPPSCAP\nOPPS-based capitation-adjusted payment amounts.\n\n\n\n\n\n\nWhat follows is a thorough dissection of each file in the archive, starting with the RVU file.\n\nThe pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")\n\n\n\ndplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\nHCPCS\n16,324\n18,499\n100.00%\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n+\n133\n0.72%\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\nNA\n4,066\n21.98%\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\nNA\n2,468\n13.34%\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\nwork_rvu\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\nnon_fac_pe_rvu\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\nfacility_pe_rvu\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\nmp_rvu\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\nnon_facility_total\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\nfacility_total\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\npre_op\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\nintra_op\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\npost_op\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\nconv_factor\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\nnon_facility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nfacility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nmp_used_for_opps_payment_amount\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁\n\n\n\n\n\n\n\nThe MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment.\n\n\n\nAccepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925\n\n\n\nThis file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment.\n\n\nProvides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFacility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#rvu",
    "href": "posts/mpfs/mpfs.html#rvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators",
    "href": "posts/mpfs/mpfs.html#indicators",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "dplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\nHCPCS\n16,324\n18,499\n100.00%\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n+\n133\n0.72%\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\nNA\n4,066\n21.98%\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\nNA\n2,468\n13.34%\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\nwork_rvu\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\nnon_fac_pe_rvu\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\nfacility_pe_rvu\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\nmp_rvu\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\nnon_facility_total\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\nfacility_total\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\npre_op\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\nintra_op\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\npost_op\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\nconv_factor\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\nnon_facility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nfacility_pe_used_for_opps_payment_amount\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\nmp_used_for_opps_payment_amount\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#pprvu",
    "href": "posts/mpfs/mpfs.html#pprvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#accepting-assignment",
    "href": "posts/mpfs/mpfs.html#accepting-assignment",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Accepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#relative-value-file",
    "href": "posts/mpfs/mpfs.html#relative-value-file",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#global-surgery-days",
    "href": "posts/mpfs/mpfs.html#global-surgery-days",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Provides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators-1",
    "href": "posts/mpfs/mpfs.html#indicators-1",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Facility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#session-information",
    "href": "posts/mpfs/mpfs.html#session-information",
    "title": "Medicare Physician Fee Schedule",
    "section": "\n3.1 Session Information",
    "text": "3.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: cheapr(v.0.9.9), hacksaw(v.0.0.2), rbrvs(v.0.0.1), northstar(v.0.0.7), gt(v.0.11.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.48), htmlwidgets(v.1.6.4), collapse(v.2.0.17), RApiSerialize(v.0.1.4), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.1), generics(v.0.1.3), parallel(v.4.4.1), fansi(v.1.0.6), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), lifecycle(v.1.0.4), compiler(v.4.4.1), textshaping(v.0.4.0), munsell(v.0.5.1), qs(v.0.27.2), htmltools(v.0.5.8.1), sass(v.0.4.9), yaml(v.2.3.10), pracma(v.2.4.4), pillar(v.1.9.0), commonmark(v.1.9.2), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), pander(v.0.6.5), fuimus(v.0.0.2), pins(v.1.4.0), fastmap(v.1.2.0), grid(v.4.4.1), colorspace(v.2.1-1), cli(v.3.6.3), magrittr(v.2.0.3), base64enc(v.0.1-3), utf8(v.1.2.4), withr(v.3.0.2), scales(v.1.3.0), rappdirs(v.0.3.3), timechange(v.0.3.0), rmarkdown(v.2.29), ragg(v.1.3.3), hms(v.1.1.3), stringfish(v.0.16.0), evaluate(v.1.0.1), knitr(v.1.48), markdown(v.1.13), rlang(v.1.1.4), Rcpp(v.1.0.13), zeallot(v.0.1.0), glue(v.1.8.0), xml2(v.1.3.6), rstudioapi(v.0.17.1), jsonlite(v.1.8.9), R6(v.2.5.1), systemfonts(v.1.1.0) and fs(v.1.6.5)"
  },
  {
    "objectID": "posts/dar/art_of_dar.html",
    "href": "posts/dar/art_of_dar.html",
    "title": "The Art of DAR",
    "section": "",
    "text": "Average Days in Accounts Receivable (DAR or Average Days in AR) is a common financial metric known as an efficiency ratio.\nDAR measures the average number of days it takes for a business to collect money owed for services rendered from the responsible parties.\nIts function in the healthcare revenue cycle is as a high-level monitor of the financial health of a healthcare entity.\nThe following is a thorough overview of everything you never knew you didn’t want to know about DAR. Let’s start off with some background and terminology. See Note 1 for more information on the American healthcare economic model.\n\nAging of Accounts\n\nAn account is a billable episode of care. It begins to age once it is billed to the guarantor. These outstanding accounts are monitored in 30-day blocks or bins ([0, 30), [31, 60), [61, 90), [91, 120), and [121, \\infty)) by the number of accounts, the amount owed by each bin and the responsible parties. The older the account, the less likely it will be paid.\n\n\n\n\nGuarantor\n\nThe responsible party for the amount owed (an insurance payer, a patient, etc.) Most claims are originally billed to insurance and, until the insurance makes a payment, the responsibility for the payment continues to be with the insurance payer. After the payer makes or denies a payment (with no just cause for an appeal), the responsibility for the balance of goes to the patient (to be sent an invoice) or the physician (to be written off.)\n\nAccounts Receivable\n\nAR represents money owed to the healthcare practice by patients and/or insurance carriers. The AR balance is the total charges billed to an insurance payer or patient for services rendered but not yet collected. The balance can only be reduced by payment or by adjustments, contractual or otherwise. The AR cycle begins with the delivery of services and ends with reconciliation, or when the balance owed equals zero.\n\nAverage Days in AR\n\nA mathematical formula for the average number of days it takes a business to collect money that it is owed. A low average is good. A high average signals a problem within the revenue cycle.\n\n\n\nSo now we know that a low Days in AR number is good and a high number is bad. How low is good though? How high is bad?\nLet’s say that a practice has a DAR of 95 days. This means that, on average, it takes the practice 95 days to collect it’s outstanding balances. Let’s start with what we can say for sure about a Days in AR of 95:\n\n95 days is roughly equal to a little over three months.\nTherefore, there is three months of unpaid work sitting in Accounts Receivable.\nAs such, this practice will need three months of cash reserves on hand to meet its financial obligations.\n\nThe ideal Days in AR depends entirely upon the medical practice, its customers (patients), its customers’ payers, the services it supplies, the providers performing those services, and the financial situation of the practice.\n\n\n\n\n\n\nTip 1: The American Healthcare Economic Model\n\n\n\n\n\nTo understand the healthcare version of Days in AR, you need to first understand the environment in which it is used.\nTypically, companies sell their products or services directly to consumers and are paid immediately at the point of service (POS). This is called a business-to-consumer revenue model.\nAnother revenue model type is the business-to-business (B2B) model, concerning businesses that transact primarily with each other. Purchases between two businesses tend to be much larger. As such, B2B businesses invoice on a monthly basis, meaning no payment for 30+ days.\nSomewhere in between these two models is the American healthcare system. This gray area is caused by a middleman called a third party payer. Better known as an insurance company, providers enter into a contractual agreement with this third party to be paid for their services at a reduced rate.\nIn exchange, a provider gains access to the payer’s large subscriber base. The difference between the charge a provider submits to a payer and the contracted rate he or she has agreed to is called the contractual adjustment, which is written off once a claim has been adjudicated.\nThe contractual adjustment introduces a critical inefficiency to the healthcare revenue model. Rather than prices being determined by supply and demand, they are set by individually negotiated arrangements, the end result of which is no real demand or pricing curve.\nThis issue is much too complex for me to properly do justice to here. It is, however, an essential concept to grasp when trying to understand healthcare reimbursement. In other words, healthcare reimbursement is crazy, not you.\n\n\n\n\n\n \\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n    \n\n\n30\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n      dct\n      dart\n    \n\n\n30\n$131,440\n$203,460\n$4,381\n46.44\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99.\n\n\n\nTable 1\n\nTable 2"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#formula-for-dar",
    "href": "posts/dar/art_of_dar.html#formula-for-dar",
    "title": "The Art of DAR",
    "section": "",
    "text": "\\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n    \n\n\n30\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n    \n\nNov 1, 2024 - NA\n    \n\nndays\n      gct\n      arbt\n      dct\n      dart\n    \n\n\n30\n$131,440\n$203,460\n$4,381\n46.44\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99.\n\n\n\nTable 1\n\nTable 2"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "href": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "title": "The Art of DAR",
    "section": "\n2.1 EARb Target for DARt",
    "text": "2.1 EARb Target for DARt\nIn the first example, our DAR was 47.99. That’s approximately 13 days over our DARt of 35. What would our EARB need to have been to bring us under our DARt? Here’s our formula:\n eart = (\\ dart \\cdot gc\\ )\\ \\div days_n \nWe’ll calculate the EARB we needed as well as the difference between the two AR figures:"
  },
  {
    "objectID": "posts/dar/art_of_dar.html#session-information",
    "href": "posts/dar/art_of_dar.html#session-information",
    "title": "The Art of DAR",
    "section": "\n2.2 Session Information",
    "text": "2.2 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: forager(v.0.0.1), gt(v.0.11.1), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): sass(v.0.4.9), utf8(v.1.2.4), generics(v.0.1.3), xml2(v.1.3.6), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), rlang(v.1.1.4), commonmark(v.1.9.2), munsell(v.0.5.1), bigD(v.0.2.0), base64enc(v.0.1-3), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), pillar(v.1.9.0), gtable(v.0.3.6), Rcpp(v.1.0.13), glue(v.1.8.0), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29), compiler(v.4.4.1) and markdown(v.1.13)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Learning for Getting A Head",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nReading Time\n\n\n\n\n\n\n2024-11-06\n\n\nLearning to Love Regexes By Learning Them\n\n\n14 min\n\n\n\n\n2024-11-04\n\n\nClaims Analysis\n\n\n18 min\n\n\n\n\n2024-11-04\n\n\nThe Art of DAR\n\n\n8 min\n\n\n\n\n2024-11-04\n\n\nMedical Codes as Matrices\n\n\n3 min\n\n\n\n\n2024-11-04\n\n\nMedicare Physician Fee Schedule\n\n\n38 min\n\n\n\n\n2024-11-04\n\n\nNPIs & Luhn’s Algorithm\n\n\n14 min\n\n\n\n\n2024-11-04\n\n\nR Packaging Workflow\n\n\n3 min\n\n\n\n\n2024-11-04\n\n\n100%\n\n\n8 min\n\n\n\n\n2024-11-04\n\n\nTaxonomy Codes\n\n\n10 min\n\n\n\n\n2024-10-24\n\n\nBuilding Claims Rules\n\n\n19 min\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/claims/claims.html",
    "href": "posts/claims/claims.html",
    "title": "Claims Analysis",
    "section": "",
    "text": "procedure_sum &lt;- procedures |&gt;\n  summarise(\n    n_hcpcs = n_distinct(hcpcs, na.rm = TRUE),\n    n_units = na_sum(units),\n    n_mod1 = na_sum(!is.na(mod1)),\n    n_mod2 = na_sum(!is.na(mod2)),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(id, enc, dos)) |&gt;\n  filter(charges &gt; 0) |&gt;\n  arrange(dos) |&gt; \n  left_join(\n    encounters, by = join_by(id, enc, dos)) |&gt; \n  select(\n    id, \n    enc, \n    dos, \n    year:wday_l,\n    n_hcpcs, \n    n_units, \n    n_mod1, \n    n_mod2, \n    charges, \n    allowed, \n    payments, \n    adjustments,\n    dob,\n    age,\n    rendering,\n    cred,\n    icd,\n    pos,\n    pos_name,\n    pos_type,\n    loc,\n    ins_class,\n    ins_prim)\n\nprocedure_sum\n\n[90m# A tibble: 38,852 × 31[39m\n   id       enc dos         year quarter month month_l  week\n   [3m[90m&lt;chr&gt;[39m[23m  [3m[90m&lt;int&gt;[39m[23m [3m[90m&lt;date&gt;[39m[23m     [3m[90m&lt;int&gt;[39m[23m   [3m[90m&lt;int&gt;[39m[23m [3m[90m&lt;int&gt;[39m[23m [3m[90m&lt;ord&gt;[39m[23m   [3m[90m&lt;int&gt;[39m[23m\n[90m 1[39m PT0491     1 2022-06-14  [4m2[24m022       2     6 Jun        24\n[90m 2[39m PT2360     1 2022-07-31  [4m2[24m022       3     7 Jul        31\n[90m 3[39m PT0671     1 2022-08-06  [4m2[24m022       3     8 Aug        32\n[90m 4[39m PT1499     1 2022-08-06  [4m2[24m022       3     8 Aug        32\n[90m 5[39m PT1485     3 2022-08-09  [4m2[24m022       3     8 Aug        32\n[90m 6[39m PT1626     1 2022-08-10  [4m2[24m022       3     8 Aug        32\n[90m 7[39m PT2430     1 2022-08-10  [4m2[24m022       3     8 Aug        32\n[90m 8[39m PT1677     1 2022-08-11  [4m2[24m022       3     8 Aug        32\n[90m 9[39m PT2181     1 2022-08-11  [4m2[24m022       3     8 Aug        32\n[90m10[39m PT1043     1 2022-08-12  [4m2[24m022       3     8 Aug        32\n[90m# ℹ 38,842 more rows[39m\n[90m# ℹ 23 more variables: day &lt;int&gt;, yday &lt;int&gt;, wday &lt;int&gt;,[39m\n[90m#   wday_l &lt;ord&gt;, n_hcpcs &lt;int&gt;, n_units &lt;int&gt;,[39m\n[90m#   n_mod1 &lt;int&gt;, n_mod2 &lt;int&gt;, charges &lt;dbl&gt;,[39m\n[90m#   allowed &lt;dbl&gt;, payments &lt;dbl&gt;, adjustments &lt;dbl&gt;,[39m\n[90m#   dob &lt;date&gt;, age &lt;int&gt;, rendering &lt;chr&gt;, cred &lt;chr&gt;,[39m\n[90m#   icd &lt;chr&gt;, pos &lt;chr&gt;, pos_name &lt;chr&gt;, pos_type &lt;fct&gt;, …[39m\n\n\n\nprocedure_sum |&gt; \n  summarise(\n    encounters = n(),\n    n_hcpcs = na_sum(n_hcpcs),\n    n_units = na_sum(n_units),\n    n_mod1 = na_sum(n_mod1),\n    n_mod2 = na_sum(n_mod2),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(year, quarter, month_l, rendering, ins_prim)) |&gt; \n  arrange(year, quarter, month_l) |&gt; \n  ggplot(aes(y = charges)) +\n  geom_boxplot(aes(group = year, fill = year)) +\n  scale_x_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  ggthemes::theme_fivethirtyeight() +\n  theme(legend.position = \"none\") +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n\n\n\n\n\n\n\n\nprocedure_sum |&gt; \n  summarise(\n    encounters = n(),\n    n_hcpcs = na_sum(n_hcpcs),\n    n_units = na_sum(n_units),\n    n_mod1 = na_sum(n_mod1),\n    n_mod2 = na_sum(n_mod2),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(year, quarter, month_l, rendering, ins_prim)) |&gt; \n  arrange(year, quarter, month_l) |&gt; \n  ggplot(aes(x = payments, y = charges)) +\n  geom_point(aes(size = encounters, group = ins_prim, fill = ins_prim), colour = \"black\", shape = 21) +\n  geom_quantile(colour = \"royalblue\", linewidth = 1) +\n  # geom_hline(yintercept = 0, color = \"black\", linewidth = 0.5) +\n  # geom_vline(xintercept = 0, color = \"grey50\", linewidth = 0.5) +\n  scale_y_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  scale_x_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  ggthemes::theme_fivethirtyeight() +\n  coord_cartesian(clip = \"off\") +\n  theme(legend.position = \"none\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n\n[1m[22mSmoothing formula not specified. Using: y ~ x\n\n\n\n\n\n\n\n\n\n\nRevenue Per Visit\n\nRPV = Total Payments \\div Number of Patient Visits\n\n\n\nclaims_summary &lt;- claims |&gt;\n    select(\n    id,\n    enc,\n    age,\n    ins_prim,\n    charges,\n    allowed,\n    payments,\n    adjustments) |&gt; \n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(age)\n  ) |&gt; \n  summarise(\n    # patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE))\n\nclaims_summary |&gt; \n  set_names(\n    c(\"Average Patient Age\", \n      \"Procedures\", \n      \"Visits\", \n      \"Charges\", \n      \"Allowed\", \n      \"Net Payment\", \n      \"Adjustments\")) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt;\n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nAverage Patient Age\n46.5\n\n\nProcedures\n49721.0\n\n\nVisits\n39839.0\n\n\nCharges\n11659949.0\n\n\nAllowed\n4830582.7\n\n\nNet Payment\n4648361.4\n\n\nAdjustments\n5948070.3\n\n\n\n\n\nclaims_summary |&gt;\n  mutate(\n    revenue_adjustments = revenue + adjustments, \n    .after = charges) |&gt; \n  reframe(\n    cpp = charges / procedures,\n    alpp = allowed / procedures,\n    rpp = revenue / procedures,\n    adpp = adjustments / procedures,\n    ppv = procedures / visits,\n    cpv = charges / visits,\n    alpv = allowed / visits,\n    rpv = revenue / visits,\n    adpv = adjustments / visits,\n    cpr = charges / revenue_adjustments,\n    alpr = allowed / revenue,\n    adpr = adjustments / revenue,\n    net_collect = revenue / (charges - adjustments),\n    net_allow = revenue / allowed,\n    net_adjust = revenue / adjustments,\n    ) |&gt; \n  set_names(\n    c(\"Charge Per Procedure\", \n      \"Allowed Per Procedure\", \n      \"Payment Per Procedure\", \n      \"Adjustment Per Procedure\", \n      \"Procedures Per Visit\", \n      \"Charge Per Visit\", \n      \"Allowed Per Visit\", \n      \"Payment Per Visit\", \n      \"Adjustment Per Visit\",\n      \"Charge To Payment + Adjustment\",\n      \"Allowed Per Dollar\", \n      \"Adjustment Per Dollar\",\n      \"Net Collection Ratio\",\n      \"Net Allowable Ratio\",\n      \"Net Adjustment Ratio\"\n      )) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt; \n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nCharge Per Procedure\n234.5075320\n\n\nAllowed Per Procedure\n97.1537722\n\n\nPayment Per Procedure\n93.4888964\n\n\nAdjustment Per Procedure\n119.6289359\n\n\nProcedures Per Visit\n1.2480484\n\n\nCharge Per Visit\n292.6767489\n\n\nAllowed Per Visit\n121.2526095\n\n\nPayment Per Visit\n116.6786671\n\n\nAdjustment Per Visit\n149.3027014\n\n\nCharge To Payment + Adjustment\n1.1003656\n\n\nAllowed Per Dollar\n1.0392012\n\n\nAdjustment Per Dollar\n1.2796058\n\n\nNet Collection Ratio\n0.8138060\n\n\nNet Allowable Ratio\n0.9622776\n\n\nNet Adjustment Ratio\n0.7814907\n\n\n\n\n\n\n\ninsurance_summary &lt;- claims |&gt;\n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age, ins_prim)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, age, ins_prim)\n  ) |&gt; \n  summarise(\n    patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(ins_prim)\n  ) |&gt; \n  filter(!is.na(ins_prim)) |&gt; \n  arrange(desc(procedures))\n\n# Patients are counted once per insurance class\ninsurance_summary |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      patients\n      avg_age\n      procedures\n      visits\n      charges\n      allowed\n      revenue\n      adjustments\n    \n\n\nBCBS\n2155\n30.51601\n11073\n9348\n2648855\n1113623.43\n1052272.49\n1426863.60\n\n\nUHC\n1877\n34.26905\n10091\n7492\n2691070\n938135.72\n873231.19\n1538893.10\n\n\nSELF\n2801\n33.87429\n8770\n8153\n1020064\n775974.68\n773146.09\n101145.74\n\n\nAETNA\n1010\n28.61881\n4901\n3991\n1279925\n445925.74\n430341.11\n728428.95\n\n\nCIGNA\n758\n28.15963\n4265\n3651\n986190\n345288.15\n323414.76\n585340.34\n\n\nMEDICARE\n547\n70.09872\n2966\n1340\n787140\n292738.64\n287262.53\n487146.83\n\n\nOTHER\n744\n29.41667\n2804\n2416\n848695\n491911.51\n489813.89\n196970.03\n\n\nSUNFLOWER\n283\n15.55830\n1279\n1018\n476005\n141674.71\n140850.71\n301252.45\n\n\nAMBETTER\n174\n33.93103\n967\n904\n215805\n80836.37\n76822.76\n123926.40\n\n\nTRICARE WEST\n159\n23.72956\n811\n645\n241225\n69920.50\n68832.31\n167099.63\n\n\nHUMANA\n149\n58.39597\n732\n330\n199090\n50943.39\n49748.17\n142202.78\n\n\nMEDICAID\n60\n38.56667\n255\n87\n84010\n26401.45\n26224.00\n50286.00\n\n\nMERITAIN\n45\n24.48889\n206\n163\n52500\n19143.52\n18537.76\n32399.90\n\n\nVA\n32\n54.12500\n140\n60\n41865\n11575.76\n11575.76\n27735.43\n\n\nTRUSTMARK\n20\n27.90000\n86\n75\n20680\n6352.17\n6403.32\n11933.25\n\n\nRAILROAD\n13\n73.61538\n71\n35\n19435\n7233.90\n7164.62\n12310.38\n\n\nTRICARE EAST\n11\n21.36364\n66\n61\n13570\n6160.89\n5924.85\n7409.11\n\n\nMAGELLAN\n21\n35.71429\n62\n58\n14050\n1530.98\n1389.98\n3244.02\n\n\nSEDGWICK\n2\n47.00000\n20\n2\n6825\n1216.83\n1216.83\n283.17\n\n\nLIBERTY\n1\n73.00000\n15\n2\n5050\n1381.57\n1381.57\n118.43\n\n\nWELLCARE\n4\n56.75000\n14\n6\n4350\n1029.80\n1011.22\n2538.78\n\n\nHARTFORD\n2\n52.00000\n10\n2\n3550\n1583.00\n1795.50\n542.00\n\n\n\n\n\n\n\ninsurance_summary |&gt; \n  reframe(\n    ins_prim,\n    pts = patients,\n    vpp = visits / patients,\n    ppp = procedures / patients,\n    rpp = revenue / patients,\n    ppv = procedures / visits,\n    rpv = revenue / visits,\n    rpp = revenue / procedures\n  ) |&gt; \n  arrange(desc(pts)) |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      pts\n      vpp\n      ppp\n      rpp\n      ppv\n      rpv\n    \n\n\nSELF\n2801\n2.910746\n3.131025\n88.15805\n1.075678\n94.82964\n\n\nBCBS\n2155\n4.337819\n5.138283\n95.03048\n1.184531\n112.56659\n\n\nUHC\n1877\n3.991476\n5.376132\n86.53564\n1.346903\n116.55515\n\n\nAETNA\n1010\n3.951485\n4.852475\n87.80680\n1.228013\n107.82789\n\n\nCIGNA\n758\n4.816623\n5.626649\n75.82996\n1.168173\n88.58251\n\n\nOTHER\n744\n3.247312\n3.768817\n174.68398\n1.160596\n202.73754\n\n\nMEDICARE\n547\n2.449726\n5.422303\n96.85183\n2.213433\n214.37502\n\n\nSUNFLOWER\n283\n3.597173\n4.519435\n110.12565\n1.256385\n138.36023\n\n\nAMBETTER\n174\n5.195402\n5.557471\n79.44443\n1.069690\n84.98093\n\n\nTRICARE WEST\n159\n4.056604\n5.100629\n84.87338\n1.257364\n106.71676\n\n\nHUMANA\n149\n2.214765\n4.912752\n67.96198\n2.218182\n150.75203\n\n\nMEDICAID\n60\n1.450000\n4.250000\n102.83922\n2.931034\n301.42529\n\n\nMERITAIN\n45\n3.622222\n4.577778\n89.98913\n1.263804\n113.72859\n\n\nVA\n32\n1.875000\n4.375000\n82.68400\n2.333333\n192.92933\n\n\nMAGELLAN\n21\n2.761905\n2.952381\n22.41903\n1.068966\n23.96517\n\n\nTRUSTMARK\n20\n3.750000\n4.300000\n74.45721\n1.146667\n85.37760\n\n\nRAILROAD\n13\n2.692308\n5.461538\n100.91014\n2.028571\n204.70343\n\n\nTRICARE EAST\n11\n5.545455\n6.000000\n89.77045\n1.081967\n97.12869\n\n\nWELLCARE\n4\n1.500000\n3.500000\n72.23000\n2.333333\n168.53667\n\n\nSEDGWICK\n2\n1.000000\n10.000000\n60.84150\n10.000000\n608.41500\n\n\nHARTFORD\n2\n1.000000\n5.000000\n179.55000\n5.000000\n897.75000\n\n\nLIBERTY\n1\n2.000000\n15.000000\n92.10467\n7.500000\n690.78500"
  },
  {
    "objectID": "posts/claims/claims.html#ratio-analysis",
    "href": "posts/claims/claims.html#ratio-analysis",
    "title": "Claims Analysis",
    "section": "",
    "text": "Revenue Per Visit\n\nRPV = Total Payments \\div Number of Patient Visits\n\n\n\nclaims_summary &lt;- claims |&gt;\n    select(\n    id,\n    enc,\n    age,\n    ins_prim,\n    charges,\n    allowed,\n    payments,\n    adjustments) |&gt; \n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(age)\n  ) |&gt; \n  summarise(\n    # patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE))\n\nclaims_summary |&gt; \n  set_names(\n    c(\"Average Patient Age\", \n      \"Procedures\", \n      \"Visits\", \n      \"Charges\", \n      \"Allowed\", \n      \"Net Payment\", \n      \"Adjustments\")) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt;\n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nAverage Patient Age\n46.5\n\n\nProcedures\n49721.0\n\n\nVisits\n39839.0\n\n\nCharges\n11659949.0\n\n\nAllowed\n4830582.7\n\n\nNet Payment\n4648361.4\n\n\nAdjustments\n5948070.3\n\n\n\n\n\nclaims_summary |&gt;\n  mutate(\n    revenue_adjustments = revenue + adjustments, \n    .after = charges) |&gt; \n  reframe(\n    cpp = charges / procedures,\n    alpp = allowed / procedures,\n    rpp = revenue / procedures,\n    adpp = adjustments / procedures,\n    ppv = procedures / visits,\n    cpv = charges / visits,\n    alpv = allowed / visits,\n    rpv = revenue / visits,\n    adpv = adjustments / visits,\n    cpr = charges / revenue_adjustments,\n    alpr = allowed / revenue,\n    adpr = adjustments / revenue,\n    net_collect = revenue / (charges - adjustments),\n    net_allow = revenue / allowed,\n    net_adjust = revenue / adjustments,\n    ) |&gt; \n  set_names(\n    c(\"Charge Per Procedure\", \n      \"Allowed Per Procedure\", \n      \"Payment Per Procedure\", \n      \"Adjustment Per Procedure\", \n      \"Procedures Per Visit\", \n      \"Charge Per Visit\", \n      \"Allowed Per Visit\", \n      \"Payment Per Visit\", \n      \"Adjustment Per Visit\",\n      \"Charge To Payment + Adjustment\",\n      \"Allowed Per Dollar\", \n      \"Adjustment Per Dollar\",\n      \"Net Collection Ratio\",\n      \"Net Allowable Ratio\",\n      \"Net Adjustment Ratio\"\n      )) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt; \n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nCharge Per Procedure\n234.5075320\n\n\nAllowed Per Procedure\n97.1537722\n\n\nPayment Per Procedure\n93.4888964\n\n\nAdjustment Per Procedure\n119.6289359\n\n\nProcedures Per Visit\n1.2480484\n\n\nCharge Per Visit\n292.6767489\n\n\nAllowed Per Visit\n121.2526095\n\n\nPayment Per Visit\n116.6786671\n\n\nAdjustment Per Visit\n149.3027014\n\n\nCharge To Payment + Adjustment\n1.1003656\n\n\nAllowed Per Dollar\n1.0392012\n\n\nAdjustment Per Dollar\n1.2796058\n\n\nNet Collection Ratio\n0.8138060\n\n\nNet Allowable Ratio\n0.9622776\n\n\nNet Adjustment Ratio\n0.7814907\n\n\n\n\n\n\n\ninsurance_summary &lt;- claims |&gt;\n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age, ins_prim)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, age, ins_prim)\n  ) |&gt; \n  summarise(\n    patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(ins_prim)\n  ) |&gt; \n  filter(!is.na(ins_prim)) |&gt; \n  arrange(desc(procedures))\n\n# Patients are counted once per insurance class\ninsurance_summary |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      patients\n      avg_age\n      procedures\n      visits\n      charges\n      allowed\n      revenue\n      adjustments\n    \n\n\nBCBS\n2155\n30.51601\n11073\n9348\n2648855\n1113623.43\n1052272.49\n1426863.60\n\n\nUHC\n1877\n34.26905\n10091\n7492\n2691070\n938135.72\n873231.19\n1538893.10\n\n\nSELF\n2801\n33.87429\n8770\n8153\n1020064\n775974.68\n773146.09\n101145.74\n\n\nAETNA\n1010\n28.61881\n4901\n3991\n1279925\n445925.74\n430341.11\n728428.95\n\n\nCIGNA\n758\n28.15963\n4265\n3651\n986190\n345288.15\n323414.76\n585340.34\n\n\nMEDICARE\n547\n70.09872\n2966\n1340\n787140\n292738.64\n287262.53\n487146.83\n\n\nOTHER\n744\n29.41667\n2804\n2416\n848695\n491911.51\n489813.89\n196970.03\n\n\nSUNFLOWER\n283\n15.55830\n1279\n1018\n476005\n141674.71\n140850.71\n301252.45\n\n\nAMBETTER\n174\n33.93103\n967\n904\n215805\n80836.37\n76822.76\n123926.40\n\n\nTRICARE WEST\n159\n23.72956\n811\n645\n241225\n69920.50\n68832.31\n167099.63\n\n\nHUMANA\n149\n58.39597\n732\n330\n199090\n50943.39\n49748.17\n142202.78\n\n\nMEDICAID\n60\n38.56667\n255\n87\n84010\n26401.45\n26224.00\n50286.00\n\n\nMERITAIN\n45\n24.48889\n206\n163\n52500\n19143.52\n18537.76\n32399.90\n\n\nVA\n32\n54.12500\n140\n60\n41865\n11575.76\n11575.76\n27735.43\n\n\nTRUSTMARK\n20\n27.90000\n86\n75\n20680\n6352.17\n6403.32\n11933.25\n\n\nRAILROAD\n13\n73.61538\n71\n35\n19435\n7233.90\n7164.62\n12310.38\n\n\nTRICARE EAST\n11\n21.36364\n66\n61\n13570\n6160.89\n5924.85\n7409.11\n\n\nMAGELLAN\n21\n35.71429\n62\n58\n14050\n1530.98\n1389.98\n3244.02\n\n\nSEDGWICK\n2\n47.00000\n20\n2\n6825\n1216.83\n1216.83\n283.17\n\n\nLIBERTY\n1\n73.00000\n15\n2\n5050\n1381.57\n1381.57\n118.43\n\n\nWELLCARE\n4\n56.75000\n14\n6\n4350\n1029.80\n1011.22\n2538.78\n\n\nHARTFORD\n2\n52.00000\n10\n2\n3550\n1583.00\n1795.50\n542.00\n\n\n\n\n\n\n\ninsurance_summary |&gt; \n  reframe(\n    ins_prim,\n    pts = patients,\n    vpp = visits / patients,\n    ppp = procedures / patients,\n    rpp = revenue / patients,\n    ppv = procedures / visits,\n    rpv = revenue / visits,\n    rpp = revenue / procedures\n  ) |&gt; \n  arrange(desc(pts)) |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      pts\n      vpp\n      ppp\n      rpp\n      ppv\n      rpv\n    \n\n\nSELF\n2801\n2.910746\n3.131025\n88.15805\n1.075678\n94.82964\n\n\nBCBS\n2155\n4.337819\n5.138283\n95.03048\n1.184531\n112.56659\n\n\nUHC\n1877\n3.991476\n5.376132\n86.53564\n1.346903\n116.55515\n\n\nAETNA\n1010\n3.951485\n4.852475\n87.80680\n1.228013\n107.82789\n\n\nCIGNA\n758\n4.816623\n5.626649\n75.82996\n1.168173\n88.58251\n\n\nOTHER\n744\n3.247312\n3.768817\n174.68398\n1.160596\n202.73754\n\n\nMEDICARE\n547\n2.449726\n5.422303\n96.85183\n2.213433\n214.37502\n\n\nSUNFLOWER\n283\n3.597173\n4.519435\n110.12565\n1.256385\n138.36023\n\n\nAMBETTER\n174\n5.195402\n5.557471\n79.44443\n1.069690\n84.98093\n\n\nTRICARE WEST\n159\n4.056604\n5.100629\n84.87338\n1.257364\n106.71676\n\n\nHUMANA\n149\n2.214765\n4.912752\n67.96198\n2.218182\n150.75203\n\n\nMEDICAID\n60\n1.450000\n4.250000\n102.83922\n2.931034\n301.42529\n\n\nMERITAIN\n45\n3.622222\n4.577778\n89.98913\n1.263804\n113.72859\n\n\nVA\n32\n1.875000\n4.375000\n82.68400\n2.333333\n192.92933\n\n\nMAGELLAN\n21\n2.761905\n2.952381\n22.41903\n1.068966\n23.96517\n\n\nTRUSTMARK\n20\n3.750000\n4.300000\n74.45721\n1.146667\n85.37760\n\n\nRAILROAD\n13\n2.692308\n5.461538\n100.91014\n2.028571\n204.70343\n\n\nTRICARE EAST\n11\n5.545455\n6.000000\n89.77045\n1.081967\n97.12869\n\n\nWELLCARE\n4\n1.500000\n3.500000\n72.23000\n2.333333\n168.53667\n\n\nSEDGWICK\n2\n1.000000\n10.000000\n60.84150\n10.000000\n608.41500\n\n\nHARTFORD\n2\n1.000000\n5.000000\n179.55000\n5.000000\n897.75000\n\n\nLIBERTY\n1\n2.000000\n15.000000\n92.10467\n7.500000\n690.78500"
  },
  {
    "objectID": "posts/claims/claims.html#session-information",
    "href": "posts/claims/claims.html#session-information",
    "title": "Claims Analysis",
    "section": "\n2.1 Session Information",
    "text": "2.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: fuimus(v.0.0.2), northstar(v.0.0.7), rbrvs(v.0.0.1), gtExtras(v.0.5.0), gt(v.0.11.1), here(v.1.0.1), ggiraph(v.0.8.10), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): tidyselect(v.1.2.1), farver(v.2.1.2), fastmap(v.1.2.0), janitor(v.2.2.0), stringfish(v.0.16.0), digest(v.0.6.37), timechange(v.0.3.0), lifecycle(v.1.0.4), survival(v.3.7-0), magrittr(v.2.0.3), compiler(v.4.4.1), sass(v.0.4.9), rlang(v.1.1.4), tools(v.4.4.1), utf8(v.1.2.4), yaml(v.2.3.10), data.table(v.1.16.99), collapse(v.2.0.17), knitr(v.1.48), labeling(v.0.4.3), htmlwidgets(v.1.6.4), bit(v.4.5.0), xml2(v.1.3.6), withr(v.3.0.2), grid(v.4.4.1), fansi(v.1.0.6), colorspace(v.2.1-1), timeplyr(v.0.8.2), paletteer(v.1.6.0), scales(v.1.3.0), MASS(v.7.3-61), cli(v.3.6.3), rmarkdown(v.2.29), crayon(v.1.5.3), ragg(v.1.3.3), generics(v.0.1.3), RcppParallel(v.5.1.9), rstudioapi(v.0.17.1), cheapr(v.0.9.9), tzdb(v.0.4.0), commonmark(v.1.9.2), RApiSerialize(v.0.1.4), pander(v.0.6.5), splines(v.4.4.1), ggthemes(v.5.1.0), parallel(v.4.4.1), base64enc(v.0.1-3), vctrs(v.0.6.5), Matrix(v.1.7-1), jsonlite(v.1.8.9), SparseM(v.1.84-2), hms(v.1.1.3), bit64(v.4.5.2), systemfonts(v.1.1.0), fontawesome(v.0.5.2), glue(v.1.8.0), rematch2(v.2.1.2), stringi(v.1.8.4), gtable(v.0.3.6), munsell(v.0.5.1), pillar(v.1.9.0), rappdirs(v.0.3.3), htmltools(v.0.5.8.1), quantreg(v.5.99), R6(v.2.5.1), textshaping(v.0.4.0), rprojroot(v.2.0.4), vroom(v.1.6.5), evaluate(v.1.0.1), lattice(v.0.22-6), markdown(v.1.13), qs(v.0.27.2), snakecase(v.0.11.1), MatrixModels(v.0.5-3), Rcpp(v.1.0.13), uuid(v.1.2-1), xfun(v.0.48), fs(v.1.6.5), pins(v.1.4.0) and pkgconfig(v.2.0.3)"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html",
    "href": "posts/draw_matrix/draw_matrix.html",
    "title": "Medical Codes as Matrices",
    "section": "",
    "text": "knitr::opts_chunk$set(\n  dev = \"ragg_png\",\n  dpi = 320,\n  out.width = \"100%\",\n  fig.width = 8,\n  fig.asp = 0.818,\n  fig.retina = 2,\n  fig.align = \"center\",\n  fig.show = \"hold\"\n)\noptions(scipen = 999)\n\nlibrary(tidyverse)\nlibrary(rlang)\nlibrary(stringfish)\nlibrary(ggthemes)\nlibrary(paintr)\nlibrary(fuimus)\n# library(procedural)\n# library(northstar)"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#lookup",
    "href": "posts/draw_matrix/draw_matrix.html#lookup",
    "title": "Medical Codes as Matrices",
    "section": "\n1.1 Lookup",
    "text": "1.1 Lookup\n\nlook &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  \n  names(possible) &lt;- constants\n  \n  unname(possible[splitter(sf_toupper(code))])\n}\n\nlook(\"0G9000Z\", pcs)\n\n[1]  1 17 10  1  1  1 34\n\nlook(\"99213\", hcpcs)\n\n[1] 10 10  3  2  4"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#make-matrix",
    "href": "posts/draw_matrix/draw_matrix.html#make-matrix",
    "title": "Medical Codes as Matrices",
    "section": "\n1.2 Make Matrix",
    "text": "1.2 Make Matrix\n\nmedtrix &lt;- \\(code, system) {\n  \n  constants &lt;- system$c\n  possible  &lt;- system$p\n  axis      &lt;- system$a\n  \n  m &lt;- matrix(data     = 0L,\n              nrow     = length(constants),\n              ncol     = length(axis),\n              dimnames = list(constants, axis))\n  \n  x &lt;- look(code, system)\n  \n  for (i in axis) { \n    m[x[i], i] &lt;- 1L \n    }\n  \n  return(m)\n}\n\nICD-10-PCS:\n\nmedtrix(code = \"0G9000Z\", system = pcs)\n\n  1 2 3 4 5 6 7\n0 1 0 0 1 1 1 0\n1 0 0 0 0 0 0 0\n2 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0\n5 0 0 0 0 0 0 0\n6 0 0 0 0 0 0 0\n7 0 0 0 0 0 0 0\n8 0 0 0 0 0 0 0\n9 0 0 1 0 0 0 0\nA 0 0 0 0 0 0 0\nB 0 0 0 0 0 0 0\nC 0 0 0 0 0 0 0\nD 0 0 0 0 0 0 0\nE 0 0 0 0 0 0 0\nF 0 0 0 0 0 0 0\nG 0 1 0 0 0 0 0\nH 0 0 0 0 0 0 0\nJ 0 0 0 0 0 0 0\nK 0 0 0 0 0 0 0\nL 0 0 0 0 0 0 0\nM 0 0 0 0 0 0 0\nN 0 0 0 0 0 0 0\nP 0 0 0 0 0 0 0\nQ 0 0 0 0 0 0 0\nR 0 0 0 0 0 0 0\nS 0 0 0 0 0 0 0\nT 0 0 0 0 0 0 0\nU 0 0 0 0 0 0 0\nV 0 0 0 0 0 0 0\nW 0 0 0 0 0 0 0\nX 0 0 0 0 0 0 0\nY 0 0 0 0 0 0 0\nZ 0 0 0 0 0 0 1\n\n\nHCPCS (CPT):\n\nmedtrix(code = \"99213\", system = hcpcs)\n\n  1 2 3 4 5\n0 0 0 0 0 0\n1 0 0 0 1 0\n2 0 0 1 0 0\n3 0 0 0 0 1\n4 0 0 0 0 0\n5 0 0 0 0 0\n6 0 0 0 0 0\n7 0 0 0 0 0\n8 0 0 0 0 0\n9 1 1 0 0 0\nA 0 0 0 0 0\nB 0 0 0 0 0\nC 0 0 0 0 0\nE 0 0 0 0 0\nF 0 0 0 0 0\nG 0 0 0 0 0\nH 0 0 0 0 0\nJ 0 0 0 0 0\nK 0 0 0 0 0\nL 0 0 0 0 0\nM 0 0 0 0 0\nP 0 0 0 0 0\nQ 0 0 0 0 0\nR 0 0 0 0 0\nS 0 0 0 0 0\nT 0 0 0 0 0\nU 0 0 0 0 0\nV 0 0 0 0 0"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#session-information",
    "href": "posts/draw_matrix/draw_matrix.html#session-information",
    "title": "Medical Codes as Matrices",
    "section": "\n2.1 Session Information",
    "text": "2.1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: fuimus(v.0.0.2), paintr(v.0.0.1), ggthemes(v.5.1.0), stringfish(v.0.16.0), rlang(v.1.1.4), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), farver(v.2.1.2), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/npi/npi_constructor.html",
    "href": "posts/npi/npi_constructor.html",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "",
    "text": "A National Provider Identifier (NPI) is a unique 10-digit identification number assigned to health care providers in the United States through NPPES1 The Centers for Medicare & Medicaid Services (CMS) developed the NPI as a way to standardize the identification of health care providers across the health care industry."
  },
  {
    "objectID": "posts/npi/npi_constructor.html#sec-requirements",
    "href": "posts/npi/npi_constructor.html#sec-requirements",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n1.1 NPI Requirements",
    "text": "1.1 NPI Requirements\n\n\n\n\n\n\n\nwrong_location\nMust consist of 10 numeric digits, with the 10th as the check digit.\n\n\nexplore_off\nHave no embedded intelligence.\n\n\nlightbulb_circle\nBegin with a 1 or 2.2\n\n\n\npattern\nBe generated by a scattering algorithm using all possible numeric combinations.\n\n\nfingerprint\nBe unique, without requiring database access for verification.\n\n\n2 Use of other first digits for the NPI must be coordinated with the use of first digits by the standard health plan identifier, when it is adopted."
  },
  {
    "objectID": "posts/npi/npi_constructor.html#sec-checkdigit",
    "href": "posts/npi/npi_constructor.html#sec-checkdigit",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n1.2 NPI Check Digit",
    "text": "1.2 NPI Check Digit\nThe check digit is calculated using the Luhn formula for computing the modulus 10 double-add-double check digit.3\n3 This algorithm is recognized as an ISO standard (ISO/IEC 7812) and is the specified check digit algorithm to be used for the card issuer identifier on a standard health identification card.When an NPI is used as a card issuer identifier on a standard health identification card, it is prefixed with 80840, in which 80 indicates health applications and 840 indicates the United States. To enable this feature for any NPI, the check digit will always be calculated as if the prefix is present. For a non-prefixed NPI, this is accomplished by adding the constant 24 in step 2 of the calculation.\nCheck Digit Calculation\nThe calculation is as follows:\n\nBeginning with the rightmost digit, double the value of the alternate digits.\nAdd the individual digits of the products from Step 1 to the unaffected digits from the original number.\nSubtract the result of step 2 from the next highest number ending in zero. This is the check digit.\n\n\n\n\n\n\n\nNext Multiple of Ten\n\n\n\nThe next highest number ending in zero is the next multiple of ten.\nSpecifically, for some number n, the next multiple of ten would be n + (10 - (n \\mod 10)):\n\nnext_10 &lt;- \\(n) n + (10 - (n %% 10))\n\nFor example, if n is 23, the next multiple of ten is 30:\n\nnext_10(23)\n\n[1] 30\n\n\nIf n is a multiple of ten, such as 50, the next multiple of 10 is 60:\n\nnext_10(50)\n\n[1] 60\n\n\n\n\n\nExamples\nThe following check digit calculation examples are reproduced from the CMS Standard document, which includes demonstrations for both prefixed and non-prefixed NPIs.\n\n\nPrefix\nNon-Prefix\n\n\n\n\nAssume the prefixed 9-position identifier is:\n\n\n(y &lt;- as.integer(splitter(\"80840123456789\")))\n\n [1] 8 0 8 4 0 1 2 3 4 5 6 7 8 9\n\n\n\nprefix_id &lt;- \\(x) {\n  as.integer(\n    unlist(\n      strsplit(\n        paste0(80840, x), \"\")\n      )\n    )\n}\n\n(x &lt;- prefix_id(123456789))\n\n [1] 8 0 8 4 0 1 2 3 4 5 6 7 8 9\n\nall.equal(x, y)\n\n[1] TRUE\n\n\n\nBeginning on the right, double the alternate digits: 8 0 8 8 0 2 2 6 4 10 6 14 8 18\n\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- c(1, 3, 5, 7, 9, 11, 13)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\nx &lt;- reverse_double(x)\n\nx\n\n [1]  8  0  8  8  0  2  2  6  4 10  6 14  8 18\n\n\n\nSum the individual digits: 8 + 0 + 8 + 8 + 0 + 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8 + 1 + 8 = 67\n\n\nadd_digits &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    )\n}\n\nx &lt;- add_digits(x)\n\nx\n\n[1] 67\n\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nx &lt;- check_digit(x)\n\nx\n\n[1] 3\n\n\n\nAppend the check digit to the identifier: 808401234567893\n\n\nappend_check &lt;- \\(id, check) {\n  cat(\n    paste0(\n      paste0(\n        prefix_id(id), \n        collapse = \"\"), \n      check)\n    )\n}\n\nappend_check(123456789, x)\n\n808401234567893\n\n\n\n\n\nAssume the non-prefixed 9-position identifier is 123456789\n\n\nsplit_id &lt;- \\(x) {\n  as.integer(\n    unlist(\n      strsplit(\n        as.character(x), \"\"\n        )\n      )\n    )\n}\n\nx &lt;- split_id(123456789)\n\nx\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\n\nBeginning on the right, double the alternate digits: 2  2  6  4 10  6 14  8 18\n\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- c(1, 3, 5, 7, 9)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\nx &lt;- reverse_double(x)\n\nx\n\n[1]  2  2  6  4 10  6 14  8 18\n\n\n\nAdd constant 24 to the sum of the individual digits: 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8 + 1 + 8 + 24 = 67\n\n\nsum_plus_24 &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    ) + 24\n}\n\nx &lt;- sum_plus_24(x)\n\nx\n\n[1] 67\n\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nx &lt;- check_digit(x)\n\nx\n\n[1] 3\n\n\n\nAppend the check digit to the identifier: 1234567893\n\n\nappend_check &lt;- \\(id, check) {\n  cat(\n    paste0(\n      id, \n      check\n      )\n    )\n}\n\nappend_check(123456789, x)\n\n1234567893"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#validating-the-input",
    "href": "posts/npi/npi_constructor.html#validating-the-input",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.1 Validating the Input",
    "text": "2.1 Validating the Input\n\nInput string (x) validation order:\n\nAbort if not length(x) == 1\n\nAbort if not 10 characters long\nAbort if any elements of x are not 0-9\n\nAbort if first element is not \"1\" or \"2\"\n\nCoerce to &lt;character&gt; if x is a &lt;numeric&gt; vector\n\n\n\n\n\n\ninput_validation.R\n\n# Abort if `x` is `length(x) != 1`\ncheck_length &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (length(x) != 1) {\n    cli::cli_abort(\n      \"{.arg {arg}} must be of length 1.\", \n      arg = arg, \n      call = call,\n      class = \"check_length\"\n      )\n  }\n}\n\n# If `x` is a `&lt;numeric&gt;` \n# vector, coerce to `&lt;character&gt;`\nnumeric_to_char &lt;- function(x) {\n  if (!rlang::is_character(x)) { \n    as.character(x)\n  } else {\n    x  \n  }\n}\n\n# Abort if any of `x`'s \n# elements are not numbers\ncheck_chars_numeric &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_grepl(x, \"^[[:digit:]]+$\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must contain numbers only.\", \n      arg = arg, \n      call = call,\n      class = \"check_chars_numeric\"\n      )\n  }\n}\n\n# Abort if `x` is not \n# 10 characters long\ncheck_nchars_10 &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (stringfish::sf_nchar(x) != 10L) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must be 10 characters long.\", \n      arg = arg, \n      call = call,\n      class = \"check_nchars_10\"\n      )\n  }\n}\n\n# Must begin with 1 or 2\ncheck_first_char &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_substr(x, 1, 1) %in% c(\"1\", \"2\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must start with a 1 or 2.\", \n      arg = arg, \n      call = call,\n      class = \"check_first_char\"\n      )\n  }\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#cli-messages",
    "href": "posts/npi/npi_constructor.html#cli-messages",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.2 CLI Messages",
    "text": "2.2 CLI Messages\n\n\n\ncli_messages.R\n\nnpi_inform &lt;- function(x, msg) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (\n      c(\"*\" = glue::glue(\"{msg}: {x}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_inform\"\n  )\n}\n\nnpi_alert_invalid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"x\" = \"NPI is invalid\")),\n    body = (c(\"!\" = glue::glue(\"{x} != {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_invalid\"\n  )\n}\n\nnpi_alert_valid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"v\" = \"NPI is valid\")),\n    body = (c(\"&gt;\" = glue::glue(\"{x} == {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_valid\"\n  )\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#constructor-function",
    "href": "posts/npi/npi_constructor.html#constructor-function",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.3 Constructor Function",
    "text": "2.3 Constructor Function\n\n\n\nnpi_constructor.R\n\nnpi_constructor &lt;- function(npi, verbose = TRUE) {\n  \n  npi &lt;- numeric_to_char(npi)\n  check_length(npi)\n  check_chars_numeric(npi)\n  check_nchars_10(npi)\n  check_first_char(npi)\n  \n  p &lt;- \\(...) paste0(...)\n  s &lt;- \\(x) unlist(strsplit(x, \"\"), use.names = FALSE)\n  \n  id &lt;- rev(s(npi)[1:9])\n  \n  if (verbose) {\n    npi_inform(npi, \"Testing NPI candidate\")\n    npi_inform(p(id, collapse = \"\"), \"Reverse 9-digit identifier\")\n  }\n  \n  idx     &lt;- c(1, 3, 5, 7, 9)\n  id      &lt;- as.numeric(id)\n  id[idx] &lt;- as.numeric(id[idx]) * 2\n  id[idx] &lt;- ifelse(id[idx] &gt; 9, id[idx] - 9, id[idx])\n  \n  if (verbose) {\n    npi_inform(p(id, collapse = \" \"), \"Double & reduce alternates\")\n  }\n  \n  id   &lt;- sum(id)\n  cn   &lt;- id + 24\n  ml   &lt;- ceiling(cn / 10) * 10\n  ck   &lt;- ml - cn\n  test &lt;- substr(npi, 1, 9)\n  test &lt;- p(test, ck)\n  \n  if (verbose) {\n    \n    npi_inform(p(p(c(id, 24), collapse = \" + \"), p(\" = \", cn)), \"Add 24 to sum digits\")\n    npi_inform(p(p(\"⌈\", cn, \"⌉\"), p(\" = \", ml)) ,\"Next multiple of 10\")\n    npi_inform(p(p(c(ml, cn), collapse = \" - \"), p(\" = \", ck)), \"Find check digit\")\n    npi_inform(p(test, collapse = \"\"), \"Append check digit\")\n    \n    if (identical(test, npi)) npi_alert_valid(test, npi)\n    if (!identical(test, npi)) npi_alert_invalid(test, npi)\n  }\n  invisible(test)\n}\n\n\nTest Validations\n\nnpi_constructor(\"123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must be 10 characters long.\n\nnpi_constructor(\"O123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must contain numbers only.\n\nnpi_constructor(\"0000000000\")\n\nError in `npi_constructor()`:\n! An `npi` must start with a 1 or 2.\n\n\nTest Verbose Output\n\nnpi_constructor(1234567891)\n\n• Testing NPI candidate: 1234567891\n• Reverse 9-digit identifier: 987654321\n• Double & reduce alternates: 9 8 5 6 1 4 6 2 2\n• Add 24 to sum digits: 43 + 24 = 67\n• Next multiple of 10: ⌈67⌉ = 70\n• Find check digit: 70 - 67 = 3\n• Append check digit: 1234567893\n✖ NPI is invalid\n\n\n\nnpi_constructor(1043477615)\n\n• Testing NPI candidate: 1043477615\n• Reverse 9-digit identifier: 167743401\n• Double & reduce alternates: 2 6 5 7 8 3 8 0 2\n• Add 24 to sum digits: 41 + 24 = 65\n• Next multiple of 10: ⌈65⌉ = 70\n• Find check digit: 70 - 65 = 5\n• Append check digit: 1043477615\n✔ NPI is valid\n\n\n\nnpi_constructor(1000000000)\n\n• Testing NPI candidate: 1000000000\n• Reverse 9-digit identifier: 000000001\n• Double & reduce alternates: 0 0 0 0 0 0 0 0 2\n• Add 24 to sum digits: 2 + 24 = 26\n• Next multiple of 10: ⌈26⌉ = 30\n• Find check digit: 30 - 26 = 4\n• Append check digit: 1000000004\n✖ NPI is invalid\n\n\nTest Verbose Option/Invisible Return\n\nnpi_constructor(1000000000, verbose = FALSE)\n\nnew_npi &lt;- npi_constructor(1000000000, verbose = FALSE)\n\nnew_npi\n\n[1] \"1000000004\""
  },
  {
    "objectID": "posts/npi/npi_constructor.html#minimal-validator",
    "href": "posts/npi/npi_constructor.html#minimal-validator",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.4 Minimal Validator",
    "text": "2.4 Minimal Validator\n\n\n\nis_valid_npi.R\n\nis_valid_npi &lt;- function(npi) {\n  \n  npi &lt;- numeric_to_char(npi)\n  check_length(npi)\n  check_chars_numeric(npi)\n  check_nchars_10(npi)\n  check_first_char(npi)\n  \n  p  &lt;- \\(...) paste0(...)\n  s  &lt;- \\(x) unlist(strsplit(x, \"\"), use.names = FALSE)\n  ix &lt;- c(1, 3, 5, 7, 9)\n  \n  id     &lt;- as.numeric(rev(s(npi)[1:9]))\n  id[ix] &lt;- id[ix] * 2\n  id[ix] &lt;- ifelse(id[ix] &gt; 9, id[ix] - 9, id[ix])\n  \n  id   &lt;- sum(id) + 24\n  ck   &lt;- (ceiling(id / 10) * 10) - id\n  test &lt;- p(substr(npi, 1, 9), ck)\n  \n  identical(test, npi)\n}\n\n\nTest Validator\n\nis_valid_npi(123456789)\n\nError in `is_valid_npi()`:\n! An `npi` must be 10 characters long.\n\nis_valid_npi(\"O123456789\")\n\nError in `is_valid_npi()`:\n! An `npi` must contain numbers only.\n\nis_valid_npi(0000000000) # All leading zeroes will be dropped\n\nError in `is_valid_npi()`:\n! An `npi` must be 10 characters long.\n\nis_valid_npi(3000000000)\n\nError in `is_valid_npi()`:\n! An `npi` must start with a 1 or 2.\n\nis_valid_npi(1043477615)\n\n[1] TRUE\n\nis_valid_npi(1234567891)\n\n[1] FALSE\n\n\n\nrandom_npi_generator &lt;- \\(n) {\n  replicate(\n    n = n, \n    expr = paste0(\n      c(sample(1:2, 1, replace = TRUE), \n        sample(0:9, 9, replace = TRUE)), \n      collapse = \"\"))\n}\n\nrandom_npi_generator(3)\n\n[1] \"1280144315\" \"1907147621\" \"2751374425\"\n\n\n\nn &lt;- 100000\nx &lt;- random_npi_generator(n)\ny &lt;- x[collapse::whichv(purrr::map_lgl(x, is_valid_npi), TRUE)]\n\npaste0((length(y) / n) * 100, \"%\")\n\n[1] \"10.086%\"\n\nbench::mark(\n  purrr::map_lgl(x, is_valid_npi)) |&gt; \n  dplyr::glimpse()\n\nRows: 1\nColumns: 13\n$ expression &lt;bch:expr&gt; &lt;purrr::map_lgl(x, is_valid_npi)&gt;\n$ min        &lt;bch:tm&gt; 21.7s\n$ median     &lt;bch:tm&gt; 21.7s\n$ `itr/sec`  &lt;dbl&gt; 0.04605444\n$ mem_alloc  &lt;bch:byt&gt; 391KB\n$ `gc/sec`   &lt;dbl&gt; 6.493675\n$ n_itr      &lt;int&gt; 1\n$ n_gc       &lt;dbl&gt; 141\n$ total_time &lt;bch:tm&gt; 21.7s\n$ result     &lt;list&gt; &lt;TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ memory     &lt;list&gt; [&lt;Rprofmem[16740 x 3]&gt;]\n$ time       &lt;list&gt; 21.7s\n$ gc         &lt;list&gt; [&lt;tbl_df[1 x 3]&gt;]"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#session-information",
    "href": "posts/npi/npi_constructor.html#session-information",
    "title": "NPIs & Luhn’s Algorithm",
    "section": "\n2.5 Session Information",
    "text": "2.5 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: cli(v.3.6.3), rlang(v.1.1.4), fuimus(v.0.0.2), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), jsonlite(v.1.8.9), bench(v.1.1.3), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), parallel(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), profmem(v.0.6.0), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), stringfish(v.0.16.0), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), RcppParallel(v.5.1.9), pillar(v.1.9.0), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.13), systemfonts(v.1.1.0), collapse(v.2.0.17), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/percent/percent.html",
    "href": "posts/percent/percent.html",
    "title": "100%",
    "section": "",
    "text": "Percent Changes (%ΔX). Let me preface what I have to say about percent changes by saying that–other than being a clue that a percent change or a ratio expressed as a percentage lurks somewhere close–I view the % sign as being equivalent to 1/100. So, for example, 23% is just another name for .23, and 100% is just another name for 1. Indeed, economists are just as likely to say “with probability 1” as they are to say “with a 100% probability.”\nIt turns out that natural logarithms (“ln” or “log”) are the perfect way to think about percent changes. Suppose a variable X has a “before” and an “after” value.\nplatonic_change = \\(old, new) {\n  log(new) - log(old)\n}\n\nearthly_change = \\(old, new) {\n  (new - old) / old\n}\n\nmidpoint_change = \\(old, new) {\n  (new - old) / ((new + old) / 2)\n}\n\nplatonic_change(old = 1, new = 5) * 100\n\n[1] 160.9438\n\nmidpoint_change(old = 1, new = 5) * 100\n\n[1] 133.3333\n\nearthly_change(old = 1, new = 5) * 100\n\n[1] 400\nFormally, that’s because of these limits: lim_{x rightarrow infty} {(x-1) over {(x+1)/2}} = 2\nlim_{x rightarrow infty} {(0-x) over {(x+0)/2}} = -2\nBelow is a table showing the relationship between Platonic percent changes, midpoint percent changes and earthly percent changes. In financial terms, one can think of earthly percentage changes as “continuously compounded” versions of Platonic percent changes:\nex &lt;- dplyr::tibble(\n  platonic = pct$platonic,\n  midpoint = 200 * (exp(platonic / 100) - 1) / (exp(platonic / 100) + 1),\n  earthly = 100 * exp(platonic / 100) - 100,\n  ratio = exp(platonic / 100)\n)\n\nex |&gt; \n  filter(platonic &gt;= 0) |&gt; \n  print(n = 20)\n\n# A tibble: 19 × 4\n   platonic midpoint earthly ratio\n      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1        0     0       0     1   \n 2        5     5.00    5.13  1.05\n 3       10     9.99   10.5   1.11\n 4       15    15.0    16.2   1.16\n 5       20    19.9    22.1   1.22\n 6       25    24.9    28.4   1.28\n 7       30    29.8    35.0   1.35\n 8       40    39.5    49.2   1.49\n 9       50    49.0    64.9   1.65\n10       60    58.3    82.2   1.82\n11       70    67.3   101.    2.01\n12       80    76.0   123.    2.23\n13       90    84.4   146.    2.46\n14      100    92.4   172.    2.72\n15      140   121.    306.    4.06\n16      210   156.    717.    8.17\n17      280   177.   1544.   16.4 \n18      350   188.   3212.   33.1 \n19      420   194.   6569.   66.7\nThere are at least two things to point out in this table:\nLet’s look at negative percent changes as well. Here is the table for how the different concepts of negative percent changes compare:\nex |&gt; \n  filter(platonic &lt;= 0) |&gt; \n  arrange(desc(platonic)) |&gt;\n  print(n = 20)\n\n# A tibble: 19 × 4\n   platonic midpoint earthly  ratio\n      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1        0     0       0    1     \n 2       -5    -5.00   -4.88 0.951 \n 3      -10    -9.99   -9.52 0.905 \n 4      -15   -15.0   -13.9  0.861 \n 5      -20   -19.9   -18.1  0.819 \n 6      -25   -24.9   -22.1  0.779 \n 7      -30   -29.8   -25.9  0.741 \n 8      -40   -39.5   -33.0  0.670 \n 9      -50   -49.0   -39.3  0.607 \n10      -60   -58.3   -45.1  0.549 \n11      -70   -67.3   -50.3  0.497 \n12      -80   -76.0   -55.1  0.449 \n13      -90   -84.4   -59.3  0.407 \n14     -100   -92.4   -63.2  0.368 \n15     -140  -121.    -75.3  0.247 \n16     -210  -156.    -87.8  0.122 \n17     -280  -177.    -93.9  0.0608\n18     -350  -188.    -97.0  0.0302\n19     -420  -194.    -98.5  0.0150\nA key point to make is that with both Platonic (logarithmic) percent changes and midpoint percent changes, equal sized changes of opposite direction cancel each other out. For example, a +50% Platonic percent change, followed by a -50% Platonic percent change, would leave things back where they started. This is true for a +50% midpoint percent change, followed by a -50% midpoint percent change. But, starting from X, a 50% earthly percent change leads to 1.5 X. Following that by a -50% earthly percent change leads to a result of .75 X, which is not at all where things started. This is a very ugly feature of earthly percent changes. That ugliness is one good reason to rise up to the Platonic level, or at least the midpoint level.\nContinuous-Time Growth Rates. There are many wonderful things about Platonic percent changes that I can’t go into without breaking my resolve to keep the equation count down. But one of the most wonderful is that to find a growth rate one only has to divide by the time that has elapsed between Xbefore and Xafter. That is, as long as one is using the Platonic percent change %ΔX=log(Xafter)-log(Xbefore),\n%ΔX / [time elapsed] = growth rate.\nThe growth rate here is technically called a “continuous-time growth rate.” The continuous-time growth rate is not only very useful, it is a thing of great beauty.\nUpdate on How the Different Concepts of Percent Change Relate to Each Other. One of my students asked about how the different percent change concepts relate to each other. For that, I need some equations. And I need “exp” which is the opposite of the natural logarithm “log.” Taking the function exp(X) is the same as taking e, (a number that is famous among mathematicians and equal to 2.718…) to the power X. For the equations below, it is crucial to treat % as another name for 1/100, so that, for example, 5% is the same thing as .05.\nEarthly percent changes are the most familiar. Almost anyone other than an economist who talks about percent changes is talking about earthly percent changes. Most of you learned about earthly percent changes in elementary school. So let me first write down how to get from the earthly percent change to the Platonic and midpoint percent changes. (I won’t try to prove these equations here, just state them.)\nearthly_to_platonic = \\(earthly) log(1 + earthly)\n\nearthly_to_midpoint = \\(earthly) (2 * earthly) / (2 + earthly)\nIf you are trying to figure out the effects of continuously compounded interest, or the effects of some other continuous-time growth rate, you will want to be able go from Platonic percent changes–which come straight from multiplying the growth rate by the amount of elapsed time–to earthly percent changes. For good measure, I will include the formula for midpoint percent changes as well:\nplatonic_to_earthly = \\(platonic) exp(platonic) - 1\n\nplatonic_to_midpoint = \\(platonic) (2 * (exp(platonic) - 1)) / (exp(platonic) + 1)\nI found the function giving the midpoint percent change as a function of the Platonic percent change quite intriguing. For one thing, when I changed signs and put “-Platonic” in the place where you see “Platonic” on the right-hand side of the equation the result equal to -midpoint. When switching the sign of the argument (the inside thing: Platonic) just switches the sign of the overall expression, mathematicians call it an “odd” function (“odd” as in “odd and even” not “odd” as in “strange”). The meaning of this function being odd is that Platonic and midpoint percent changes map into each other the same way for negative changes as for positive changes. (That isn’t true at all for the earthly percent changes.) The other intriguing thing about the function giving the midpoint percent change as a function of the Platonic percent change is how close it is to giving back the same number. To a fourth-order (the squared term and the fourth power term are zero), the approximation for the function is this:\n# midpoint = platonic - (platonic^3 / 12) + (5th power and higher terms)\n\nmidpoint_to_earthly = \\(midpoint) (2 * midpoint) / (2 - midpoint)\n\nmidpoint_to_platonic = \\(midpoint) log(2 + midpoint) - log(2 - midpoint)\n\nmidpoint_to_platonic2 = \\(midpoint) log(1 + (midpoint / 2)) - log(1 - (midpoint / 2))"
  },
  {
    "objectID": "posts/percent/percent.html#session-information",
    "href": "posts/percent/percent.html#session-information",
    "title": "100%",
    "section": "\n1 Session Information",
    "text": "1 Session Information\n\n\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nlocale: LC_COLLATE=English_United States.utf8, LC_CTYPE=English_United States.utf8, LC_MONETARY=English_United States.utf8, LC_NUMERIC=C and LC_TIME=English_United States.utf8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: here(v.1.0.1), fuimus(v.0.0.2), lubridate(v.1.9.3), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.2), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): utf8(v.1.2.4), generics(v.0.1.3), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.1), grid(v.4.4.1), timechange(v.0.3.0), fastmap(v.1.2.0), rprojroot(v.2.0.4), jsonlite(v.1.8.9), pander(v.0.6.5), fansi(v.1.0.6), scales(v.1.3.0), textshaping(v.0.4.0), cli(v.3.6.3), rlang(v.1.1.4), crayon(v.1.5.3), bit64(v.4.5.2), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.1), parallel(v.4.4.1), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.5.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), bit(v.4.5.0), vroom(v.1.6.5), ragg(v.1.3.3), pkgconfig(v.2.0.3), pillar(v.1.9.0), gtable(v.0.3.6), Rcpp(v.1.0.13), glue(v.1.8.0), systemfonts(v.1.1.0), xfun(v.0.48), tidyselect(v.1.2.1), rstudioapi(v.0.17.1), knitr(v.1.48), htmltools(v.0.5.8.1), rmarkdown(v.2.29) and compiler(v.4.4.1)"
  },
  {
    "objectID": "posts/rules/claims_rules.html",
    "href": "posts/rules/claims_rules.html",
    "title": "Building Claims Rules",
    "section": "",
    "text": "To build a composable, portable, and extensible healthcare claims rules engine. The engine will be used to evaluate claims data for compliance with a set of rules. The rules will be defined in a structured format and will be evaluated using R code, but should be general enough to be easily translated to another language. The goal is to create a flexible and extensible system that can be used to evaluate claims data in a variety of scenarios, pre- or post.\n\n\nqueryBuilder\nhealthdb"
  },
  {
    "objectID": "posts/rules/claims_rules.html#similar-work",
    "href": "posts/rules/claims_rules.html#similar-work",
    "title": "Building Claims Rules",
    "section": "",
    "text": "queryBuilder\nhealthdb"
  },
  {
    "objectID": "posts/rules/claims_rules.html#descriptors",
    "href": "posts/rules/claims_rules.html#descriptors",
    "title": "Building Claims Rules",
    "section": "\n8.1 Descriptors",
    "text": "8.1 Descriptors\n\n\n\n\n\n\n\n\n\n\n\nnumber\nidentifier\ncategory\n\n\n\n711\nOBGYN\n\n\nNA\n\n\nAdd reporting codes for prenatal visits for tracking purposes. 0500F: Initial prenatal care visit or 0502F: Subsequent prenatal care visit.\n\n\n\n\n517\nLABS\n\n\n80074 Acute hepatitis panel\n\n\n80074 Acute hepatitis panel may be reported rather than individual CPTs. This panel must include the following: Hepatitis A antibody (HAAb), IgM antibody (86709) Hepatitis B core antibody (HBcAb), IgM antibody (86705) Hepatitis B surface antigen (HBsAg) (87340) Hepatitis C antibody (86803). Review payer guidelines.\n\n\n\n\n933\nVAX\n\n\nNA\n\n\nVaccine no longer approved for use in the United States. See 91318 for 3 mcg Pfizer vaccine.\n\n\n\n\n1050\nMCD:GA\n\n\nSend out Lead tests\n\n\nLead tests sent to the Georgia Public Health Laboratory should bill 83655 with modifiers EP, 90 on the same claim as 36415/36416 to obtain additional reimbursement. If performed in-house or by a different outside lab, only bill 36415/36416 with Z13.88 assigned.\n\n\n\n\n1088\nMCD:SC\n\n\nNA\n\n\nFamily Planning - The FP modifier and dx codes must be used on all applicable CPTs when visit was for family planning services (office visit, preventative visits, labs, procedures, meds, etc). Assign family planning dx only to appropriate codes.\n\n\n\n\n1007\nUNVSL\n\n\nProlonged Inpt/Outpt E/M Medicare\n\n\nReport G0316 to Medicare instead of 99418. List separately in addition to CPT codes 99223, 99233, and 99236 for each additional 15 minutes. Do NOT report G0316 for less than 15 minutes.\n\n\n\n\n807\nUNVSL\n\n\n80048 is included in 80069\n\n\nSubscriber SSN is required when submitting Workers Compensation claim electronically. If SSN is not available, use 999-99-9999 to bypass edit.\n\n\n\n\n209\nOPHTH\n\n\nMedicare Routine Exam\n\n\nMedicare does not cover routine eye exams.\n\n\n\n\n844\nMCD:GA\n\n\nZ34.* with O*\n\n\nPeach State requires POS 99 for 96110 and EP modifier\n\n\n\n\n1019\nFQHC\n\n\nNA\n\n\nOnly 1 New patient visit is allowed. Use G0466 to bill for the medical visit and G0470 to bill for the mental health visit."
  },
  {
    "objectID": "posts/rules/claims_rules.html#definitions",
    "href": "posts/rules/claims_rules.html#definitions",
    "title": "Building Claims Rules",
    "section": "\n8.2 Definitions",
    "text": "8.2 Definitions\n\n\n\n\n\n\n\n      definition\n    \n\n\n1045\n@primary_class is one of [MEDICAID CMO, MEDICAID] %AND% @hcpcs is one of [99401, 99402] %AND% @icd is one of [Z30.011, Z30.013, Z30.014, Z30.015, Z30.016, Z30.017, Z30.018, Z30.02, Z30.09, Z30.2, Z30.40, Z30.41, Z30.42, Z30.430, Z30.431, Z30.432, Z30.433, Z30.44, Z30.45, Z30.46, Z30.49, Z30.8, Z30.9, Z98.51, Z98.52] %AND% @mod_1 is not [U9]\n\n\n121\n@icd has all [G56.21, G56.22]\n\n\n424\n@primary_class is one of [MEDICAID, MEDICAID CMO] %AND% @pos is one of [21, 22, 23] %AND% @hcpcs is [T1015]\n\n\n825\n@hcpcs is [45378] %AND% @hcpcs is one of [4530*, 4531*, 4532*, 4533*, 4534*, 4535*, 4537*, 4538*]\n\n\n600\n@primary_class is [MEDICARE] %AND% @hcpcs is [90750]\n\n\n911\n@hcpcs is one of [A4636, A4637, A9270, A9900, E0130, E0135, E0140, E0141, E0143, E0144, E0147, E0148, E0149, E0154, E0155, E0156, E0157, E0158, E0159] %AND% &lt;&lt;@mod_1 is not [KX, EY, GA, GY, GZ] %AND% @mod_2 is not [KX, EY, GA, GY, GZ] %AND% @mod_3 is not [KX, EY, GA, GY, GZ] %AND% @mod_4 is not [KX, EY, GA, GY, GZ]&gt;&gt;\n\n\n1036\n@primary_class is Medicaid %AND% @location is Telehealth OR is one of [02, 10] %AND% @mod_1 is not [93, 95]\n\n\n635\n@dos after [04/30/2021] %AND% @primary_name is [WELLCARE OF GEORGIA, INC]||@secondary_name is [WELLCARE OF GEORGIA, INC]\n\n\n860\n@icd is one of [I25.82, I25.83, I25.84] %AND% @icd is not [I25.1*, I25.7*, I25.81*]\n\n\n171\n@age is less than [19 YRS] %AND% @hcpcs is one of [9938*, 9939*] %AND% @hcpcs is one of [82247, 88720] %AND% @icd is not [Z13.228]"
  },
  {
    "objectID": "posts/rules/claims_rules.html#step-components",
    "href": "posts/rules/claims_rules.html#step-components",
    "title": "Building Claims Rules",
    "section": "\n8.3 Step Components",
    "text": "8.3 Step Components\nTwo types of a step: qualifier and terminator\nA qualifier is basically a long if (x & y & (a | b | c)) statement.\nA terminator is the final step, analogous to a stopifnot() statement that checks the data.\n\nnumber:\norder:\nidentifier:\nvariable: Recode to standardize names\nclass: Variable Data Class\ngroup: Variable Grouping\naction: Translate to condition\nvalue: Coerce to correct data type, deal with wildcards\ncondition: Predicate function that evaluates to TRUE or FALSE\n\nVariables\n\ndos: 81\npos: 142\nub04: 106\nage: 158\nsex: 3\nreferring: 14\nrendering: 20\nicd: 251\nhcpcs: 1071\nmod_1, mod_2, mod_3, mod_4: 472\nunit: 13\nndc: 23\nrev_code: 19\nprimary_class: 371\nprimary_name: 132\nprimary_auth: 3\nsecondary_class: 6\nsecondary_name: 4"
  }
]