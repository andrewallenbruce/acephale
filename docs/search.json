[
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html",
    "href": "posts/taxonomy/provider_taxonomy.html",
    "title": "Taxonomy Codes",
    "section": "",
    "text": "Purpose: Categorize health care providers by their type, classification, and specialization.\n\nMaintenance: National Uniform Claim Committee (NUCC). Updated twice a year, in January and July.\n\nApplication: Used in various healthcare processes, including:\n\nElectronic healthcare transactions\nNPI enumeration\nMedicare provider enrollment\nInsurance credentialing\nClaims processing\nDetermining network adequacy"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#key-points",
    "href": "posts/taxonomy/provider_taxonomy.html#key-points",
    "title": "Taxonomy Codes",
    "section": "",
    "text": "Purpose: Categorize health care providers by their type, classification, and specialization.\n\nMaintenance: National Uniform Claim Committee (NUCC). Updated twice a year, in January and July.\n\nApplication: Used in various healthcare processes, including:\n\nElectronic healthcare transactions\nNPI enumeration\nMedicare provider enrollment\nInsurance credentialing\nClaims processing\nDetermining network adequacy"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#overview",
    "href": "posts/taxonomy/provider_taxonomy.html#overview",
    "title": "Taxonomy Codes",
    "section": "Overview",
    "text": "Overview\nThe Health Care Provider Taxonomy Code Set is an external, non-medical data code set designed for use in an electronic environment, specifically within the ASC X12N Health Care transactions, including those mandated under HIPAA.\nA taxonomy code is a unique alphanumeric code, ten characters in length, that describes a health care service provider’s type, classification, and the area of specialization.\nTaxonomy codes are selected by the provider at the time of NPI registration. When providers apply for NPIs, the National Plan and Provider Enumeration System (NPPES) does not verify the accuracy of the selected taxonomy codes. It only validates that the codes exist within the current version of the code set.\nIt is important for healthcare providers to select the most appropriate taxonomy code(s) as it can affect various aspects of their practice, including billing and claims processing. Selection of a taxonomy code does not replace any credentialing or validation process that the provider requesting the code should complete."
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#taxonomy-hierarchy",
    "href": "posts/taxonomy/provider_taxonomy.html#taxonomy-hierarchy",
    "title": "Taxonomy Codes",
    "section": "Taxonomy Hierarchy",
    "text": "Taxonomy Hierarchy\nThe code set is structured into 3 distinct levels:\n\nProvider Grouping\nClassification\nArea of Specialization\n\n\n\n\nInteractive Provider Taxonomy Hierarchy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLevel I: Provider Grouping\n\n\n\nA major grouping of service(s) or occupation(s) of health care providers.\nExamples:\n\nAllopathic & Osteopathic Physicians\nDental Providers\nHospitals\n\n\n\n\n\n\n\n\n\nLevel II: Classification\n\n\n\nA more specific service or occupation related to the Provider Grouping.\nFor example, the Classification for Allopathic & Osteopathic Physicians is based upon the General Specialty Certificates, as issued by the appropriate national boards.\nThe following boards, however, will have their general certificates appear as Level III Areas strictly due to display limitations of the code set for Boards that have multiple general certificates:\n\nMedical Genetics\nPreventive Medicine\nPsychiatry & Neurology\nRadiology\nSurgery\nOtolaryngology\nPathology\n\n\n\n\n\n\n\n\n\nLevel III: Area of Specialization\n\n\n\nA more specialized area of the Classification in which a provider chooses to practice or make services available.\nFor example, the Area of Specialization for provider grouping Allopathic & Osteopathic Physicians is based upon the Subspecialty Certificates as issued by the appropriate national boards."
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#medicare-crosswalk",
    "href": "posts/taxonomy/provider_taxonomy.html#medicare-crosswalk",
    "title": "Taxonomy Codes",
    "section": "Medicare Crosswalk",
    "text": "Medicare Crosswalk\n\nProviders and suppliers with the proper taxonomy code eligible for Medicare programs.\n\nThe Medicare Provider and Supplier Taxonomy Crosswalk dataset lists the providers and suppliers eligible to enroll in Medicare programs with the proper healthcare provider taxonomy code. This data includes the Medicare specialty codes, if available, provider/supplier type description, taxonomy code, and the taxonomy description.\nFootnotes\n\n\n\n\n\n\n\n      Footnote\n    \n\n\n1\nMedicare no longer enrolls this provider type.\n\n\n2\nThis is an arrangement whereby immunization services are rendered by health care providers who are under contract to the entity/individual who is enrolled in Medicare as a Mass Immunization Roster Biller. The Healthcare Provider Taxonomy Code(s) would be that (those) of the health care provider(s) who render the immunization services.\n\n\n3\nMedicare carriers use Specialty Code 87 for Pharmacies when processing prescription drugs that are paid through the Medicare Physician Fee Schedule. However, the description for Specialty Code 87 remains All Other Suppliers.\n\n\n4\nBecause the Medicare Provider Type Physician/Undefined Physician Type applies to physicians,Unknown Supplier/Provider Specialty applies to other than physicians. Because Medicare does not enroll every non-physician supplier/provider type in the Healthcare Provider Taxonomy Code Set, we cannot arbitrarily link this Medicare Provider Type to all remaining supplier/provider types in the Healthcare Provider Taxonomy Code Set. In truth, this Medicare Provider Type would link to every Healthcare Provider Taxonomy Code (except those that describe physicians) that is listed in this document. We do not list them here because doing so would greatly increase the size of this document.\n\n\n5\nBecause the Medicare Provider Type indicates that the provider/supplier is a Physician, we have linked this to the most generic Allopathic & Osteopathic Physicians classification. It could technically link to every Allopathic & Osteopathic Physician.\n\n\n6\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n7\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n8\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n9\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n10\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n11\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n12\nThere is no linkage to specific Healthcare Provider Taxonomy Codes because an Indian Health Service facility can be various provider types/classifications.\n\n\n13\nMedicare specialty code designation is for Part B DMEPOS purposes.\n\n\n14\nDoes not meet the definition of health care provider at 45 CFR 160.103 is not eligible for an NPI.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnote1\n      note2\n      \n        Medicare Specialty\n      \n      \n        Provider Taxonomy\n      \n    \n\nCode\n      Provider Type/Description\n      Code\n      Grouping\n      Classification\n      Specialization\n    \n\n\n\n—\n—\n01\nPhysician/General Practice\n208D00000X\nAllopathic & Osteopathic Physicians\nGeneral Practice\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n208600000X\nAllopathic & Osteopathic Physicians\nSurgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n2086H0002X\nAllopathic & Osteopathic Physicians\nSurgery\nHospice and Palliative Medicine\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0120X\nAllopathic & Osteopathic Physicians\nSurgery\nPediatric Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0122X\nAllopathic & Osteopathic Physicians\nSurgery\nPlastic and Reconstructive Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0105X\nAllopathic & Osteopathic Physicians\nSurgery\nSurgery of the Hand\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0102X\nAllopathic & Osteopathic Physicians\nSurgery\nSurgical Critical Care\n\n\n—\n—\n02\nPhysician/General Surgery\n2086X0206X\nAllopathic & Osteopathic Physicians\nSurgery\nSurgical Oncology\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0127X\nAllopathic & Osteopathic Physicians\nSurgery\nTrauma Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n2086S0129X\nAllopathic & Osteopathic Physicians\nSurgery\nVascular Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n208G00000X\nAllopathic & Osteopathic Physicians\nThoracic Surgery (Cardiothoracic Vascular Surgery)\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n204F00000X\nAllopathic & Osteopathic Physicians\nTransplant Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n208C00000X\nAllopathic & Osteopathic Physicians\nColon & Rectal Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n207T00000X\nAllopathic & Osteopathic Physicians\nNeurological Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n204E00000X\nAllopathic & Osteopathic Physicians\nOral & Maxillofacial Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n207X00000X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n207XS0114X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nAdult Reconstructive Orthopedic Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n207XX0004X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nFoot and Ankle Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n207XS0106X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nHand Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n207XS0117X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nOrthopedic Surgery of the Spine\n\n\n—\n—\n02\nPhysician/General Surgery\n207XX0801X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nOrthopedic Trauma\n\n\n—\n—\n02\nPhysician/General Surgery\n207XP3100X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nPediatric Orthopedic Surgery\n\n\n—\n—\n02\nPhysician/General Surgery\n207XX0005X\nAllopathic & Osteopathic Physicians\nOrthopedic Surgery\nSports Medicine\n\n\n—\n—\n02\nPhysician/General Surgery\n208200000X\nAllopathic & Osteopathic Physicians\nPlastic Surgery\n—\n\n\n—\n—\n02\nPhysician/General Surgery\n2082S0099X\nAllopathic & Osteopathic Physicians\nPlastic Surgery\nPlastic Surgery Within the Head & Neck\n\n\n—\n—\n02\nPhysician/General Surgery\n2082S0105X\nAllopathic & Osteopathic Physicians\nPlastic Surgery\nSurgery of the Hand\n\n\n—\n—\n03\nPhysician/Allergy/ Immunology\n207K00000X \nAllopathic & Osteopathic Physicians\nAllergy and Immunology\n—\n\n\n—\n—\n03\nPhysician/Allergy/ Immunology\n207KA0200X\nAllopathic & Osteopathic Physicians\nAllergy and Immunology\nAllergy\n\n\n—\n—\n03\nPhysician/Allergy/ Immunology\n207KI0005X\nAllopathic & Osteopathic Physicians\nAllergy and Immunology\nClinical & Laboratory Immunology\n\n\n—\n—\n04\nPhysician/Otolaryngology\n207Y00000X \nAllopathic & Osteopathic Physicians\n Otolaryngology \n—"
  },
  {
    "objectID": "posts/taxonomy/provider_taxonomy.html#sources",
    "href": "posts/taxonomy/provider_taxonomy.html#sources",
    "title": "Taxonomy Codes",
    "section": "Sources",
    "text": "Sources\n\nHealth Care Provider Taxonomy Code Set v24.0 (PDF)\ntaxonomy.NUCC.org\nCMS.gov\nASAM.org\n\n\n\nsessioninfo::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/Los_Angeles\n date     2024-08-25\n pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package         * version     date (UTC) lib source\n   backports         1.5.0       2024-05-23 [1] CRAN (R 4.3.2)\n   cachem            1.1.0       2024-05-16 [1] CRAN (R 4.3.3)\n   checkmate         2.3.2       2024-07-29 [1] CRAN (R 4.3.2)\n   cli               3.6.3.9000  2024-06-25 [1] Github (r-lib/cli@d9febb5)\n   collapsibleTree * 0.1.8       2023-11-13 [1] CRAN (R 4.3.3)\n   colorspace        2.1-1       2024-07-26 [1] CRAN (R 4.3.2)\n   curl              5.2.1       2024-03-01 [1] CRAN (R 4.3.2)\n   data.tree         1.1.0       2023-11-12 [1] CRAN (R 4.3.2)\n   digest            0.6.37      2024-08-19 [1] CRAN (R 4.3.2)\n   downlit         * 0.4.4       2024-06-10 [1] CRAN (R 4.3.2)\n   dplyr           * 1.1.4       2023-11-17 [1] CRAN (R 4.3.2)\n   ellipsis          0.3.2       2021-04-29 [1] CRAN (R 4.3.2)\n   evaluate          0.24.0      2024-06-10 [1] CRAN (R 4.3.2)\n   fansi             1.0.6       2023-12-08 [1] CRAN (R 4.3.2)\n   fastmap           1.2.0       2024-05-15 [1] CRAN (R 4.3.2)\n   forcats         * 1.0.0       2023-01-29 [1] CRAN (R 4.3.2)\n   fs                1.6.4       2024-04-25 [1] CRAN (R 4.3.3)\n   fuimus            0.0.2       2024-08-23 [1] Github (andrewallenbruce/fuimus@c029c8b)\n   generics          0.1.3       2022-07-05 [1] CRAN (R 4.3.2)\n   ggplot2         * 3.5.1       2024-04-23 [1] CRAN (R 4.3.2)\n   glue              1.7.0       2024-01-09 [1] CRAN (R 4.3.2)\n   gt                0.11.0      2024-07-09 [1] CRAN (R 4.3.3)\n   gtable            0.3.5       2024-04-22 [1] CRAN (R 4.3.3)\n   hms               1.1.3       2023-03-21 [1] CRAN (R 4.3.2)\n   htmltools       * 0.5.8.1     2024-04-04 [1] CRAN (R 4.3.2)\n   htmlwidgets       1.6.4       2023-12-06 [1] CRAN (R 4.3.2)\n   httr2             1.0.3       2024-08-22 [1] CRAN (R 4.3.2)\n   janitor           2.2.0       2023-02-02 [1] CRAN (R 4.3.2)\n   jsonlite          1.8.8       2023-12-04 [1] CRAN (R 4.3.2)\n   knitr             1.48        2024-07-07 [1] CRAN (R 4.3.3)\n   lifecycle         1.0.4       2023-11-07 [1] CRAN (R 4.3.2)\n   lubridate       * 1.9.3       2023-09-27 [1] CRAN (R 4.3.2)\n   magrittr          2.0.3       2022-03-30 [1] CRAN (R 4.3.2)\n   memoise           2.0.1       2021-11-26 [1] CRAN (R 4.3.2)\n   munsell           0.5.1       2024-04-01 [1] CRAN (R 4.3.3)\n   pillar            1.9.0       2023-03-22 [1] CRAN (R 4.3.2)\n   pins              1.3.0       2023-11-09 [1] CRAN (R 4.3.2)\n   pkgconfig         2.0.3       2019-09-22 [1] CRAN (R 4.3.2)\n   provider        * 0.0.1       2024-08-04 [1] Github (andrewallenbruce/provider@8ecaa9c)\n   purrr           * 1.0.2       2023-08-10 [1] CRAN (R 4.3.2)\n   qs                0.26.3      2024-05-16 [1] CRAN (R 4.3.3)\n   R6                2.5.1       2021-08-19 [1] CRAN (R 4.3.2)\n   ragg              1.3.2       2024-05-15 [1] CRAN (R 4.3.2)\n   RApiSerialize     0.1.3       2024-05-14 [1] CRAN (R 4.3.3)\n   rappdirs          0.3.3       2021-01-31 [1] CRAN (R 4.3.2)\n   Rcpp              1.0.13      2024-07-17 [1] CRAN (R 4.3.2)\n D RcppParallel      5.1.9       2024-08-19 [1] CRAN (R 4.3.2)\n   readr           * 2.1.5       2024-01-10 [1] CRAN (R 4.3.2)\n   rlang             1.1.4       2024-06-04 [1] CRAN (R 4.3.3)\n   rmarkdown         2.28        2024-08-17 [1] CRAN (R 4.3.3)\n   rstudioapi        0.16.0.9000 2024-06-04 [1] Github (rstudio/rstudioapi@a985492)\n   sass              0.4.9       2024-03-15 [1] CRAN (R 4.3.2)\n   scales            1.3.0       2023-11-28 [1] CRAN (R 4.3.2)\n   sessioninfo       1.2.2       2021-12-06 [1] CRAN (R 4.3.2)\n   snakecase         0.11.1      2023-08-27 [1] CRAN (R 4.3.2)\n   strex             2.0.0       2024-01-31 [1] CRAN (R 4.3.2)\n   stringfish        0.16.0      2023-11-28 [1] CRAN (R 4.3.2)\n   stringi           1.8.4       2024-05-06 [1] CRAN (R 4.3.3)\n   stringr         * 1.5.1       2023-11-14 [1] CRAN (R 4.3.2)\n   systemfonts       1.1.0       2024-05-15 [1] CRAN (R 4.3.2)\n   textshaping       0.4.0       2024-05-24 [1] CRAN (R 4.3.2)\n   tibble          * 3.2.1       2023-03-20 [1] CRAN (R 4.3.2)\n   tidyr           * 1.3.1       2024-01-24 [1] CRAN (R 4.3.2)\n   tidyselect        1.2.1       2024-03-11 [1] CRAN (R 4.3.3)\n   tidyverse       * 2.0.0       2023-02-22 [1] CRAN (R 4.3.2)\n   timechange        0.3.0       2024-01-18 [1] CRAN (R 4.3.2)\n   tzdb              0.4.0       2023-05-12 [1] CRAN (R 4.3.2)\n   utf8              1.2.4       2023-10-22 [1] CRAN (R 4.3.2)\n   vctrs             0.6.5       2023-12-01 [1] CRAN (R 4.3.2)\n   withr             3.0.1       2024-07-31 [1] CRAN (R 4.3.2)\n   xfun              0.47        2024-08-17 [1] CRAN (R 4.3.3)\n   xml2              1.3.6       2023-12-04 [1] CRAN (R 4.3.2)\n   yaml              2.3.10      2024-07-26 [1] CRAN (R 4.3.2)\n   zeallot           0.1.0       2018-01-28 [1] CRAN (R 4.3.2)\n\n [1] C:/Program Files/R/R-4.3.2/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/npi/npi_constructor.html",
    "href": "posts/npi/npi_constructor.html",
    "title": "Building an NPI Constructor",
    "section": "",
    "text": "A National Provider Identifier (NPI) is a unique 10-digit identification number assigned to health care providers in the United States through NPPES1 The Centers for Medicare & Medicaid Services (CMS) developed the NPI as a way to standardize the identification of health care providers across the health care industry."
  },
  {
    "objectID": "posts/npi/npi_constructor.html#sec-requirements",
    "href": "posts/npi/npi_constructor.html#sec-requirements",
    "title": "Building an NPI Constructor",
    "section": "NPI Requirements",
    "text": "NPI Requirements\n\nMust consist of 10 numeric digits, with the 10th as the check digit.\nHave no embedded intelligence.\nBegin with a 1 or 2.2\nBe generated by a scattering algorithm using all possible numeric combinations.\nBe unique, without requiring database access for verification.\n2 Use of other first digits for the NPI must be coordinated with the use of first digits by the standard health plan identifier, when it is adopted."
  },
  {
    "objectID": "posts/npi/npi_constructor.html#sec-checkdigit",
    "href": "posts/npi/npi_constructor.html#sec-checkdigit",
    "title": "Building an NPI Constructor",
    "section": "NPI Check Digit",
    "text": "NPI Check Digit\nThe check digit is calculated using the Luhn formula for computing the modulus 10 double-add-double check digit.3\n3 This algorithm is recognized as an ISO standard (ISO/IEC 7812) and is the specified check digit algorithm to be used for the card issuer identifier on a standard health identification card.When an NPI is used as a card issuer identifier on a standard health identification card, it is prefixed with 80840, in which 80 indicates health applications and 840 indicates the United States. To enable this feature for any NPI, the check digit will always be calculated as if the prefix is present. For a non-prefixed NPI, this is accomplished by adding the constant 24 in step 2 of the calculation.\nCheck Digit Calculation\nThe calculation is as follows:\n\nBeginning with the rightmost digit, double the value of the alternate digits.\nAdd the individual digits of the products from Step 1 to the unaffected digits from the original number.\nSubtract the result of step 2 from the next highest number ending in zero. This is the check digit.\n\n\n\n\n\n\n\nNext Multiple of Ten\n\n\n\nThe next highest number ending in zero is the next multiple of ten.\nSpecifically, for some number n, the next multiple of ten would be n + (10 - (n \\mod 10)):\n\nnext_10 &lt;- \\(n) n + (10 - (n %% 10))\n\nFor example, if n is 23, the next multiple of ten is 30:\n\nnext_10(23)\n\n[1] 30\n\n\nIf n is a multiple of ten, such as 50, the next multiple of 10 is 60:\n\nnext_10(50)\n\n[1] 60\n\n\n\n\n\nExamples\nThe following check digit calculation examples are reproduced from the CMS Standard document, which includes demonstrations for both prefixed and non-prefixed NPIs.\n\n\nPrefix\nNon-Prefix\n\n\n\n\nAssume the prefixed 9-position identifier is 80840123456789\n\n\nprefix_id &lt;- \\(x, y) {\n  as.integer(\n    unlist(\n      strsplit(\n        paste0(x, y), \"\")\n      )\n    )\n}\n\nx &lt;- prefix_id(80840, 123456789)\n\nx\n\n [1] 8 0 8 4 0 1 2 3 4 5 6 7 8 9\n\n\n\nBeginning on the right, double the alternate digits: 8 0 8 8 0 2 2 6 4 10 6 14 8 18\n\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- seq(1, length(x), 2)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\nx &lt;- reverse_double(x)\n\nx\n\n [1]  8  0  8  8  0  2  2  6  4 10  6 14  8 18\n\n\n\nSum the individual digits: 8 + 0 + 8 + 8 + 0 + 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8 + 1 + 8 = 67\n\n\nadd_digits &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    )\n}\n\nx &lt;- add_digits(x)\n\nx\n\n[1] 67\n\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nx &lt;- check_digit(x)\n\nx\n\n[1] 3\n\n\n\nAppend the check digit to the identifier: 808401234567893\n\n\nappend_check &lt;- \\(id, chk) {\n  paste0(id, chk)\n}\n\nappend_check(80840123456789, x)\n\n[1] \"808401234567893\"\n\n\n\n\n\nAssume the non-prefixed 9-position identifier is 123456789\n\n\nnon_prefix &lt;- \\(x) {\n  as.integer(\n    unlist(\n      strsplit(\n        as.character(x), \"\"\n        )\n      )\n    )\n}\n\nx &lt;- non_prefix(123456789)\n\nx\n\n[1] 1 2 3 4 5 6 7 8 9\n\n\n\nBeginning on the right, double the alternate digits: 2  2  6  4 10  6 14  8 18\n\n\nreverse_double &lt;- \\(x) {\n  \n  x &lt;- rev(x)\n  \n  idx &lt;- seq(1, length(x), 2)\n  \n  x[idx] &lt;- x[idx] * 2\n  \n  rev(x)\n}\n\nx &lt;- reverse_double(x)\n\nx\n\n[1]  2  2  6  4 10  6 14  8 18\n\n\n\nAdd constant 24 to the sum of the individual digits: 2 + 2 + 6 + 4 + 1 + 0 + 6 + 1 + 4 + 8 + 1 + 8 + 24 = 67\n\n\nsum_plus_24 &lt;- \\(x) {\n  sum(\n    as.integer(\n      unlist(\n        strsplit(\n          as.character(x), \"\")\n        )\n      )\n    ) + 24\n}\n\nx &lt;- sum_plus_24(x)\n\nx\n\n[1] 67\n\n\n\nSubtract the sum from the next multiple of 10. This is the check digit: 70 – 67 = 3\n\n\ncheck_digit &lt;- \\(x) {\n  ceiling(x / 10) * 10 - x\n}\n\nx &lt;- check_digit(x)\n\nx\n\n[1] 3\n\n\n\nAppend the check digit to the identifier: 1234567893\n\n\nappend_check &lt;- \\(id, chk) {\n  paste0(id, chk)\n}\n\nappend_check(123456789, x)\n\n[1] \"1234567893\""
  },
  {
    "objectID": "posts/npi/npi_constructor.html#validating-the-input",
    "href": "posts/npi/npi_constructor.html#validating-the-input",
    "title": "Building an NPI Constructor",
    "section": "Validating the Input",
    "text": "Validating the Input\n\nInput string (x) validation order:\n\nAbort if not length(x) == 1\n\nAbort if not 10 characters long\nAbort if any elements of x are not 0-9\n\nAbort if first element is not \"1\" or \"2\"\n\nCoerce to &lt;character&gt; if x is a &lt;numeric&gt; vector\n\n\n\n\n\n\ninput_validation.R\n\n# Abort if `x` is `length(x) != 1`\ncheck_length &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (length(x) != 1) {\n    cli::cli_abort(\n      \"{.arg {arg}} must be of length 1.\", \n      arg = arg, \n      call = call,\n      class = \"check_length\"\n      )\n  }\n}\n\n# If `x` is a `&lt;numeric&gt;` \n# vector, coerce to `&lt;character&gt;`\nnumeric_to_char &lt;- function(x) {\n  if (!rlang::is_character(x)) { \n    as.character(x)\n  } else {\n    x  \n  }\n}\n\n# Abort if any of `x`'s \n# elements are not numbers\ncheck_chars_numeric &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_grepl(x, \"^[[:digit:]]+$\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must contain numbers only.\", \n      arg = arg, \n      call = call,\n      class = \"check_chars_numeric\"\n      )\n  }\n}\n\n# Abort if `x` is not \n# 10 characters long\ncheck_nchars_10 &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (stringfish::sf_nchar(x) != 10L) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must be 10 characters long.\", \n      arg = arg, \n      call = call,\n      class = \"check_nchars_10\"\n      )\n  }\n}\n\n# Must begin with 1 or 2\ncheck_first_char &lt;- function(x) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  if (!stringfish::sf_substr(x, 1, 1) %in% c(\"1\", \"2\")) {\n    cli::cli_abort(\n      \"An {.arg {arg}} must start with a 1 or 2.\", \n      arg = arg, \n      call = call,\n      class = \"check_first_char\"\n      )\n  }\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#cli-messages",
    "href": "posts/npi/npi_constructor.html#cli-messages",
    "title": "Building an NPI Constructor",
    "section": "CLI Messages",
    "text": "CLI Messages\n\n\n\ncli_messages.R\n\nnpi_inform &lt;- function(x, msg) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (\n      c(\"*\" = glue::glue(\"{msg}: {x}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_inform\"\n  )\n}\n\nnpi_alert_invalid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"x\" = \"NPI is invalid\")),\n    body = (c(\"!\" = glue::glue(\"{x} != {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_invalid\"\n  )\n}\n\nnpi_alert_valid &lt;- function(x, y) {\n  \n  arg  &lt;- rlang::caller_arg(x)\n  call &lt;- rlang::caller_env()\n  \n  rlang::inform(\n    message = (c(\"v\" = \"NPI is valid\")),\n    body = (c(\"&gt;\" = glue::glue(\"{x} == {y}\"))),\n    use_cli_format = TRUE,\n    arg = arg,\n    call = call,\n    class = \"npi_alert_valid\"\n  )\n}"
  },
  {
    "objectID": "posts/npi/npi_constructor.html#constructor-function",
    "href": "posts/npi/npi_constructor.html#constructor-function",
    "title": "Building an NPI Constructor",
    "section": "Constructor Function",
    "text": "Constructor Function\n\n\n\nnpi_constructor.R\n\nnpi_constructor &lt;- function(npi, verbose = TRUE) {\n  \n  npi &lt;- numeric_to_char(npi)\n  check_length(npi)\n  check_chars_numeric(npi)\n  check_nchars_10(npi)\n  check_first_char(npi)\n  \n  p &lt;- \\(...) paste0(...)\n  s &lt;- \\(x) unlist(strsplit(x, \"\"), use.names = FALSE)\n  \n  id &lt;- rev(s(npi)[1:9])\n  \n  if (verbose) {\n    npi_inform(npi, \"Testing NPI candidate\")\n    npi_inform(p(id, collapse = \"\"), \"Reverse 9-digit identifier\")\n  }\n  \n  idx     &lt;- seq(1, length(id), 2)\n  id      &lt;- as.numeric(id)\n  id[idx] &lt;- as.numeric(id[idx]) * 2\n  id[idx] &lt;- ifelse(id[idx] &gt; 9, id[idx] - 9, id[idx])\n  \n  if (verbose) {\n    npi_inform(p(id, collapse = \" \"), \"Double & reduce alternates\")\n  }\n  \n  id   &lt;- sum(id)\n  cn   &lt;- id + 24\n  ml   &lt;- ceiling(cn / 10) * 10\n  ck   &lt;- ml - cn\n  test &lt;- substr(npi, 1, 9)\n  test &lt;- p(test, ck)\n  \n  if (verbose) {\n    \n    npi_inform(p(p(c(id, 24), collapse = \" + \"), p(\" = \", cn)), \"Add 24 to sum digits\")\n    npi_inform(p(p(\"⌈\", cn, \"⌉\"), p(\" = \", ml)) ,\"Next multiple of 10\")\n    npi_inform(p(p(c(ml, cn), collapse = \" - \"), p(\" = \", ck)), \"Find check digit\")\n    npi_inform(p(test, collapse = \"\"), \"Append check digit\")\n    \n    if (identical(test, npi)) npi_alert_valid(test, npi)\n    if (!identical(test, npi)) npi_alert_invalid(test, npi)\n  }\n  invisible(test)\n}\n\n\nTest Validations\n\nnpi_constructor(\"123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must be 10 characters long.\n\nnpi_constructor(\"O123456789\")\n\nError in `npi_constructor()`:\n! An `npi` must contain numbers only.\n\nnpi_constructor(\"0000000000\")\n\nError in `npi_constructor()`:\n! An `npi` must start with a 1 or 2.\n\n\nTest Verbose Output\n\nnpi_constructor(1234567891)\n\n• Testing NPI candidate: 1234567891\n• Reverse 9-digit identifier: 987654321\n• Double & reduce alternates: 9 8 5 6 1 4 6 2 2\n• Add 24 to sum digits: 43 + 24 = 67\n• Next multiple of 10: ⌈67⌉ = 70\n• Find check digit: 70 - 67 = 3\n• Append check digit: 1234567893\n✖ NPI is invalid\n\n\n\nnpi_constructor(1043477615)\n\n• Testing NPI candidate: 1043477615\n• Reverse 9-digit identifier: 167743401\n• Double & reduce alternates: 2 6 5 7 8 3 8 0 2\n• Add 24 to sum digits: 41 + 24 = 65\n• Next multiple of 10: ⌈65⌉ = 70\n• Find check digit: 70 - 65 = 5\n• Append check digit: 1043477615\n✔ NPI is valid\n\n\n\nnpi_constructor(1000000000)\n\n• Testing NPI candidate: 1000000000\n• Reverse 9-digit identifier: 000000001\n• Double & reduce alternates: 0 0 0 0 0 0 0 0 2\n• Add 24 to sum digits: 2 + 24 = 26\n• Next multiple of 10: ⌈26⌉ = 30\n• Find check digit: 30 - 26 = 4\n• Append check digit: 1000000004\n✖ NPI is invalid\n\n\nTest Verbose Option\n\nnpi_constructor(1000000000, verbose = FALSE)\n\nTest Invisible Return\n\nnew_npi &lt;- npi_constructor(1000000000, verbose = FALSE)\n\nnew_npi\n\n[1] \"1000000004\""
  },
  {
    "objectID": "posts/npi/npi_constructor.html#minimal-validator",
    "href": "posts/npi/npi_constructor.html#minimal-validator",
    "title": "Building an NPI Constructor",
    "section": "Minimal Validator",
    "text": "Minimal Validator\n\n\n\nis_valid_npi.R\n\nis_valid_npi &lt;- function(npi) {\n  \n  npi &lt;- numeric_to_char(npi)\n  check_length(npi)\n  check_chars_numeric(npi)\n  check_nchars_10(npi)\n  check_first_char(npi)\n  \n  p  &lt;- \\(...) paste0(...)\n  s  &lt;- \\(x) unlist(strsplit(x, \"\"), use.names = FALSE)\n  ix &lt;- c(1, 3, 5, 7, 9)\n  \n  id     &lt;- as.numeric(rev(s(npi)[1:9]))\n  # id[c(TRUE, FALSE)]\n  id[ix] &lt;- id[ix] * 2\n  id[ix] &lt;- ifelse(id[ix] &gt; 9, id[ix] - 9, id[ix])\n  \n  id   &lt;- sum(id) + 24\n  ck   &lt;- (ceiling(id / 10) * 10) - id\n  test &lt;- p(substr(npi, 1, 9), ck)\n  \n  identical(test, npi)\n}\n\n\nTest Validator\n\nis_valid_npi(123456789)\n\nError in `is_valid_npi()`:\n! An `npi` must be 10 characters long.\n\nis_valid_npi(\"O123456789\")\n\nError in `is_valid_npi()`:\n! An `npi` must contain numbers only.\n\nis_valid_npi(0000000000)\n\nError in `is_valid_npi()`:\n! An `npi` must be 10 characters long.\n\nis_valid_npi(3000000000)\n\nError in `is_valid_npi()`:\n! An `npi` must start with a 1 or 2.\n\n\n\nis_valid_npi(1043477615)\n\n[1] TRUE\n\nis_valid_npi(1234567891)\n\n[1] FALSE\n\n\n\nrandom_npi_generator &lt;- \\(n) {\n  replicate(\n    n = n, \n    expr = paste0(\n      c(sample(1:2, 1, replace = TRUE), \n        sample(0:9, 9, replace = TRUE)), \n      collapse = \"\"))\n}\n\nrandom_npi_generator(10)\n\n [1] \"1392206909\" \"1088399542\" \"2323319934\" \"2804753764\" \"1065424803\"\n [6] \"1272438181\" \"1513442814\" \"2944423202\" \"1469424541\" \"1936461730\"\n\n\n\nn &lt;- 100000\nx &lt;- random_npi_generator(n)\ny &lt;- x[collapse::whichv(purrr::map_lgl(x, is_valid_npi), TRUE)]\n\npaste0((length(y) / n) * 100, \"%\")\n\n[1] \"10.133%\"\n\nbench::mark(\n  purrr::map_lgl(x, is_valid_npi)) |&gt; \n  dplyr::glimpse()\n\nRows: 1\nColumns: 13\n$ expression &lt;bch:expr&gt; &lt;purrr::map_lgl(x, is_valid_npi)&gt;\n$ min        &lt;bch:tm&gt; 19.3s\n$ median     &lt;bch:tm&gt; 19.3s\n$ `itr/sec`  &lt;dbl&gt; 0.05170328\n$ mem_alloc  &lt;bch:byt&gt; 391KB\n$ `gc/sec`   &lt;dbl&gt; 7.755493\n$ n_itr      &lt;int&gt; 1\n$ n_gc       &lt;dbl&gt; 150\n$ total_time &lt;bch:tm&gt; 19.3s\n$ result     &lt;list&gt; &lt;TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ memory     &lt;list&gt; [&lt;Rprofmem[11293 x 3]&gt;]\n$ time       &lt;list&gt; 19.3s\n$ gc         &lt;list&gt; [&lt;tbl_df[1 x 3]&gt;]\n\n\n\n\nsessioninfo::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/Los_Angeles\n date     2024-08-25\n pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package      * version     date (UTC) lib source\n   bench          1.1.3       2023-05-04 [1] CRAN (R 4.3.3)\n   cli          * 3.6.3.9000  2024-06-25 [1] Github (r-lib/cli@d9febb5)\n   collapse       2.0.16      2024-08-21 [1] CRAN (R 4.3.2)\n   colorspace     2.1-1       2024-07-26 [1] CRAN (R 4.3.2)\n   digest         0.6.37      2024-08-19 [1] CRAN (R 4.3.2)\n   dplyr        * 1.1.4       2023-11-17 [1] CRAN (R 4.3.2)\n   evaluate       0.24.0      2024-06-10 [1] CRAN (R 4.3.2)\n   fansi          1.0.6       2023-12-08 [1] CRAN (R 4.3.2)\n   fastmap        1.2.0       2024-05-15 [1] CRAN (R 4.3.2)\n   forcats      * 1.0.0       2023-01-29 [1] CRAN (R 4.3.2)\n   generics       0.1.3       2022-07-05 [1] CRAN (R 4.3.2)\n   ggplot2      * 3.5.1       2024-04-23 [1] CRAN (R 4.3.2)\n   glue           1.7.0       2024-01-09 [1] CRAN (R 4.3.2)\n   gtable         0.3.5       2024-04-22 [1] CRAN (R 4.3.3)\n   hms            1.1.3       2023-03-21 [1] CRAN (R 4.3.2)\n   htmltools      0.5.8.1     2024-04-04 [1] CRAN (R 4.3.2)\n   htmlwidgets    1.6.4       2023-12-06 [1] CRAN (R 4.3.2)\n   jsonlite       1.8.8       2023-12-04 [1] CRAN (R 4.3.2)\n   knitr          1.48        2024-07-07 [1] CRAN (R 4.3.3)\n   lifecycle      1.0.4       2023-11-07 [1] CRAN (R 4.3.2)\n   lubridate    * 1.9.3       2023-09-27 [1] CRAN (R 4.3.2)\n   magrittr       2.0.3       2022-03-30 [1] CRAN (R 4.3.2)\n   munsell        0.5.1       2024-04-01 [1] CRAN (R 4.3.3)\n   pillar         1.9.0       2023-03-22 [1] CRAN (R 4.3.2)\n   pkgconfig      2.0.3       2019-09-22 [1] CRAN (R 4.3.2)\n   profmem        0.6.0       2020-12-13 [1] CRAN (R 4.3.3)\n   purrr        * 1.0.2       2023-08-10 [1] CRAN (R 4.3.2)\n   R6             2.5.1       2021-08-19 [1] CRAN (R 4.3.2)\n   ragg           1.3.2       2024-05-15 [1] CRAN (R 4.3.2)\n   Rcpp           1.0.13      2024-07-17 [1] CRAN (R 4.3.2)\n D RcppParallel   5.1.9       2024-08-19 [1] CRAN (R 4.3.2)\n   readr        * 2.1.5       2024-01-10 [1] CRAN (R 4.3.2)\n   rlang        * 1.1.4       2024-06-04 [1] CRAN (R 4.3.3)\n   rmarkdown      2.28        2024-08-17 [1] CRAN (R 4.3.3)\n   rstudioapi     0.16.0.9000 2024-06-04 [1] Github (rstudio/rstudioapi@a985492)\n   scales         1.3.0       2023-11-28 [1] CRAN (R 4.3.2)\n   sessioninfo    1.2.2       2021-12-06 [1] CRAN (R 4.3.2)\n   stringfish     0.16.0      2023-11-28 [1] CRAN (R 4.3.2)\n   stringi        1.8.4       2024-05-06 [1] CRAN (R 4.3.3)\n   stringr      * 1.5.1       2023-11-14 [1] CRAN (R 4.3.2)\n   systemfonts    1.1.0       2024-05-15 [1] CRAN (R 4.3.2)\n   textshaping    0.4.0       2024-05-24 [1] CRAN (R 4.3.2)\n   tibble       * 3.2.1       2023-03-20 [1] CRAN (R 4.3.2)\n   tidyr        * 1.3.1       2024-01-24 [1] CRAN (R 4.3.2)\n   tidyselect     1.2.1       2024-03-11 [1] CRAN (R 4.3.3)\n   tidyverse    * 2.0.0       2023-02-22 [1] CRAN (R 4.3.2)\n   timechange     0.3.0       2024-01-18 [1] CRAN (R 4.3.2)\n   tzdb           0.4.0       2023-05-12 [1] CRAN (R 4.3.2)\n   utf8           1.2.4       2023-10-22 [1] CRAN (R 4.3.2)\n   vctrs          0.6.5       2023-12-01 [1] CRAN (R 4.3.2)\n   withr          3.0.1       2024-07-31 [1] CRAN (R 4.3.2)\n   xfun           0.47        2024-08-17 [1] CRAN (R 4.3.3)\n   yaml           2.3.10      2024-07-26 [1] CRAN (R 4.3.2)\n\n [1] C:/Program Files/R/R-4.3.2/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html",
    "href": "posts/draw_matrix/draw_matrix.html",
    "title": "Medical Codes as Matrices",
    "section": "",
    "text": "knitr::opts_chunk$set(\n  dev = \"ragg_png\",\n  dpi = 320,\n  out.width = \"100%\",\n  fig.width = 8,\n  fig.asp = 0.818,\n  fig.retina = 2,\n  fig.align = \"center\",\n  fig.show = \"hold\"\n)\noptions(scipen = 999)\n\nlibrary(tidyverse)\nlibrary(stringfish)\nlibrary(ggthemes)\nlibrary(drawr)\nlibrary(fuimus)\nlibrary(procedural)\nlibrary(northstar)"
  },
  {
    "objectID": "posts/draw_matrix/draw_matrix.html#session-info",
    "href": "posts/draw_matrix/draw_matrix.html#session-info",
    "title": "Medical Codes as Matrices",
    "section": "Session Info",
    "text": "Session Info\n\nsessioninfo::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/Los_Angeles\n date     2024-08-25\n pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package      * version     date (UTC) lib source\n   cli            3.6.3.9000  2024-06-25 [1] Github (r-lib/cli@d9febb5)\n   collapse       2.0.16      2024-08-21 [1] CRAN (R 4.3.2)\n   colorspace     2.1-1       2024-07-26 [1] CRAN (R 4.3.2)\n   digest         0.6.37      2024-08-19 [1] CRAN (R 4.3.2)\n   dplyr        * 1.1.4       2023-11-17 [1] CRAN (R 4.3.2)\n   drawr        * 0.0.1       2024-02-01 [1] Github (coatless-rpkg/drawr@4ad307f)\n   evaluate       0.24.0      2024-06-10 [1] CRAN (R 4.3.2)\n   fansi          1.0.6       2023-12-08 [1] CRAN (R 4.3.2)\n   farver         2.1.2       2024-05-13 [1] CRAN (R 4.3.3)\n   fastmap        1.2.0       2024-05-15 [1] CRAN (R 4.3.2)\n   forcats      * 1.0.0       2023-01-29 [1] CRAN (R 4.3.2)\n   fuimus       * 0.0.2       2024-08-23 [1] Github (andrewallenbruce/fuimus@c029c8b)\n   generics       0.1.3       2022-07-05 [1] CRAN (R 4.3.2)\n   ggplot2      * 3.5.1       2024-04-23 [1] CRAN (R 4.3.2)\n   ggthemes     * 5.1.0       2024-02-10 [1] CRAN (R 4.3.3)\n   glue           1.7.0       2024-01-09 [1] CRAN (R 4.3.2)\n   gtable         0.3.5       2024-04-22 [1] CRAN (R 4.3.3)\n   hms            1.1.3       2023-03-21 [1] CRAN (R 4.3.2)\n   htmltools      0.5.8.1     2024-04-04 [1] CRAN (R 4.3.2)\n   htmlwidgets    1.6.4       2023-12-06 [1] CRAN (R 4.3.2)\n   jsonlite       1.8.8       2023-12-04 [1] CRAN (R 4.3.2)\n   knitr          1.48        2024-07-07 [1] CRAN (R 4.3.3)\n   lifecycle      1.0.4       2023-11-07 [1] CRAN (R 4.3.2)\n   lubridate    * 1.9.3       2023-09-27 [1] CRAN (R 4.3.2)\n   magrittr       2.0.3       2022-03-30 [1] CRAN (R 4.3.2)\n   munsell        0.5.1       2024-04-01 [1] CRAN (R 4.3.3)\n   northstar    * 0.0.7       2024-07-30 [1] Github (andrewallenbruce/northstar@5c01119)\n   pillar         1.9.0       2023-03-22 [1] CRAN (R 4.3.2)\n   pkgconfig      2.0.3       2019-09-22 [1] CRAN (R 4.3.2)\n   procedural   * 0.0.1       2024-08-04 [1] Github (andrewallenbruce/procedural@fae6eb1)\n   purrr        * 1.0.2       2023-08-10 [1] CRAN (R 4.3.2)\n   R6             2.5.1       2021-08-19 [1] CRAN (R 4.3.2)\n   ragg           1.3.2       2024-05-15 [1] CRAN (R 4.3.2)\n   Rcpp           1.0.13      2024-07-17 [1] CRAN (R 4.3.2)\n D RcppParallel   5.1.9       2024-08-19 [1] CRAN (R 4.3.2)\n   readr        * 2.1.5       2024-01-10 [1] CRAN (R 4.3.2)\n   rlang          1.1.4       2024-06-04 [1] CRAN (R 4.3.3)\n   rmarkdown      2.28        2024-08-17 [1] CRAN (R 4.3.3)\n   rstudioapi     0.16.0.9000 2024-06-04 [1] Github (rstudio/rstudioapi@a985492)\n   scales         1.3.0       2023-11-28 [1] CRAN (R 4.3.2)\n   sessioninfo    1.2.2       2021-12-06 [1] CRAN (R 4.3.2)\n   stringfish   * 0.16.0      2023-11-28 [1] CRAN (R 4.3.2)\n   stringi        1.8.4       2024-05-06 [1] CRAN (R 4.3.3)\n   stringr      * 1.5.1       2023-11-14 [1] CRAN (R 4.3.2)\n   systemfonts    1.1.0       2024-05-15 [1] CRAN (R 4.3.2)\n   textshaping    0.4.0       2024-05-24 [1] CRAN (R 4.3.2)\n   tibble       * 3.2.1       2023-03-20 [1] CRAN (R 4.3.2)\n   tidyr        * 1.3.1       2024-01-24 [1] CRAN (R 4.3.2)\n   tidyselect     1.2.1       2024-03-11 [1] CRAN (R 4.3.3)\n   tidyverse    * 2.0.0       2023-02-22 [1] CRAN (R 4.3.2)\n   timechange     0.3.0       2024-01-18 [1] CRAN (R 4.3.2)\n   tzdb           0.4.0       2023-05-12 [1] CRAN (R 4.3.2)\n   utf8           1.2.4       2023-10-22 [1] CRAN (R 4.3.2)\n   vctrs          0.6.5       2023-12-01 [1] CRAN (R 4.3.2)\n   withr          3.0.1       2024-07-31 [1] CRAN (R 4.3.2)\n   xfun           0.47        2024-08-17 [1] CRAN (R 4.3.3)\n   yaml           2.3.10      2024-07-26 [1] CRAN (R 4.3.2)\n   zeallot        0.1.0       2018-01-28 [1] CRAN (R 4.3.2)\n\n [1] C:/Program Files/R/R-4.3.2/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "posts/claims/claims.html",
    "href": "posts/claims/claims.html",
    "title": "Claims Analysis",
    "section": "",
    "text": "procedure_sum &lt;- procedures |&gt;\n  summarise(\n    n_hcpcs = n_distinct(hcpcs, na.rm = TRUE),\n    n_units = na_sum(units),\n    n_mod1 = na_sum(!is.na(mod1)),\n    n_mod2 = na_sum(!is.na(mod2)),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(id, enc, dos)) |&gt;\n  filter(charges &gt; 0) |&gt;\n  arrange(dos) |&gt; \n  left_join(\n    encounters, by = join_by(id, enc, dos)) |&gt; \n  select(\n    id, \n    enc, \n    dos, \n    year:wday_l,\n    n_hcpcs, \n    n_units, \n    n_mod1, \n    n_mod2, \n    charges, \n    allowed, \n    payments, \n    adjustments,\n    dob,\n    age,\n    rendering,\n    cred,\n    icd,\n    pos,\n    pos_name,\n    pos_type,\n    loc,\n    ins_class,\n    ins_prim)\n\nprocedure_sum\n\n# A tibble: 38,852 × 31\n   id       enc dos         year quarter month month_l  week   day  yday  wday\n   &lt;chr&gt;  &lt;int&gt; &lt;date&gt;     &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;ord&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1 PT0491     1 2022-06-14  2022       2     6 Jun        24    14   164     2\n 2 PT2360     1 2022-07-31  2022       3     7 Jul        31    31   211     7\n 3 PT0671     1 2022-08-06  2022       3     8 Aug        32     6   217     6\n 4 PT1499     1 2022-08-06  2022       3     8 Aug        32     6   217     6\n 5 PT1485     3 2022-08-09  2022       3     8 Aug        32     9   220     2\n 6 PT1626     1 2022-08-10  2022       3     8 Aug        32    10   221     3\n 7 PT2430     1 2022-08-10  2022       3     8 Aug        32    10   221     3\n 8 PT1677     1 2022-08-11  2022       3     8 Aug        32    11   222     4\n 9 PT2181     1 2022-08-11  2022       3     8 Aug        32    11   222     4\n10 PT1043     1 2022-08-12  2022       3     8 Aug        32    12   223     5\n# ℹ 38,842 more rows\n# ℹ 20 more variables: wday_l &lt;ord&gt;, n_hcpcs &lt;int&gt;, n_units &lt;int&gt;,\n#   n_mod1 &lt;int&gt;, n_mod2 &lt;int&gt;, charges &lt;dbl&gt;, allowed &lt;dbl&gt;, payments &lt;dbl&gt;,\n#   adjustments &lt;dbl&gt;, dob &lt;date&gt;, age &lt;int&gt;, rendering &lt;chr&gt;, cred &lt;chr&gt;,\n#   icd &lt;chr&gt;, pos &lt;chr&gt;, pos_name &lt;chr&gt;, pos_type &lt;fct&gt;, loc &lt;chr&gt;,\n#   ins_class &lt;chr&gt;, ins_prim &lt;chr&gt;\n\n\n\nprocedure_sum |&gt; \n  summarise(\n    encounters = n(),\n    n_hcpcs = na_sum(n_hcpcs),\n    n_units = na_sum(n_units),\n    n_mod1 = na_sum(n_mod1),\n    n_mod2 = na_sum(n_mod2),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(year, quarter, month_l, rendering, ins_prim)) |&gt; \n  arrange(year, quarter, month_l) |&gt; \n  ggplot(aes(y = charges)) +\n  geom_boxplot(aes(group = year, fill = year)) +\n  scale_x_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  ggthemes::theme_fivethirtyeight() +\n  theme(legend.position = \"none\") +\n  theme(\n    axis.text.y = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n\n\n\n\n\n\n\n\nprocedure_sum |&gt; \n  summarise(\n    encounters = n(),\n    n_hcpcs = na_sum(n_hcpcs),\n    n_units = na_sum(n_units),\n    n_mod1 = na_sum(n_mod1),\n    n_mod2 = na_sum(n_mod2),\n    charges = na_sum(charges),\n    allowed = na_sum(allowed),\n    payments = na_sum(payments),\n    adjustments = na_sum(adjustments),\n    .by = c(year, quarter, month_l, rendering, ins_prim)) |&gt; \n  arrange(year, quarter, month_l) |&gt; \n  ggplot(aes(x = payments, y = charges)) +\n  geom_point(aes(size = encounters, group = ins_prim, fill = ins_prim), colour = \"black\", shape = 21) +\n  geom_quantile(colour = \"royalblue\", linewidth = 1) +\n  # geom_hline(yintercept = 0, color = \"black\", linewidth = 0.5) +\n  # geom_vline(xintercept = 0, color = \"grey50\", linewidth = 0.5) +\n  scale_y_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  scale_x_continuous(labels = scales::label_number(scale = 0.001, suffix = \"k\")) +\n  ggthemes::theme_fivethirtyeight() +\n  coord_cartesian(clip = \"off\") +\n  theme(legend.position = \"none\") +\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n\nSmoothing formula not specified. Using: y ~ x\n\n\n\n\n\n\n\n\n\n\nRevenue Per Visit\n\nRPV = Total Payments \\div Number of Patient Visits\n\n\n\nclaims_summary &lt;- claims |&gt;\n    select(\n    id,\n    enc,\n    age,\n    ins_prim,\n    charges,\n    allowed,\n    payments,\n    adjustments) |&gt; \n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(age)\n  ) |&gt; \n  summarise(\n    # patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE))\n\nclaims_summary |&gt; \n  set_names(\n    c(\"Average Patient Age\", \n      \"Procedures\", \n      \"Visits\", \n      \"Charges\", \n      \"Allowed\", \n      \"Net Payment\", \n      \"Adjustments\")) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt;\n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nAverage Patient Age\n46.5\n\n\nProcedures\n49721.0\n\n\nVisits\n39839.0\n\n\nCharges\n11659949.0\n\n\nAllowed\n4830582.7\n\n\nNet Payment\n4648361.4\n\n\nAdjustments\n5948070.3\n\n\n\n\n\nclaims_summary |&gt;\n  mutate(\n    revenue_adjustments = revenue + adjustments, \n    .after = charges) |&gt; \n  reframe(\n    cpp = charges / procedures,\n    alpp = allowed / procedures,\n    rpp = revenue / procedures,\n    adpp = adjustments / procedures,\n    ppv = procedures / visits,\n    cpv = charges / visits,\n    alpv = allowed / visits,\n    rpv = revenue / visits,\n    adpv = adjustments / visits,\n    cpr = charges / revenue_adjustments,\n    alpr = allowed / revenue,\n    adpr = adjustments / revenue,\n    net_collect = revenue / (charges - adjustments),\n    net_allow = revenue / allowed,\n    net_adjust = revenue / adjustments,\n    ) |&gt; \n  set_names(\n    c(\"Charge Per Procedure\", \n      \"Allowed Per Procedure\", \n      \"Payment Per Procedure\", \n      \"Adjustment Per Procedure\", \n      \"Procedures Per Visit\", \n      \"Charge Per Visit\", \n      \"Allowed Per Visit\", \n      \"Payment Per Visit\", \n      \"Adjustment Per Visit\",\n      \"Charge To Payment + Adjustment\",\n      \"Allowed Per Dollar\", \n      \"Adjustment Per Dollar\",\n      \"Net Collection Ratio\",\n      \"Net Allowable Ratio\",\n      \"Net Adjustment Ratio\"\n      )) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt; \n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nCharge Per Procedure\n234.5075320\n\n\nAllowed Per Procedure\n97.1537722\n\n\nPayment Per Procedure\n93.4888964\n\n\nAdjustment Per Procedure\n119.6289359\n\n\nProcedures Per Visit\n1.2480484\n\n\nCharge Per Visit\n292.6767489\n\n\nAllowed Per Visit\n121.2526095\n\n\nPayment Per Visit\n116.6786671\n\n\nAdjustment Per Visit\n149.3027014\n\n\nCharge To Payment + Adjustment\n1.1003656\n\n\nAllowed Per Dollar\n1.0392012\n\n\nAdjustment Per Dollar\n1.2796058\n\n\nNet Collection Ratio\n0.8138060\n\n\nNet Allowable Ratio\n0.9622776\n\n\nNet Adjustment Ratio\n0.7814907\n\n\n\n\n\n\n\ninsurance_summary &lt;- claims |&gt;\n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age, ins_prim)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, age, ins_prim)\n  ) |&gt; \n  summarise(\n    patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(ins_prim)\n  ) |&gt; \n  filter(!is.na(ins_prim)) |&gt; \n  arrange(desc(procedures))\n\n# Patients are counted once per insurance class\ninsurance_summary |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      patients\n      avg_age\n      procedures\n      visits\n      charges\n      allowed\n      revenue\n      adjustments\n    \n\n\nBCBS\n2155\n30.51601\n11073\n9348\n2648855\n1113623.43\n1052272.49\n1426863.60\n\n\nUHC\n1877\n34.26905\n10091\n7492\n2691070\n938135.72\n873231.19\n1538893.10\n\n\nSELF\n2801\n33.87429\n8770\n8153\n1020064\n775974.68\n773146.09\n101145.74\n\n\nAETNA\n1010\n28.61881\n4901\n3991\n1279925\n445925.74\n430341.11\n728428.95\n\n\nCIGNA\n758\n28.15963\n4265\n3651\n986190\n345288.15\n323414.76\n585340.34\n\n\nMEDICARE\n547\n70.09872\n2966\n1340\n787140\n292738.64\n287262.53\n487146.83\n\n\nOTHER\n744\n29.41667\n2804\n2416\n848695\n491911.51\n489813.89\n196970.03\n\n\nSUNFLOWER\n283\n15.55830\n1279\n1018\n476005\n141674.71\n140850.71\n301252.45\n\n\nAMBETTER\n174\n33.93103\n967\n904\n215805\n80836.37\n76822.76\n123926.40\n\n\nTRICARE WEST\n159\n23.72956\n811\n645\n241225\n69920.50\n68832.31\n167099.63\n\n\nHUMANA\n149\n58.39597\n732\n330\n199090\n50943.39\n49748.17\n142202.78\n\n\nMEDICAID\n60\n38.56667\n255\n87\n84010\n26401.45\n26224.00\n50286.00\n\n\nMERITAIN\n45\n24.48889\n206\n163\n52500\n19143.52\n18537.76\n32399.90\n\n\nVA\n32\n54.12500\n140\n60\n41865\n11575.76\n11575.76\n27735.43\n\n\nTRUSTMARK\n20\n27.90000\n86\n75\n20680\n6352.17\n6403.32\n11933.25\n\n\nRAILROAD\n13\n73.61538\n71\n35\n19435\n7233.90\n7164.62\n12310.38\n\n\nTRICARE EAST\n11\n21.36364\n66\n61\n13570\n6160.89\n5924.85\n7409.11\n\n\nMAGELLAN\n21\n35.71429\n62\n58\n14050\n1530.98\n1389.98\n3244.02\n\n\nSEDGWICK\n2\n47.00000\n20\n2\n6825\n1216.83\n1216.83\n283.17\n\n\nLIBERTY\n1\n73.00000\n15\n2\n5050\n1381.57\n1381.57\n118.43\n\n\nWELLCARE\n4\n56.75000\n14\n6\n4350\n1029.80\n1011.22\n2538.78\n\n\nHARTFORD\n2\n52.00000\n10\n2\n3550\n1583.00\n1795.50\n542.00\n\n\n\n\n\n\n\ninsurance_summary |&gt; \n  reframe(\n    ins_prim,\n    pts = patients,\n    vpp = visits / patients,\n    ppp = procedures / patients,\n    rpp = revenue / patients,\n    ppv = procedures / visits,\n    rpv = revenue / visits,\n    rpp = revenue / procedures\n  ) |&gt; \n  arrange(desc(pts)) |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      pts\n      vpp\n      ppp\n      rpp\n      ppv\n      rpv\n    \n\n\nSELF\n2801\n2.910746\n3.131025\n88.15805\n1.075678\n94.82964\n\n\nBCBS\n2155\n4.337819\n5.138283\n95.03048\n1.184531\n112.56659\n\n\nUHC\n1877\n3.991476\n5.376132\n86.53564\n1.346903\n116.55515\n\n\nAETNA\n1010\n3.951485\n4.852475\n87.80680\n1.228013\n107.82789\n\n\nCIGNA\n758\n4.816623\n5.626649\n75.82996\n1.168173\n88.58251\n\n\nOTHER\n744\n3.247312\n3.768817\n174.68398\n1.160596\n202.73754\n\n\nMEDICARE\n547\n2.449726\n5.422303\n96.85183\n2.213433\n214.37502\n\n\nSUNFLOWER\n283\n3.597173\n4.519435\n110.12565\n1.256385\n138.36023\n\n\nAMBETTER\n174\n5.195402\n5.557471\n79.44443\n1.069690\n84.98093\n\n\nTRICARE WEST\n159\n4.056604\n5.100629\n84.87338\n1.257364\n106.71676\n\n\nHUMANA\n149\n2.214765\n4.912752\n67.96198\n2.218182\n150.75203\n\n\nMEDICAID\n60\n1.450000\n4.250000\n102.83922\n2.931034\n301.42529\n\n\nMERITAIN\n45\n3.622222\n4.577778\n89.98913\n1.263804\n113.72859\n\n\nVA\n32\n1.875000\n4.375000\n82.68400\n2.333333\n192.92933\n\n\nMAGELLAN\n21\n2.761905\n2.952381\n22.41903\n1.068966\n23.96517\n\n\nTRUSTMARK\n20\n3.750000\n4.300000\n74.45721\n1.146667\n85.37760\n\n\nRAILROAD\n13\n2.692308\n5.461538\n100.91014\n2.028571\n204.70343\n\n\nTRICARE EAST\n11\n5.545455\n6.000000\n89.77045\n1.081967\n97.12869\n\n\nWELLCARE\n4\n1.500000\n3.500000\n72.23000\n2.333333\n168.53667\n\n\nSEDGWICK\n2\n1.000000\n10.000000\n60.84150\n10.000000\n608.41500\n\n\nHARTFORD\n2\n1.000000\n5.000000\n179.55000\n5.000000\n897.75000\n\n\nLIBERTY\n1\n2.000000\n15.000000\n92.10467\n7.500000\n690.78500"
  },
  {
    "objectID": "posts/claims/claims.html#ratio-analysis",
    "href": "posts/claims/claims.html#ratio-analysis",
    "title": "Claims Analysis",
    "section": "",
    "text": "Revenue Per Visit\n\nRPV = Total Payments \\div Number of Patient Visits\n\n\n\nclaims_summary &lt;- claims |&gt;\n    select(\n    id,\n    enc,\n    age,\n    ins_prim,\n    charges,\n    allowed,\n    payments,\n    adjustments) |&gt; \n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(age)\n  ) |&gt; \n  summarise(\n    # patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE))\n\nclaims_summary |&gt; \n  set_names(\n    c(\"Average Patient Age\", \n      \"Procedures\", \n      \"Visits\", \n      \"Charges\", \n      \"Allowed\", \n      \"Net Payment\", \n      \"Adjustments\")) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt;\n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nAverage Patient Age\n46.5\n\n\nProcedures\n49721.0\n\n\nVisits\n39839.0\n\n\nCharges\n11659949.0\n\n\nAllowed\n4830582.7\n\n\nNet Payment\n4648361.4\n\n\nAdjustments\n5948070.3\n\n\n\n\n\nclaims_summary |&gt;\n  mutate(\n    revenue_adjustments = revenue + adjustments, \n    .after = charges) |&gt; \n  reframe(\n    cpp = charges / procedures,\n    alpp = allowed / procedures,\n    rpp = revenue / procedures,\n    adpp = adjustments / procedures,\n    ppv = procedures / visits,\n    cpv = charges / visits,\n    alpv = allowed / visits,\n    rpv = revenue / visits,\n    adpv = adjustments / visits,\n    cpr = charges / revenue_adjustments,\n    alpr = allowed / revenue,\n    adpr = adjustments / revenue,\n    net_collect = revenue / (charges - adjustments),\n    net_allow = revenue / allowed,\n    net_adjust = revenue / adjustments,\n    ) |&gt; \n  set_names(\n    c(\"Charge Per Procedure\", \n      \"Allowed Per Procedure\", \n      \"Payment Per Procedure\", \n      \"Adjustment Per Procedure\", \n      \"Procedures Per Visit\", \n      \"Charge Per Visit\", \n      \"Allowed Per Visit\", \n      \"Payment Per Visit\", \n      \"Adjustment Per Visit\",\n      \"Charge To Payment + Adjustment\",\n      \"Allowed Per Dollar\", \n      \"Adjustment Per Dollar\",\n      \"Net Collection Ratio\",\n      \"Net Allowable Ratio\",\n      \"Net Adjustment Ratio\"\n      )) |&gt; \n  pivot_longer(\n    cols = everything(), \n    names_to = \"Metric\", \n    values_to = \"Value\") |&gt; \n  gt() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nMetric\n      Value\n    \n\n\nCharge Per Procedure\n234.5075320\n\n\nAllowed Per Procedure\n97.1537722\n\n\nPayment Per Procedure\n93.4888964\n\n\nAdjustment Per Procedure\n119.6289359\n\n\nProcedures Per Visit\n1.2480484\n\n\nCharge Per Visit\n292.6767489\n\n\nAllowed Per Visit\n121.2526095\n\n\nPayment Per Visit\n116.6786671\n\n\nAdjustment Per Visit\n149.3027014\n\n\nCharge To Payment + Adjustment\n1.1003656\n\n\nAllowed Per Dollar\n1.0392012\n\n\nAdjustment Per Dollar\n1.2796058\n\n\nNet Collection Ratio\n0.8138060\n\n\nNet Allowable Ratio\n0.9622776\n\n\nNet Adjustment Ratio\n0.7814907\n\n\n\n\n\n\n\ninsurance_summary &lt;- claims |&gt;\n  summarise(\n    procedures = n(),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, enc, age, ins_prim)) |&gt;\n  summarise(\n    visits = n(),\n    procedures = sum(procedures, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    payments = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(id, age, ins_prim)\n  ) |&gt; \n  summarise(\n    patients = n(),\n    avg_age = mean(age, na.rm = TRUE),\n    procedures = sum(procedures, na.rm = TRUE),\n    visits = sum(visits, na.rm = TRUE),\n    charges = sum(charges, na.rm = TRUE),\n    allowed = sum(allowed, na.rm = TRUE),\n    revenue = sum(payments, na.rm = TRUE),\n    adjustments = sum(adjustments, na.rm = TRUE),\n    .by = c(ins_prim)\n  ) |&gt; \n  filter(!is.na(ins_prim)) |&gt; \n  arrange(desc(procedures))\n\n# Patients are counted once per insurance class\ninsurance_summary |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      patients\n      avg_age\n      procedures\n      visits\n      charges\n      allowed\n      revenue\n      adjustments\n    \n\n\nBCBS\n2155\n30.51601\n11073\n9348\n2648855\n1113623.43\n1052272.49\n1426863.60\n\n\nUHC\n1877\n34.26905\n10091\n7492\n2691070\n938135.72\n873231.19\n1538893.10\n\n\nSELF\n2801\n33.87429\n8770\n8153\n1020064\n775974.68\n773146.09\n101145.74\n\n\nAETNA\n1010\n28.61881\n4901\n3991\n1279925\n445925.74\n430341.11\n728428.95\n\n\nCIGNA\n758\n28.15963\n4265\n3651\n986190\n345288.15\n323414.76\n585340.34\n\n\nMEDICARE\n547\n70.09872\n2966\n1340\n787140\n292738.64\n287262.53\n487146.83\n\n\nOTHER\n744\n29.41667\n2804\n2416\n848695\n491911.51\n489813.89\n196970.03\n\n\nSUNFLOWER\n283\n15.55830\n1279\n1018\n476005\n141674.71\n140850.71\n301252.45\n\n\nAMBETTER\n174\n33.93103\n967\n904\n215805\n80836.37\n76822.76\n123926.40\n\n\nTRICARE WEST\n159\n23.72956\n811\n645\n241225\n69920.50\n68832.31\n167099.63\n\n\nHUMANA\n149\n58.39597\n732\n330\n199090\n50943.39\n49748.17\n142202.78\n\n\nMEDICAID\n60\n38.56667\n255\n87\n84010\n26401.45\n26224.00\n50286.00\n\n\nMERITAIN\n45\n24.48889\n206\n163\n52500\n19143.52\n18537.76\n32399.90\n\n\nVA\n32\n54.12500\n140\n60\n41865\n11575.76\n11575.76\n27735.43\n\n\nTRUSTMARK\n20\n27.90000\n86\n75\n20680\n6352.17\n6403.32\n11933.25\n\n\nRAILROAD\n13\n73.61538\n71\n35\n19435\n7233.90\n7164.62\n12310.38\n\n\nTRICARE EAST\n11\n21.36364\n66\n61\n13570\n6160.89\n5924.85\n7409.11\n\n\nMAGELLAN\n21\n35.71429\n62\n58\n14050\n1530.98\n1389.98\n3244.02\n\n\nSEDGWICK\n2\n47.00000\n20\n2\n6825\n1216.83\n1216.83\n283.17\n\n\nLIBERTY\n1\n73.00000\n15\n2\n5050\n1381.57\n1381.57\n118.43\n\n\nWELLCARE\n4\n56.75000\n14\n6\n4350\n1029.80\n1011.22\n2538.78\n\n\nHARTFORD\n2\n52.00000\n10\n2\n3550\n1583.00\n1795.50\n542.00\n\n\n\n\n\n\n\ninsurance_summary |&gt; \n  reframe(\n    ins_prim,\n    pts = patients,\n    vpp = visits / patients,\n    ppp = procedures / patients,\n    rpp = revenue / patients,\n    ppv = procedures / visits,\n    rpv = revenue / visits,\n    rpp = revenue / procedures\n  ) |&gt; \n  arrange(desc(pts)) |&gt;\n  gt(rowname_col = \"ins_prim\") |&gt; \n  opt_all_caps() |&gt; \n  opt_table_font(font = google_font(name = \"Fira Code\")) |&gt; \n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      pts\n      vpp\n      ppp\n      rpp\n      ppv\n      rpv\n    \n\n\nSELF\n2801\n2.910746\n3.131025\n88.15805\n1.075678\n94.82964\n\n\nBCBS\n2155\n4.337819\n5.138283\n95.03048\n1.184531\n112.56659\n\n\nUHC\n1877\n3.991476\n5.376132\n86.53564\n1.346903\n116.55515\n\n\nAETNA\n1010\n3.951485\n4.852475\n87.80680\n1.228013\n107.82789\n\n\nCIGNA\n758\n4.816623\n5.626649\n75.82996\n1.168173\n88.58251\n\n\nOTHER\n744\n3.247312\n3.768817\n174.68398\n1.160596\n202.73754\n\n\nMEDICARE\n547\n2.449726\n5.422303\n96.85183\n2.213433\n214.37502\n\n\nSUNFLOWER\n283\n3.597173\n4.519435\n110.12565\n1.256385\n138.36023\n\n\nAMBETTER\n174\n5.195402\n5.557471\n79.44443\n1.069690\n84.98093\n\n\nTRICARE WEST\n159\n4.056604\n5.100629\n84.87338\n1.257364\n106.71676\n\n\nHUMANA\n149\n2.214765\n4.912752\n67.96198\n2.218182\n150.75203\n\n\nMEDICAID\n60\n1.450000\n4.250000\n102.83922\n2.931034\n301.42529\n\n\nMERITAIN\n45\n3.622222\n4.577778\n89.98913\n1.263804\n113.72859\n\n\nVA\n32\n1.875000\n4.375000\n82.68400\n2.333333\n192.92933\n\n\nMAGELLAN\n21\n2.761905\n2.952381\n22.41903\n1.068966\n23.96517\n\n\nTRUSTMARK\n20\n3.750000\n4.300000\n74.45721\n1.146667\n85.37760\n\n\nRAILROAD\n13\n2.692308\n5.461538\n100.91014\n2.028571\n204.70343\n\n\nTRICARE EAST\n11\n5.545455\n6.000000\n89.77045\n1.081967\n97.12869\n\n\nWELLCARE\n4\n1.500000\n3.500000\n72.23000\n2.333333\n168.53667\n\n\nSEDGWICK\n2\n1.000000\n10.000000\n60.84150\n10.000000\n608.41500\n\n\nHARTFORD\n2\n1.000000\n5.000000\n179.55000\n5.000000\n897.75000\n\n\nLIBERTY\n1\n2.000000\n15.000000\n92.10467\n7.500000\n690.78500"
  },
  {
    "objectID": "posts/claims/claims.html#session-info",
    "href": "posts/claims/claims.html#session-info",
    "title": "Claims Analysis",
    "section": "Session Info",
    "text": "Session Info\n\nsessioninfo::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/Los_Angeles\n date     2024-08-25\n pandoc   3.1.11 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package       * version     date (UTC) lib source\n   base64enc       0.1-3       2015-07-28 [1] CRAN (R 4.3.1)\n   bit             4.0.5       2022-11-15 [1] CRAN (R 4.3.2)\n   bit64           4.0.5       2020-08-30 [1] CRAN (R 4.3.2)\n   cheapr          0.9.3       2024-07-29 [1] CRAN (R 4.3.2)\n   cli             3.6.3.9000  2024-06-25 [1] Github (r-lib/cli@d9febb5)\n   collapse        2.0.16      2024-08-21 [1] CRAN (R 4.3.2)\n   colorspace      2.1-1       2024-07-26 [1] CRAN (R 4.3.2)\n   commonmark      1.9.1       2024-01-30 [1] CRAN (R 4.3.2)\n   crayon          1.5.3       2024-06-20 [1] CRAN (R 4.3.3)\n   data.table      1.15.4      2024-03-30 [1] CRAN (R 4.3.3)\n   digest          0.6.37      2024-08-19 [1] CRAN (R 4.3.2)\n   dplyr         * 1.1.4       2023-11-17 [1] CRAN (R 4.3.2)\n   ellipsis        0.3.2       2021-04-29 [1] CRAN (R 4.3.2)\n   evaluate        0.24.0      2024-06-10 [1] CRAN (R 4.3.2)\n   fansi           1.0.6       2023-12-08 [1] CRAN (R 4.3.2)\n   farver          2.1.2       2024-05-13 [1] CRAN (R 4.3.3)\n   fastmap         1.2.0       2024-05-15 [1] CRAN (R 4.3.2)\n   fontawesome     0.5.2       2023-08-19 [1] CRAN (R 4.3.2)\n   forcats       * 1.0.0       2023-01-29 [1] CRAN (R 4.3.2)\n   fs              1.6.4       2024-04-25 [1] CRAN (R 4.3.3)\n   fuimus        * 0.0.2       2024-08-23 [1] Github (andrewallenbruce/fuimus@c029c8b)\n   generics        0.1.3       2022-07-05 [1] CRAN (R 4.3.2)\n   ggplot2       * 3.5.1       2024-04-23 [1] CRAN (R 4.3.2)\n   ggthemes        5.1.0       2024-02-10 [1] CRAN (R 4.3.3)\n   glue            1.7.0       2024-01-09 [1] CRAN (R 4.3.2)\n   gt            * 0.11.0      2024-07-09 [1] CRAN (R 4.3.3)\n   gtable          0.3.5       2024-04-22 [1] CRAN (R 4.3.3)\n   gtExtras      * 0.5.0       2023-09-15 [1] CRAN (R 4.3.2)\n   here          * 1.0.1       2020-12-13 [1] CRAN (R 4.3.2)\n   hms             1.1.3       2023-03-21 [1] CRAN (R 4.3.2)\n   htmltools       0.5.8.1     2024-04-04 [1] CRAN (R 4.3.2)\n   htmlwidgets     1.6.4       2023-12-06 [1] CRAN (R 4.3.2)\n   janitor         2.2.0       2023-02-02 [1] CRAN (R 4.3.2)\n   jsonlite        1.8.8       2023-12-04 [1] CRAN (R 4.3.2)\n   knitr           1.48        2024-07-07 [1] CRAN (R 4.3.3)\n   labeling        0.4.3       2023-08-29 [1] CRAN (R 4.3.1)\n   lattice         0.22-6      2024-03-20 [1] CRAN (R 4.3.2)\n   lifecycle       1.0.4       2023-11-07 [1] CRAN (R 4.3.2)\n   lubridate     * 1.9.3       2023-09-27 [1] CRAN (R 4.3.2)\n   magrittr        2.0.3       2022-03-30 [1] CRAN (R 4.3.2)\n   markdown        1.13        2024-06-04 [1] CRAN (R 4.3.2)\n   MASS            7.3-60.0.1  2024-01-13 [1] CRAN (R 4.3.2)\n   Matrix          1.6-5       2024-01-11 [1] CRAN (R 4.3.2)\n   MatrixModels    0.5-3       2023-11-06 [1] CRAN (R 4.3.3)\n   munsell         0.5.1       2024-04-01 [1] CRAN (R 4.3.3)\n   northstar     * 0.0.7       2024-07-30 [1] Github (andrewallenbruce/northstar@5c01119)\n   paletteer       1.6.0       2024-01-21 [1] CRAN (R 4.3.3)\n   pillar          1.9.0       2023-03-22 [1] CRAN (R 4.3.2)\n   pins            1.3.0       2023-11-09 [1] CRAN (R 4.3.2)\n   pkgconfig       2.0.3       2019-09-22 [1] CRAN (R 4.3.2)\n   purrr         * 1.0.2       2023-08-10 [1] CRAN (R 4.3.2)\n   qs              0.26.3      2024-05-16 [1] CRAN (R 4.3.3)\n   quantreg        5.98        2024-05-26 [1] CRAN (R 4.3.3)\n   R6              2.5.1       2021-08-19 [1] CRAN (R 4.3.2)\n   ragg            1.3.2       2024-05-15 [1] CRAN (R 4.3.2)\n   RApiSerialize   0.1.3       2024-05-14 [1] CRAN (R 4.3.3)\n   rappdirs        0.3.3       2021-01-31 [1] CRAN (R 4.3.2)\n   rbrvs         * 0.0.1       2024-08-20 [1] Github (andrewallenbruce/rvu@8e09ebe)\n   Rcpp            1.0.13      2024-07-17 [1] CRAN (R 4.3.2)\n D RcppParallel    5.1.9       2024-08-19 [1] CRAN (R 4.3.2)\n   readr         * 2.1.5       2024-01-10 [1] CRAN (R 4.3.2)\n   rematch2        2.1.2       2020-05-01 [1] CRAN (R 4.3.2)\n   rlang           1.1.4       2024-06-04 [1] CRAN (R 4.3.3)\n   rmarkdown       2.28        2024-08-17 [1] CRAN (R 4.3.3)\n   rprojroot       2.0.4       2023-11-05 [1] CRAN (R 4.3.2)\n   rstudioapi      0.16.0.9000 2024-06-04 [1] Github (rstudio/rstudioapi@a985492)\n   sass            0.4.9       2024-03-15 [1] CRAN (R 4.3.2)\n   scales          1.3.0       2023-11-28 [1] CRAN (R 4.3.2)\n   sessioninfo     1.2.2       2021-12-06 [1] CRAN (R 4.3.2)\n   snakecase       0.11.1      2023-08-27 [1] CRAN (R 4.3.2)\n   SparseM         1.84-2      2024-07-17 [1] CRAN (R 4.3.2)\n   stringfish      0.16.0      2023-11-28 [1] CRAN (R 4.3.2)\n   stringi         1.8.4       2024-05-06 [1] CRAN (R 4.3.3)\n   stringr       * 1.5.1       2023-11-14 [1] CRAN (R 4.3.2)\n   survival        3.7-0       2024-06-05 [1] CRAN (R 4.3.3)\n   systemfonts     1.1.0       2024-05-15 [1] CRAN (R 4.3.2)\n   textshaping     0.4.0       2024-05-24 [1] CRAN (R 4.3.2)\n   tibble        * 3.2.1       2023-03-20 [1] CRAN (R 4.3.2)\n   tidyr         * 1.3.1       2024-01-24 [1] CRAN (R 4.3.2)\n   tidyselect      1.2.1       2024-03-11 [1] CRAN (R 4.3.3)\n   tidyverse     * 2.0.0       2023-02-22 [1] CRAN (R 4.3.2)\n   timechange      0.3.0       2024-01-18 [1] CRAN (R 4.3.2)\n   timeplyr        0.8.2       2024-08-17 [1] CRAN (R 4.3.3)\n   tzdb            0.4.0       2023-05-12 [1] CRAN (R 4.3.2)\n   utf8            1.2.4       2023-10-22 [1] CRAN (R 4.3.2)\n   vctrs           0.6.5       2023-12-01 [1] CRAN (R 4.3.2)\n   vroom           1.6.5       2023-12-05 [1] CRAN (R 4.3.2)\n   withr           3.0.1       2024-07-31 [1] CRAN (R 4.3.2)\n   xfun            0.47        2024-08-17 [1] CRAN (R 4.3.3)\n   xml2            1.3.6       2023-12-04 [1] CRAN (R 4.3.2)\n   yaml            2.3.10      2024-07-26 [1] CRAN (R 4.3.2)\n\n [1] C:/Program Files/R/R-4.3.2/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Learning for Getting Ahead",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nReading Time\n\n\n\n\n\n\n2024-08-11\n\n\nTaxonomy Codes\n\n\n10 min\n\n\n\n\n2024-08-17\n\n\nMedicare Physician Fee Schedule\n\n\n38 min\n\n\n\n\n2024-08-20\n\n\nMedical Codes as Matrices\n\n\n4 min\n\n\n\n\n2024-08-21\n\n\nThe Art of DAR\n\n\n8 min\n\n\n\n\n2024-08-24\n\n\nBuilding an NPI Constructor\n\n\n12 min\n\n\n\n\n2024-08-25\n\n\nClaims Analysis\n\n\n16 min\n\n\n\n\n2024-08-25\n\n\nBuilding Claims Rules\n\n\n26 min\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/dar/art_of_dar.html",
    "href": "posts/dar/art_of_dar.html",
    "title": "The Art of DAR",
    "section": "",
    "text": "Average Days in Accounts Receivable (DAR or Average Days in AR) is a common financial metric known as an efficiency ratio.\nDAR measures the average number of days it takes for a business to collect money owed for services rendered from the responsible parties.\nIts function in the healthcare revenue cycle is as a high-level monitor of the financial health of a healthcare entity.\nThe following is a thorough overview of everything you never knew you didn’t want to know about DAR. Let’s start off with some background and terminology. See Note 1 for more information on the American healthcare economic model.\n\nAging of Accounts\n\nAn account is a billable episode of care. It begins to age once it is billed to the guarantor. These outstanding accounts are monitored in 30-day blocks or bins ([0, 30), [31, 60), [61, 90), [91, 120), and [121, \\infty)) by the number of accounts, the amount owed by each bin and the responsible parties. The older the account, the less likely it will be paid.\n\n\n\n\nGuarantor\n\nThe responsible party for the amount owed (an insurance payer, a patient, etc.) Most claims are originally billed to insurance and, until the insurance makes a payment, the responsibility for the payment continues to be with the insurance payer. After the payer makes or denies a payment (with no just cause for an appeal), the responsibility for the balance of goes to the patient (to be sent an invoice) or the physician (to be written off.)\n\nAccounts Receivable\n\nAR represents money owed to the healthcare practice by patients and/or insurance carriers. The AR balance is the total charges billed to an insurance payer or patient for services rendered but not yet collected. The balance can only be reduced by payment or by adjustments, contractual or otherwise. The AR cycle begins with the delivery of services and ends with reconciliation, or when the balance owed equals zero.\n\nAverage Days in AR\n\nA mathematical formula for the average number of days it takes a business to collect money that it is owed. A low average is good. A high average signals a problem within the revenue cycle.\n\n\n\nSo now we know that a low Days in AR number is good and a high number is bad. How low is good though? How high is bad?\nLet’s say that a practice has a DAR of 95 days. This means that, on average, it takes the practice 95 days to collect it’s outstanding balances. Let’s start with what we can say for sure about a Days in AR of 95:\n\n95 days is roughly equal to a little over three months.\nTherefore, there is three months of unpaid work sitting in Accounts Receivable.\nAs such, this practice will need three months of cash reserves on hand to meet its financial obligations.\n\nThe ideal Days in AR depends entirely upon the medical practice, its customers (patients), its customers’ payers, the services it supplies, the providers performing those services, and the financial situation of the practice.\n\n\n\n\n\n\nNote 1: The American Healthcare Economic Model\n\n\n\n\n\nTo understand the healthcare version of Days in AR, you need to first understand the environment in which it is used.\nTypically, companies sell their products or services directly to consumers and are paid immediately at the point of service (POS). This is called a business-to-consumer revenue model.\nAnother revenue model type is the business-to-business (B2B) model, concerning businesses that transact primarily with each other. Purchases between two businesses tend to be much larger. As such, B2B businesses invoice on a monthly basis, meaning no payment for 30+ days.\nSomewhere in between these two models is the American healthcare system. This gray area is caused by a middleman called a third party payer. Better known as an insurance company, providers enter into a contractual agreement with this third party to be paid for their services at a reduced rate.\nIn exchange, a provider gains access to the payer’s large subscriber base. The difference between the charge a provider submits to a payer and the contracted rate he or she has agreed to is called the contractual adjustment, which is written off once a claim has been adjudicated.\nThe contractual adjustment introduces a critical inefficiency to the healthcare revenue model. Rather than prices being determined by supply and demand, they are set by individually negotiated arrangements, the end result of which is no real demand or pricing curve.\nThis issue is much too complex for me to properly do justice to here. It is, however, an essential concept to grasp when trying to understand healthcare reimbursement. In other words, healthcare reimbursement is crazy, not you.\n\n\n\n\n\n \\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\n\ndplyr::tibble(\n  \n)\n\n# A tibble: 0 × 0\n\n\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\nTable 1: Step 1\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n\n    \n\nAug 1, 2024 - Aug 31, 2024\n    \n\n\nndays\n\n      \ngct\n\n      \narbt\n\n    \n\n\n31\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\nTable 2: Step 2\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n\n    \n\nAug 1, 2024 - Aug 31, 2024\n    \n\n\nndays\n\n      \ngct\n\n      \narbt\n\n      \ndct\n\n      \ndart\n\n    \n\n\n31\n$131,440\n$203,460\n$4,240\n47.99\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99."
  },
  {
    "objectID": "posts/dar/art_of_dar.html#formula-for-dar",
    "href": "posts/dar/art_of_dar.html#formula-for-dar",
    "title": "The Art of DAR",
    "section": "",
    "text": "\\overline{dar} = \\ earb \\div (\\ gc \\ \\div \\ n_{days}\\ )\\ \n\n \\overline{dar_t} = \\frac{arb_t}{gc_t\\div n_{days}} \nWhere:\n\ndplyr::tibble(\n  \n)\n\n# A tibble: 0 × 0\n\n\nt = \\text{Time Period} The subscript t denotes the time period being measured.\nn_{days} = \\text{Days in Period} The number of days in t.\ngc_t = \\text{Gross Charges} The sum of all charges billed during t.\n\\overline{dc_t} = \\text{Average Daily Charge} gc_t divided by n_{days}.\narb_t = \\text{AR Balance} The sum of all outstanding balances at close of business (COB) on the final day of t.\n\\overline{dar_t} = \\text{Average Days in AR} arb_t divided by \\overline{dc_t} for time period t.\n\n\n\n\n\n\nNote 2: Example in R\n\n\n\nLet’s say we want to calculate \\overline{dar_t} for the current month. Our Gross Charges total is $131,440 and our AR Balance is $203,460:\n\nex &lt;- tibble(\n  ndays = days_in_month(today()),\n  gc = 131440,\n  arb = 203460)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = 2:3, decimals = 0) |&gt; \n  gt_opts()\n\n\nTable 1: Step 1\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n\n    \n\nAug 1, 2024 - Aug 31, 2024\n    \n\n\nndays\n\n      \ngct\n\n      \narbt\n\n    \n\n\n31\n$131,440\n$203,460\n\n\n\n\n\n\n\n\nWe have the three numbers we need, let’s plug them into our formula:\n\nex &lt;- ex |&gt; \n  mutate(\n    dc = gc / ndays,\n    dar = arb / dc)\n\nex |&gt; \n  gt() |&gt; \n  tab_header(\n    title = md(\"**Average Days in AR** _Calculation_\"),\n    subtitle = drng()) |&gt;\n  cols_label(\n    ndays = md(\"**n**&lt;i&gt;&lt;sub&gt;days&lt;/sub&gt;&lt;/i&gt;\"),\n    gc    = md(\"**gc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    arb   = md(\"**arb**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dc    = md(\"**dc**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\"),\n    dar   = md(\"**dar**&lt;i&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;/i&gt;\")) |&gt;\n  fmt_currency(columns = c(2:4), decimals = 0) |&gt; \n  fmt_number(columns = 5, decimals = 2) |&gt;\n  gt_opts()\n\n\nTable 2: Step 2\n\n\n\n\n\n\n\n\nAverage Days in AR Calculation\n\n    \n\nAug 1, 2024 - Aug 31, 2024\n    \n\n\nndays\n\n      \ngct\n\n      \narbt\n\n      \ndct\n\n      \ndart\n\n    \n\n\n31\n$131,440\n$203,460\n$4,240\n47.99\n\n\n\n\n\n\n\n\nAnd there we have it, our Average Daily Charge is $4,240 and our Days in AR is 47.99."
  },
  {
    "objectID": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "href": "posts/dar/art_of_dar.html#earb-target-for-dart",
    "title": "The Art of DAR",
    "section": "EARb Target for DARt",
    "text": "EARb Target for DARt\nIn the first example, our DAR was 47.99. That’s approximately 13 days over our DARt of 35. What would our EARB need to have been to bring us under our DARt? Here’s our formula:\n eart = (\\ dart \\cdot gc\\ )\\ \\div days_n \nWe’ll calculate the EARB we needed as well as the difference between the two AR figures:"
  },
  {
    "objectID": "posts/mpfs/mpfs.html",
    "href": "posts/mpfs/mpfs.html",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This is an overview of the general format of the Medicare Physician Fee Schedule (MPFS), specifically the PFS Relative Value File. Updates are released on the first day of each quarter. If required, a correction notice may be issued. The file is a zip archive and typically contains six files:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRVU\n\n\nData Dictionary, Record Layout and File Documentation\n\n\n\n\n\n\n\nPPRRVU\n\n\nPhysician Fee Schedule RVUs and Policy Indicators\n\n\n\n\n\n\n\nGPCI\n\n\nGeographic Practice Cost Index Components for each Carrier/Locality combination\n\n\n\n\n\n\n\nLOCCO\n\n\nLocality to County Crosswalk\n\n\n\n\n\n\n\nANES\n\n\nAnesthesia Conversion Factors\n\n\n\n\n\n\n\nOPPSCAP\n\n\nOPPS-based capitation-adjusted payment amounts.\n\n\n\n\n\n\n\nWhat follows is a thorough dissection of each file in the archive, starting with the RVU file.\n\nThe pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")\n\n\n\ndplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\n\nHCPCS\n\n16,324\n18,499\n100.00%\n\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\n\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n\n+\n133\n0.72%\n\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\n\nNA\n4,066\n21.98%\n\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\n\nNA\n2,468\n13.34%\n\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\n\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\n\nwork_rvu\n\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\n\nnon_fac_pe_rvu\n\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\n\nfacility_pe_rvu\n\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\n\nmp_rvu\n\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\n\nnon_facility_total\n\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\n\nfacility_total\n\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\n\npre_op\n\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\n\nintra_op\n\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\n\npost_op\n\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\n\nconv_factor\n\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\n\nnon_facility_pe_used_for_opps_payment_amount\n\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\n\nfacility_pe_used_for_opps_payment_amount\n\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\n\nmp_used_for_opps_payment_amount\n\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁\n\n\n\n\n\n\n\nThe MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment.\n\n\n\nAccepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925\n\n\n\nThis file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment.\n\n\nProvides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFacility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#rvu",
    "href": "posts/mpfs/mpfs.html#rvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The pdf labeled “RVU” is a comprehensive guide to the structure and contents of each file in the Relative Value zip file. It describes the methodology, that contains a data dictionary, record layout, and documentation\n\nrvu24a &lt;- rbrvs::get_source(year = 2024, source = \"pprrvu\")$rvu24a_jan |&gt; \n  dplyr::mutate(\n    mod = cheapr::factor_(mod),\n    status_code = cheapr::factor_(status_code),\n    pctc_ind = cheapr::factor_(pctc_ind),\n    glob_days = cheapr::factor_(glob_days),\n    mult_proc = cheapr::factor_(mult_proc),\n    bilat_surg = cheapr::factor_(bilat_surg),\n    asst_surg = cheapr::factor_(asst_surg),\n    co_surg = cheapr::factor_(co_surg),\n    team_surg = cheapr::factor_(team_surg),\n    physician_supervision_of_diagnostic_procedures = cheapr::factor_(physician_supervision_of_diagnostic_procedures),\n    diagnostic_imaging_family_indicator = cheapr::factor_(diagnostic_imaging_family_indicator),\n    )\n\nover &lt;- cheapr::overview(rvu24a, hist = TRUE)\n\nhcpcs_row &lt;- over$categorical |&gt; \n  dplyr::select(variable = col, value = n_unique) |&gt; \n  dplyr::filter(variable == \"hcpcs\")"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators",
    "href": "posts/mpfs/mpfs.html#indicators",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "dplyr::left_join(\n  vars |&gt; dplyr::filter(!is.na(value)),\n  dplyr::tibble(\n    variable = names(idx[collapse::funique(vars$variable)]),\n    description = idx[collapse::funique(vars$variable)]),\n  by = dplyr::join_by(variable)\n  ) |&gt; \n  fuimus::combine(\n    name = variable, \n    columns = c('variable', 'description'), \n    sep = \"&lt;br&gt;&lt;br&gt;\"\n    ) |&gt;\n  dplyr::add_row(\n    variable = toupper(hcpcs_row$variable),\n    value = as.character(format(hcpcs_row$value, big.mark = \",\")),\n    n = 18499,\n    pct = 1.0,\n    .before = 1\n    ) |&gt; \n  gt::gt(\n    groupname_col = \"variable\",\n    # rowname_col = \"value\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::tab_stubhead(label = \"Variable\") |&gt; \n  gt::cols_label(\n    value = \"Unique\\nValues\",\n    n = \"Total\",\n    pct = \"Percentage\"\n    ) |&gt;\n  gt::fmt_percent(columns = pct) |&gt; \n  gt::fmt_integer(columns = n) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::opt_all_caps() |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE,\n    # stub.font.weight = \"bold\",\n    # stub_row_group.font.weight = \"bold\",\n    column_labels.font.weight = \"bold\"\n  )\n\n\n\n\n\nVariable\n      Unique\nValues\n      Total\n      Percentage\n    \n\n\n\nHCPCS\n\n16,324\n18,499\n100.00%\n\n\n\nMODFor diagnostic tests, a blank in this field denotes the global service and the following modifiers identify the components:26 = Professional componentTC = Technical component For services other than those with a professional and/or technical component, a blank will appear in this field with one exception: the presence of CPT modifier -53 indicates that separate RVUs and a fee schedule amount have been established for procedures which the physician terminated before completion. This modifier is used only with colonoscopy CPT codes 44388 and 45378, or with G0105 and G0121. Any other codes billed with modifier -53 are subject to carrier medical review and priced by individual consideration.53 = Discontinued Procedure - Under certain circumstances, the physician may elect to terminate a surgical or diagnostic procedure. Due to extenuating circumstances, or those that threaten the well being of the patient, it may be necessary to indicate that a surgical or diagnostic procedure was started but discontinued.\n\n26\n1,096\n5.92%\n\n\nTC\n1,076\n5.82%\n\n\n53\n4\n0.02%\n\n\n\nSTATUS CODEIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. Only RVUs associated with status codes of A, R, or T, are used for Medicare payment.\n\nA\n8,975\n48.52%\n\n\nX\n2,527\n13.66%\n\n\nI\n1,411\n7.63%\n\n\nE\n1,343\n7.26%\n\n\nM\n1,201\n6.49%\n\n\nC\n1,156\n6.25%\n\n\nR\n1,050\n5.68%\n\n\nN\n327\n1.77%\n\n\nJ\n276\n1.49%\n\n\nP\n142\n0.77%\n\n\nB\n83\n0.45%\n\n\nT\n8\n0.04%\n\n\n\nNOT USED FOR MEDICARE PAYMENTThe name says it all\n\n+\n133\n0.72%\n\n\n\nNON FAC INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the non-facility setting.\n\nNA\n4,066\n21.98%\n\n\n\nFACILITY INDICATORAn NA in this field indicates that this procedure is rarely or never performed in the facility setting.\n\nNA\n2,468\n13.34%\n\n\n\nPCTC INDProfessional Component (PC) or Technical Component (TC) Indicator\n\n9\n7,704\n41.65%\n\n\n0\n7,128\n38.53%\n\n\n1\n3,229\n17.45%\n\n\n3\n178\n0.96%\n\n\n5\n104\n0.56%\n\n\n7\n74\n0.40%\n\n\n2\n44\n0.24%\n\n\n6\n20\n0.11%\n\n\n4\n17\n0.09%\n\n\n8\n1\n0.01%\n\n\n\nGLOB DAYSGlobal Surgery postoperative timeframes that apply to payment for each surgical procedure or another indicator that describes how the global concept applies to the service.\n\nXXX\n11,262\n60.88%\n\n\n090\n3,771\n20.38%\n\n\n000\n1,326\n7.17%\n\n\nYYY\n933\n5.04%\n\n\nZZZ\n719\n3.89%\n\n\n010\n471\n2.55%\n\n\nMMM\n17\n0.09%\n\n\n\nMULT PROCMultiple Procedure (CPT Modifier 51) indicator shows which payment adjustment rule for multiple procedures applies to the service.\n\n9\n7,876\n42.58%\n\n\n2\n5,287\n28.58%\n\n\n0\n4,044\n21.86%\n\n\n4\n420\n2.27%\n\n\n3\n361\n1.95%\n\n\n6\n361\n1.95%\n\n\n7\n98\n0.53%\n\n\n5\n52\n0.28%\n\n\n\nBILAT SURGBilateral Surgery Indicator (CPT Modifier 50) for services subject to a payment adjustment.\n\n9\n7,892\n42.66%\n\n\n0\n7,784\n42.08%\n\n\n1\n2,203\n11.91%\n\n\n2\n383\n2.07%\n\n\n3\n237\n1.28%\n\n\n\nASST SURGAssistant at Surgery (Modifiers AS, 80, 81, and 82) indicator for services where Medicare never pays an assistant at surgery.\n\n9\n7,940\n42.92%\n\n\n0\n5,595\n30.24%\n\n\n2\n2,781\n15.03%\n\n\n1\n2,183\n11.80%\n\n\n\nCO SURGCo-Surgeons (Modifier 62) This field gives an indicator for services for which Medicare may pay 2 surgeons, each in a different specialty.\n\n9\n7,885\n42.62%\n\n\n0\n7,839\n42.38%\n\n\n1\n2,474\n13.37%\n\n\n2\n301\n1.63%\n\n\n\nTEAM SURGTeam Surgeons (Modifier 66) This field gives an indicator for services for which Medicare may pay team surgeons.\n\n0\n10,430\n56.38%\n\n\n9\n7,885\n42.62%\n\n\n1\n133\n0.72%\n\n\n2\n51\n0.28%\n\n\n\nENDO BASEEndoscopic Base Code for each code with a multiple surgery indicator of 3.\n\n52000\n44\n0.24%\n\n\n31231\n30\n0.16%\n\n\n43235\n30\n0.16%\n\n\n31622\n20\n0.11%\n\n\n43200\n18\n0.10%\n\n\n49320\n18\n0.10%\n\n\n29870\n15\n0.08%\n\n\n45330\n14\n0.08%\n\n\n45378\n14\n0.08%\n\n\n44388\n13\n0.07%\n\n\n29805\n11\n0.06%\n\n\n43260\n10\n0.05%\n\n\n45300\n10\n0.05%\n\n\n46600\n10\n0.05%\n\n\n44360\n9\n0.05%\n\n\n31525\n8\n0.04%\n\n\n31575\n8\n0.04%\n\n\n31526\n7\n0.04%\n\n\n52351\n7\n0.04%\n\n\n58555\n7\n0.04%\n\n\n29860\n6\n0.03%\n\n\n29830\n5\n0.03%\n\n\n29840\n5\n0.03%\n\n\n43191\n5\n0.03%\n\n\n50570\n5\n0.03%\n\n\n57452\n5\n0.03%\n\n\n31505\n4\n0.02%\n\n\n47552\n4\n0.02%\n\n\n50951\n4\n0.02%\n\n\n44376\n3\n0.02%\n\n\n44380\n3\n0.02%\n\n\n50551\n3\n0.02%\n\n\n0652T\n2\n0.01%\n\n\n50970\n2\n0.01%\n\n\n43197\n1\n0.01%\n\n\n66710\n1\n0.01%\n\n\n\nPHYSICIAN SUPERVISION OF DIAGNOSTIC PROCEDURESMedicare uses this field in post payment review.\n\n09\n17,465\n94.41%\n\n\n01\n533\n2.88%\n\n\n02\n249\n1.35%\n\n\n03\n207\n1.12%\n\n\n04\n16\n0.09%\n\n\n6A\n13\n0.07%\n\n\n7A\n9\n0.05%\n\n\n21\n5\n0.03%\n\n\n05\n1\n0.01%\n\n\n66\n1\n0.01%\n\n\n\nDIAGNOSTIC IMAGING FAMILY INDICATORIdentifies the applicable Diagnostic Service family for HCPCS codes with a Multiple Procedure indicator of 4. For services effective January 1, 2011, and after, family indicators 01 - 11 won’t populate.\n\n99\n18,055\n97.60%\n\n\n88\n444\n2.40%\n\n\n\n\n\n\n\nover$numeric |&gt; \n  dplyr::select(\n    variable = col, \n    unique = n_unique,\n    # min = p0, \n    # p25,\n    # median = p50,\n    p75,\n    max = p100,\n    iqr, \n    mean,\n    sd,\n    hist\n    ) |&gt;\n  gt::gt(\n    groupname_col = \"variable\",\n    row_group_as_column = TRUE,\n    process_md = TRUE) |&gt; \n  gt::fmt_integer(columns = unique) |&gt;\n  gt::fmt_number(columns = p75:sd) |&gt;\n  gt::opt_table_font(font = gt::google_font(name = \"Recursive\")) |&gt; \n  gt::tab_options(\n    heading.align = \"left\",\n    heading.border.bottom.color = \"#4758AB\",\n    heading.title.font.weight = \"bold\",\n    heading.background.color = \"#4758AB\", # \"#f8f9fa\",\n    quarto.disable_processing = TRUE,\n    data_row.padding.horizontal = gt::px(20),\n    column_labels.padding.horizontal = gt::px(20),\n    table.border.top.color = \"#4758AB\",\n    table.width = gt::pct(100),\n    column_labels.hidden = FALSE\n  )\n\n\n\n\n\n\n      unique\n      p75\n      max\n      iqr\n      mean\n      sd\n      hist\n    \n\n\n\nwork_rvu\n\n2,486\n3.21\n108.91\n3.21\n3.88\n8.51\n▇▁▁▁▁\n\n\n\nnon_fac_pe_rvu\n\n2,310\n5.35\n355.87\n5.35\n4.01\n10.52\n▇▁▁▁▁\n\n\n\nfacility_pe_rvu\n\n2,079\n3.66\n53.07\n3.66\n3.03\n5.60\n▇▁▁▁▁\n\n\n\nmp_rvu\n\n1,026\n0.43\n28.99\n0.43\n0.83\n2.20\n▇▁▁▁▁\n\n\n\nnon_facility_total\n\n3,877\n9.79\n364.53\n9.79\n8.71\n18.07\n▇▁▁▁▁\n\n\n\nfacility_total\n\n3,683\n7.50\n171.00\n7.50\n7.74\n15.57\n▇▁▁▁▁\n\n\n\npre_op\n\n8\n0.00\n0.17\n0.00\n0.02\n0.04\n▇▁▂▁▁\n\n\n\nintra_op\n\n14\n0.00\n0.84\n0.00\n0.17\n0.32\n▇▁▁▁▂\n\n\n\npost_op\n\n11\n0.00\n0.23\n0.00\n0.03\n0.07\n▇▁▁▁▁\n\n\n\nconv_factor\n\n1\n32.74\n32.74\n0.00\n32.74\n0.00\n▁▁▇▁▁\n\n\n\nnon_facility_pe_used_for_opps_payment_amount\n\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\n\nfacility_pe_used_for_opps_payment_amount\n\n417\n0.00\n159.54\n0.00\n0.90\n7.15\n▇▁▁▁▁\n\n\n\nmp_used_for_opps_payment_amount\n\n81\n0.00\n1.83\n0.00\n0.01\n0.06\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#pprvu",
    "href": "posts/mpfs/mpfs.html#pprvu",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "The MPFS is a listing of the relative value units (RVUs) for each CPT code, as well as the geographic practice cost index (GPCI) for each code. The RVUs are used to calculate the payment amount for each service, while the GPCI is used to adjust the payment amount based on the location where the service is provided.\nThis file contains information on services covered by the MPFS in 2024. For more than 10,000 physician services, the file contains the associated RVUs, a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe MPFS amounts are adjusted to reflect the variation in practice costs from area to area. A GPCI has been established for every Medicare payment locality for each of the three components of a procedure’s RVU:\n\nPhysician Work\nPractice Expense\nMalpractice Expense (sometimes called Professional Liability Insurance)\n\nThe GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n x = [(RVU_w \\times GPCI_w) + (RVU_p \\times GPCI_p) + (RVU_m \\times GPCI_m)] \\times CF \n\n y = 0.95x \n\n z = 0.95(1.15x) \n\n\n\n\n\n\nMany Ways to Say the Same Thing\n\n\n\n\nAs there is a corresponding GPCI value for each of the three components of an RVU, the formula is essentially the dot product of the RVU and GPCI vectors, multiplied by the conversion factor:\n\n a \\cdot b = a_1b_1 + a_2b_2 + a_3b_3 \nSetting up the variables:\n\nwrvu  = 6.26   # Work RVU\nwgpci = 1      # Work GPCI\n\npgpci = 0.883  # Practice GPCI\nprvu  = 4.36   # Practice RVU\n\nmrvu  = 0.99   # Malpractice RVU\nmgpci = 1.125  # Malpractice GPCI\n\ncf    = 32.744 # Conversion Factor\n\n\nBasic Calculation:\n\n((wrvu * wgpci) + \n   (prvu * pgpci) + \n   (mrvu * mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith base R’s Matrix Multiplication Infix Operator:\n\nas.vector(\n  c(wrvu, prvu, mrvu) %*% \n  c(wgpci, pgpci, mgpci) * cf)\n\n[1] 367.5065\n\n\n\nWith the pracma package’s dot() function:\n\npracma::dot(\n  c(wrvu, prvu, mrvu), \n  c(wgpci, pgpci, mgpci)) * cf\n\n[1] 367.5065\n\n\n\nWith the northstar package’s calculate_amounts() function:\n\ncalculate_amounts(\n  wrvu  = 6.26,\n  nprvu = 7.92,\n  fprvu = 4.36,\n  mrvu  = 0.99,\n  cf    = 32.744,\n  wgpci = 1,\n  pgpci = 0.883,\n  mgpci = 1.125\n)\n\nFacility Amounts:\n\nRVU Total ............ 11.22\nParticipating ........ $367.51\nNon-Particpating ..... $349.13\nLimiting Charge ...... $401.50\n\nNon-Facility Amounts:\n\nRVU Total ............ 14.37\nParticipating ........ $470.44\nNon-Particpating ..... $446.91\nLimiting Charge ...... $513.95\n\n\n\n\n\n\n\n\n\n\nNon-Facility vs. Facility\n\n\n\nUnder the MPFS, many procedures have separate payment amounts for physician services when provided in facility and non-facility settings.\nThe amount is determined by the Place of Service (POS) code. In general, the POS code reflects the actual place where the patient receives the face-to-face service and determines whether the facility or non-facility payment rate is paid.\nServices rendered to a patient who is an inpatient of a hospital (POS code 21) or an outpatient of a hospital (POS codes 19 or 22), the facility rate is paid, regardless of where the face-to-face encounter with the patient occurred.\n\n\n\n\n\n\n\n\n\nTherapy Code Capitation\n\n\n\nCertain therapy codes will receive a 50% reduction to the Practice Expense.\nSection 5102(b) of the Deficit Reduction Act of 2005 requires a payment cap on the Technical Component (TC) of certain diagnostic imaging procedures and the TC portions of the global diagnostic imaging services.\nThis cap is based on the Outpatient Prospective Payment System (OPPS) payment. To implement this provision, the Physician Fee Schedule amount is compared to the OPPS payment amount and the lower amount is used in the formula to calculate payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#accepting-assignment",
    "href": "posts/mpfs/mpfs.html#accepting-assignment",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Accepting assignment means that a healthcare provider or facility is partnered with Medicare and is required by law to charge only the Medicare-approved amount for various services. This amount is preset by Medicare and is often less than many healthcare facilities would charge.\nBecause of this, when patients receive care at a facility that accepts assignment, they will be required to pay lower out-of-pocket costs as Medicare will cover the full amount of the service cost. Personal costs only include the premium and any charges up to the deductible amount.\nPhysicians or facilities that do not accept assignment are a non-participating providers. All physicians are required to file with Medicare, indicating that they either accept or do not accept assignment. If a provider does not accept assignment, it means that they are not required to charge only the Medicare-approved amount for services.\n\nOne possible option for non-participating providers is to choose to accept assignment for some services but to decline assignment for others. For services that they accept assignment for, they are only able to bill the Medicare-approved amount. However, for other services, they are allowed to charge up to 15 percent more than the Medicare-approved amount.\nThis limit cap is known as the limiting charge. Providers that do not fully participate only receive 95 percent of the Medicare-approved amount when Medicare reimburses them for the cost of care. In turn, the provider can charge the patient up to 15 percent more than this reimbursement amount. This extra charge will not be covered by Medicare, which causes Medicare recipients to incur greater out-of-pocket costs.\nThe Medicare limiting charge is the maximum amount a Non-Participating Provider can charge for services submitted on a non-assigned claim. This is that maximum amount a beneficiary could legally be charged.\n\nThe Medicare limiting charge is, by law, set at 115\\% of the payment amount for the service furnished by the Non-Participating Physician.\nHowever, the law sets the payment amount for Non-Participating Physicians at 95\\% of the payment amount for Participating Physicians (i.e., the Fee Schedule amount).\nCalculating 95\\% of 115\\% of an amount, x, is equivalent to x \\times 1.0925 (or 109.25\\%):\n\n# 95% of 115% of 10\n(10 * 1.15) * 0.95 \n\n[1] 10.925\n\n# 109.25% of 10\n10 * 1.0925 \n\n[1] 10.925\n\n# using the northstar package\nlimiting_charge(10)\n\n[1] 10.925"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#relative-value-file",
    "href": "posts/mpfs/mpfs.html#relative-value-file",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "This file contains information on services covered by the Medicare Physician Fee Schedule (MPFS). For more than 10,000 physician services, the file contains the associated relative value units (RVUs), a fee schedule status indicator, and various payment policy indicators needed for payment adjustment (i.e., payment of assistant at surgery, team surgery, bilateral surgery, etc.).\nThe Medicare physician fee schedule amounts are adjusted to reflect the variation in practice costs from area to area. A geographic practice cost index (GPCI) has been established for every Medicare payment locality for each of the three components of a procedure’s relative value unit (i.e., the RVUs for work, practice expense, and malpractice). The GPCIs are applied in the calculation of a fee schedule payment amount by multiplying the RVU for each component times the GPCI for that component.\n\n\nIndicates whether the code is in the fee schedule and whether it is separately payable if the service is covered. See Attachment A for description of values.\nOnly RVUs associated with status codes of A, R, or T, are used for Medicare payment."
  },
  {
    "objectID": "posts/mpfs/mpfs.html#global-surgery-days",
    "href": "posts/mpfs/mpfs.html#global-surgery-days",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Provides time frames that apply to each surgical procedure.\n\n\n\nPreoperative\nIntraoperative\nPostoperative"
  },
  {
    "objectID": "posts/mpfs/mpfs.html#indicators-1",
    "href": "posts/mpfs/mpfs.html#indicators-1",
    "title": "Medicare Physician Fee Schedule",
    "section": "",
    "text": "Facility\nNon-Facility\n\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Facility setting:\n\n\nAn NA in this field indicates that this procedure is rarely or never performed in the Non-Facility setting:\n\n\n\n\nIndicates applicable payment adjustment rule for multiple procedures (modifier 51)."
  },
  {
    "objectID": "posts/rules/claims_rules.html",
    "href": "posts/rules/claims_rules.html",
    "title": "Building Claims Rules",
    "section": "",
    "text": "Rule Descriptors\n\n\nid: Unique Numeric Identifier; &lt;Primary Key&gt;\n\n\nname: Unique Alphanumeric Identifier; &lt;Primary Key&gt;\n\n\ncategory: High-Level Classification\n\ndescription: Human Readable Description of Rule Steps\n\nrationale: Reason for Implementation\n\nsources: URLs, References, or Documentation\n\n\nStep Components\n\n\nstep: Indicates Order of Step in Rule Validation\n\nvariable: Variable to Evaluate\n\nclass: Variable Data Class\n\naction: Operation Performed to Test for Expected State\n\nmethod: Operation Performed to Test for Expected State\n\nexpression: Actual Code to Run\n\nvalue: Value Representing Expected State of Rule Variable\n\n\n\n\nrules[1, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 1\n$ step        &lt;int&gt; 1\n$ name        &lt;chr&gt; \"ExpiredCPT\"\n$ variable    &lt;chr&gt; \"CPT Code\"\n$ action      &lt;chr&gt; \"is\"\n$ value       &lt;chr&gt; \"43760\"\n$ category    &lt;chr&gt; \"Expired CPT\"\n$ description &lt;chr&gt; \"CPT Code is [43760] AND Encounter Date of Service after […\n$ rationale   &lt;chr&gt; \"43760 expired effective 1/1/19 - to report, please see (4…\n\nrules[2, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 1\n$ step        &lt;int&gt; 2\n$ name        &lt;chr&gt; \"ExpiredCPT\"\n$ variable    &lt;chr&gt; \"Encounter Date of Service\"\n$ action      &lt;chr&gt; \"after\"\n$ value       &lt;chr&gt; \"01/01/2019\"\n$ category    &lt;chr&gt; \"Expired CPT\"\n$ description &lt;chr&gt; \"CPT Code is [43760] AND Encounter Date of Service after […\n$ rationale   &lt;chr&gt; \"43760 expired effective 1/1/19 - to report, please see (4…\n\n\n\nlibrary(S7)\n\nrule &lt;- S7::new_class(\n  \"crule\",\n  properties = list(\n    id = S7::class_integer,\n    name = S7::class_character,\n    category = S7::class_character,\n    definition = S7::class_character,\n    rationale = S7::class_character,\n    expression = S7::class_expression,\n    steps = S7::class_integer\n    ),\n  package = \"cruler\"\n  )\n\nrule_01 &lt;- rule(\n  id = 1L,\n  name = \"HCPCS:EX:01\",\n  category = \"Invalid HCPCS\",\n  definition = \"&lt;Date of Service&gt; is [2019-01-01] or after |AND| &lt;HCPCS Code&gt; is [43760]\",\n  rationale = \"Effective 2019-01-01, HCPCS 43760 is invalid; See 43762 - 43763\",\n  expression = expression(dos &gt;= as.Date(\"2019-01-01\") && hcpcs == 43760),\n  steps = 2L\n  )\n\nrule_01\n\n&lt;cruler::crule&gt;\n @ id        : int 1\n @ name      : chr \"HCPCS:EX:01\"\n @ category  : chr \"Invalid HCPCS\"\n @ definition: chr \"&lt;Date of Service&gt; is [2019-01-01] or after |AND| &lt;HCPCS Code&gt; is [43760]\"\n @ rationale : chr \"Effective 2019-01-01, HCPCS 43760 is invalid; See 43762 - 43763\"\n @ expression:  expression(dos &gt;= as.Date(\"2019-01-01\") && hcpcs == 43760)\n @ steps     : int 2\n\n\n\nrules[3, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 2\n$ step        &lt;int&gt; 1\n$ name        &lt;chr&gt; \"ALBCBS1\"\n$ variable    &lt;chr&gt; \"Primary Insurance\"\n$ action      &lt;chr&gt; \"is\"\n$ value       &lt;chr&gt; \"BCBS\"\n$ category    &lt;chr&gt; \"NDC Numbers\"\n$ description &lt;chr&gt; \"Primary Insurance is [BCBS] AND CPT Code is [J*] AND CPT …\n$ rationale   &lt;chr&gt; \"Alabama BCBS requires NDC numbers.\"\n\nrules[4, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 2\n$ step        &lt;int&gt; 2\n$ name        &lt;chr&gt; \"ALBCBS1\"\n$ variable    &lt;chr&gt; \"CPT Code\"\n$ action      &lt;chr&gt; \"is\"\n$ value       &lt;chr&gt; \"J*\"\n$ category    &lt;chr&gt; \"NDC Numbers\"\n$ description &lt;chr&gt; \"Primary Insurance is [BCBS] AND CPT Code is [J*] AND CPT …\n$ rationale   &lt;chr&gt; \"Alabama BCBS requires NDC numbers.\"\n\nrules[5, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 2\n$ step        &lt;int&gt; 3\n$ name        &lt;chr&gt; \"ALBCBS1\"\n$ variable    &lt;chr&gt; \"CPT NDC (Presence)\"\n$ action      &lt;chr&gt; \"is not\"\n$ value       &lt;chr&gt; \"Present\"\n$ category    &lt;chr&gt; \"NDC Numbers\"\n$ description &lt;chr&gt; \"Primary Insurance is [BCBS] AND CPT Code is [J*] AND CPT …\n$ rationale   &lt;chr&gt; \"Alabama BCBS requires NDC numbers.\"\n\nrules[6, 2:10] |&gt; glimpse()\n\nRows: 1\nColumns: 9\n$ id          &lt;int&gt; 3\n$ step        &lt;int&gt; 1\n$ name        &lt;chr&gt; \"ALBCBS2\"\n$ variable    &lt;chr&gt; \"Primary Insurance\"\n$ action      &lt;chr&gt; \"is\"\n$ value       &lt;chr&gt; \"BCBS\"\n$ category    &lt;chr&gt; \"NDC Numbers\"\n$ description &lt;chr&gt; \"Primary Insurance is [BCBS (125)] AND CPT NDC (Presence) …\n$ rationale   &lt;chr&gt; \"Alabama BCBS requires NDC numbers on vaccine codes.\"\n\n\n\n\nid\nname: Split letters/numbers, categorize Payer, State, etc.\ncategory:\ndescription:\nrationale: Steps are detailed in the rationale that are missing from the ruleset\nsources: Extract urls from category\n\n\ndescriptors &lt;- rules |&gt; \n  select(id, name, category, description, rationale) |&gt; \n  distinct() |&gt; \n  mutate(sources = str_extract_all(category,\"https?://[^\\\\s]+\"),\n         category = str_remove_all(category,\"https?://[^\\\\s]+\")) |&gt;\n  unnest(sources, keep_empty = TRUE) |&gt;\n  separate_longer_delim(sources, delim = \"https:\") |&gt;\n  mutate(sources = na_if(sources, \"\") |&gt; str_squish(),\n         sources = if_else(!is.na(sources), str_c(\"https:\", sources), sources),\n         category = na_if(category, \"\") |&gt; str_squish(),\n         description = str_squish(description),\n         description = str_remove_all(description, \"►\"),\n         description = gsub(\",(?!\\\\s)\", \", \", description, perl = TRUE) |&gt; str_squish(),\n         rationale = str_squish(rationale),\n         rationale = str_remove_all(rationale, \"►\"),\n         rationale = gsub(\",(?!\\\\s)\", \", \", rationale, perl = TRUE) |&gt; str_squish()\n         ) |&gt; \n  nest(sources = c(sources))\n\ndescriptors\n\n# A tibble: 1,192 × 6\n      id name       category                      description rationale sources \n   &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;                         &lt;chr&gt;       &lt;chr&gt;     &lt;list&gt;  \n 1     1 ExpiredCPT Expired CPT                   CPT Code i… 43760 ex… &lt;tibble&gt;\n 2     2 ALBCBS1    NDC Numbers                   Primary In… Alabama … &lt;tibble&gt;\n 3     3 ALBCBS2    NDC Numbers                   Primary In… Alabama … &lt;tibble&gt;\n 4     4 ALBCBS3    NDC Numbers                   Primary In… Add acci… &lt;tibble&gt;\n 5     5 ALBCBS4    Wellness visits - BMI & BP r… Primary In… When fil… &lt;tibble&gt;\n 6     6 ALMCD1     Independent RHC claims        Primary In… RHC clai… &lt;tibble&gt;\n 7     7 ALMCD2     BMI requirement               Primary In… Beginnin… &lt;tibble&gt;\n 8     8 ALMCD3     Pediatric BMI                 Primary In… Pediatri… &lt;tibble&gt;\n 9     9 ALMCD4     Adult BMI                     Primary In… Adult BM… &lt;tibble&gt;\n10    10 ALMCD5     NDC requirement               Primary In… The NDC … &lt;tibble&gt;\n# ℹ 1,182 more rows\n\n\n\n\n# FIX\n\"VFC-GA\"\n\n[1] \"VFC-GA\"\n\n\"BCBSMI\"\n\n[1] \"BCBSMI\"\n\npayers &lt;- c(\"BCBS\", \"MCD\", \"VFC-\")\n\nother &lt;- c(\n  \"INTEG\",\n  \"LABS\",\n  \"NEURO\",\n  \"ORTHO\",\n  \"MEDSV\",\n  \"VACCN\",\n  \"COVID19-\",\n  \"E&M\",\n  \"UNVSL\",\n  \"ICD10-\",\n  \"RHC\",\n  \"ANEST\",\n  \"SURG\",\n  \"FQHC\",\n  \"TELEH\",\n  \"ASC\",\n  \"DIGES\",\n  \"RADIO\",\n  \"PRVNT\",\n  \"OPTHL\",\n  \"FOOT\",\n  \"FERTL\",\n  \"DME\",\n  \"AUDIO\",\n  \"OBGYN\")\n\n\ndescriptors |&gt; \n  reframe(\n    id,\n    name,\n    state = if_else(\n      str_sub(name, 1, 2) %in% state.abb, \n      str_sub(name, 1, 2), NA_character_),\n    payer = strex::str_extract_non_numerics(str_sub(name, 3, -1)),\n    n = strex::str_extract_numbers(name)\n  ) |&gt; \n  unnest(c(n, payer), keep_empty = TRUE) |&gt; \n  mutate(\n    state = if_else(\n      str_sub(payer, -2) %in% state.abb, \n      str_sub(payer, -2), state)\n  ) |&gt; \n  # filter(!is.na(state)) |&gt; \n  slice(701:1380) |&gt; \n  print(n = 700)\n\n# A tibble: 672 × 5\n       id name       state payer     n\n    &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n  1   567 E&M30      &lt;NA&gt;  M        30\n  2   567 E&M30      &lt;NA&gt;  M        30\n  3   568 E&M31      &lt;NA&gt;  M        31\n  4   568 E&M31      &lt;NA&gt;  M        31\n  5   569 IDMCD1     ID    MCD       1\n  6   570 IDMCD2     ID    MCD       2\n  7   571 IDMCD3     ID    MCD       3\n  8   572 ORTHO26    OR    THO      26\n  9   573 ORTHO27    OR    THO      27\n 10   574 MEDSV2     ME    DSV       2\n 11   574 MEDSV2     ME    DSV       2\n 12   575 MEDSV3     ME    DSV       3\n 13   576 MEDSV4     ME    DSV       4\n 14   576 MEDSV4     ME    DSV       4\n 15   577 MEDSV5     ME    DSV       5\n 16   578 MEDSV6     ME    DSV       6\n 17   579 E&M43      &lt;NA&gt;  M        43\n 18   580 UNVSL3     &lt;NA&gt;  VSL       3\n 19   581 VACCN35    VA    CCN      35\n 20   582 MEDSV7     ME    DSV       7\n 21   583 FOOT4      &lt;NA&gt;  OT        4\n 22   584 LABS27     LA    BS       27\n 23   585 LAMCD1     LA    MCD       1\n 24   585 LAMCD1     LA    MCD       1\n 25   586 UNVSL81    &lt;NA&gt;  VSL      81\n 26   587 INTEG14    IN    TEG      14\n 27   588 UNVSL82    &lt;NA&gt;  VSL      82\n 28   589 LABS28     LA    BS       28\n 29   590 LABS29     LA    BS       29\n 30   591 MEDSV16    ME    DSV      16\n 31   592 MEDSV17    ME    DSV      17\n 32   593 VACCN36    VA    CCN      36\n 33   593 VACCN36    VA    CCN      36\n 34   594 MEDSV18    ME    DSV      18\n 35   595 MEDSV19    ME    DSV      19\n 36   595 MEDSV19    ME    DSV      19\n 37   596 ICD10-58   &lt;NA&gt;  D        10\n 38   596 ICD10-58   &lt;NA&gt;  -        58\n 39   597 ICD10-59   &lt;NA&gt;  D        10\n 40   597 ICD10-59   &lt;NA&gt;  -        59\n 41   598 ICD10-60   &lt;NA&gt;  D        10\n 42   598 ICD10-60   &lt;NA&gt;  -        60\n 43   599 ICD10-61   &lt;NA&gt;  D        10\n 44   599 ICD10-61   &lt;NA&gt;  -        61\n 45   600 VACCN38    VA    CCN      38\n 46   601 E&M44      &lt;NA&gt;  M        44\n 47   602 ICD10-62   &lt;NA&gt;  D        10\n 48   602 ICD10-62   &lt;NA&gt;  -        62\n 49   603 ICD10-63   &lt;NA&gt;  D        10\n 50   603 ICD10-63   &lt;NA&gt;  -        63\n 51   604 E&M45      &lt;NA&gt;  M        45\n 52   605 COVID19-26 ID    VID      19\n 53   605 COVID19-26 CO    -        26\n 54   606 COVID19-27 ID    VID      19\n 55   606 COVID19-27 CO    -        27\n 56   607 COVID19-28 ID    VID      19\n 57   607 COVID19-28 CO    -        28\n 58   608 COVID19-29 ID    VID      19\n 59   608 COVID19-29 CO    -        29\n 60   609 COVID19-30 ID    VID      19\n 61   609 COVID19-30 CO    -        30\n 62   610 COVID19-31 ID    VID      19\n 63   610 COVID19-31 CO    -        31\n 64   611 ICD10-64   &lt;NA&gt;  D        10\n 65   611 ICD10-64   &lt;NA&gt;  -        64\n 66   612 VACCN39    VA    CCN      39\n 67   613 VACCN40    VA    CCN      40\n 68   614 VACCN41    VA    CCN      41\n 69   615 VACCN42    VA    CCN      42\n 70   616 VACCN43    VA    CCN      43\n 71   617 RHC40      &lt;NA&gt;  C        40\n 72   618 FQHC24     &lt;NA&gt;  HC       24\n 73   619 UNVSL83    &lt;NA&gt;  VSL      83\n 74   620 VACCN44    VA    CCN      44\n 75   621 AUDIO3     &lt;NA&gt;  DIO       3\n 76   622 COVID19-32 ID    VID      19\n 77   622 COVID19-32 CO    -        32\n 78   623 ICD10-65   &lt;NA&gt;  D        10\n 79   623 ICD10-65   &lt;NA&gt;  -        65\n 80   624 ICD10-66   &lt;NA&gt;  D        10\n 81   624 ICD10-66   &lt;NA&gt;  -        66\n 82   625 RADIO6     &lt;NA&gt;  DIO       6\n 83   626 NEURO16    NE    URO      16\n 84   627 NEURO17    NE    URO      17\n 85   628 ICD10-67   &lt;NA&gt;  D        10\n 86   628 ICD10-67   &lt;NA&gt;  -        67\n 87   629 ICD10-68   &lt;NA&gt;  D        10\n 88   629 ICD10-68   &lt;NA&gt;  -        68\n 89   630 COVID19-33 ID    VID      19\n 90   630 COVID19-33 CO    -        33\n 91   631 LABS30     LA    BS       30\n 92   631 LABS30     LA    BS       30\n 93   632 ORTHO23    OR    THO      23\n 94   633 VACCN45    VA    CCN      45\n 95   634 ICD10-69   &lt;NA&gt;  D        10\n 96   634 ICD10-69   &lt;NA&gt;  -        69\n 97   635 GAMCD31    GA    MCD      31\n 98   636 ALMCD11    AL    MCD      11\n 99   637 ICD10-70   &lt;NA&gt;  D        10\n100   637 ICD10-70   &lt;NA&gt;  -        70\n101   638 ICD10-71   &lt;NA&gt;  D        10\n102   638 ICD10-71   &lt;NA&gt;  -        71\n103   639 IDMCD4     ID    MCD       4\n104   640 E&M46      &lt;NA&gt;  M        46\n105   641 ARMCD5     AR    MCD       5\n106   642 ARMCD6     AR    MCD       6\n107   643 ARMCD7     AR    MCD       7\n108   644 ARMCD8     AR    MCD       8\n109   645 ARMCD9     AR    MCD       9\n110   646 RADIO7     &lt;NA&gt;  DIO       7\n111   647 WIMCD1     WI    MCD       1\n112   648 WIMCD2     WI    MCD       2\n113   649 WIMCD3     WI    MCD       3\n114   650 WIMCD4     WI    MCD       4\n115   651 VFC-ID     ID    C-ID     NA\n116   652 VFC-GA     GA    C-GA     NA\n117   653 VFC-AL     AL    C-AL     NA\n118   654 VFC-AR     AR    C-AR     NA\n119   655 VFC-AZ     AZ    C-AZ     NA\n120   656 VFC-FL     FL    C-FL     NA\n121   657 VFC-IA     IA    C-IA     NA\n122   658 VFC-IL     IL    C-IL     NA\n123   659 VFC-LA     LA    C-LA     NA\n124   660 VFC-MD     MD    C-MD     NA\n125   661 VFC-MO     MO    C-MO     NA\n126   662 VFC-MS     MS    C-MS     NA\n127   663 VFC-NC     NC    C-NC     NA\n128   664 VFC-NJ     NJ    C-NJ     NA\n129   665 VFC-OK     OK    C-OK     NA\n130   666 VFC-OR     OR    C-OR     NA\n131   667 VFC-SC     SC    C-SC     NA\n132   668 VFC-TN     TN    C-TN     NA\n133   669 VFC-TX     TX    C-TX     NA\n134   670 VFC-WA     WA    C-WA     NA\n135   671 VFC-WI     WI    C-WI     NA\n136   672 IDMCD5     ID    MCD       5\n137   672 IDMCD5     ID    MCD       5\n138   673 PRVNT33    &lt;NA&gt;  VNT      33\n139   674 GAMCD32    GA    MCD      32\n140   675 UNVSL84    &lt;NA&gt;  VSL      84\n141   675 UNVSL84    &lt;NA&gt;  VSL      84\n142   676 ICD10-72   &lt;NA&gt;  D        10\n143   676 ICD10-72   &lt;NA&gt;  -        72\n144   677 ICD10-73   &lt;NA&gt;  D        10\n145   677 ICD10-73   &lt;NA&gt;  -        73\n146   678 ICD10-74   &lt;NA&gt;  D        10\n147   678 ICD10-74   &lt;NA&gt;  -        74\n148   679 ICD10-75   &lt;NA&gt;  D        10\n149   679 ICD10-75   &lt;NA&gt;  -        75\n150   680 ICD10-76   &lt;NA&gt;  D        10\n151   680 ICD10-76   &lt;NA&gt;  -        76\n152   681 ICD10-77   &lt;NA&gt;  D        10\n153   681 ICD10-77   &lt;NA&gt;  -        77\n154   682 ICD10-79   &lt;NA&gt;  D        10\n155   682 ICD10-79   &lt;NA&gt;  -        79\n156   683 ICD10-80   &lt;NA&gt;  D        10\n157   683 ICD10-80   &lt;NA&gt;  -        80\n158   684 ICD10-81   &lt;NA&gt;  D        10\n159   684 ICD10-81   &lt;NA&gt;  -        81\n160   685 ICD10-82   &lt;NA&gt;  D        10\n161   685 ICD10-82   &lt;NA&gt;  -        82\n162   686 ICD10-84   &lt;NA&gt;  D        10\n163   686 ICD10-84   &lt;NA&gt;  -        84\n164   687 ICD10-85   &lt;NA&gt;  D        10\n165   687 ICD10-85   &lt;NA&gt;  -        85\n166   688 COVID19-34 ID    VID      19\n167   688 COVID19-34 CO    -        34\n168   689 UNVSL85    &lt;NA&gt;  VSL      85\n169   690 VACCN46    VA    CCN      46\n170   691 VACCN47    VA    CCN      47\n171   692 VACCN48    VA    CCN      48\n172   693 VACCN49    VA    CCN      49\n173   694 VACCN50    VA    CCN      50\n174   695 ICD10-86   &lt;NA&gt;  D        10\n175   695 ICD10-86   &lt;NA&gt;  -        86\n176   696 ICD10-87   &lt;NA&gt;  D        10\n177   696 ICD10-87   &lt;NA&gt;  -        87\n178   697 ICD10-88   &lt;NA&gt;  D        10\n179   697 ICD10-88   &lt;NA&gt;  -        88\n180   698 COVID19-35 ID    VID      19\n181   698 COVID19-35 CO    -        35\n182   699 RHC41      &lt;NA&gt;  C        41\n183   700 COVID19-36 ID    VID      19\n184   700 COVID19-36 CO    -        36\n185   701 RHC42      &lt;NA&gt;  C        42\n186   702 RHC43      &lt;NA&gt;  C        43\n187   703 RHC44      &lt;NA&gt;  C        44\n188   704 UNVSL86    &lt;NA&gt;  VSL      86\n189   704 UNVSL86    &lt;NA&gt;  VSL      86\n190   705 ICD10-89   &lt;NA&gt;  D        10\n191   705 ICD10-89   &lt;NA&gt;  -        89\n192   706 ICD10-90   &lt;NA&gt;  D        10\n193   706 ICD10-90   &lt;NA&gt;  -        90\n194   707 ICD10-91   &lt;NA&gt;  D        10\n195   707 ICD10-91   &lt;NA&gt;  -        91\n196   708 ICD10-92   &lt;NA&gt;  D        10\n197   708 ICD10-92   &lt;NA&gt;  -        92\n198   709 ICD10-93   &lt;NA&gt;  D        10\n199   709 ICD10-93   &lt;NA&gt;  -        93\n200   710 OBGYN1     &lt;NA&gt;  GYN       1\n201   711 OBGYN2     &lt;NA&gt;  GYN       2\n202   711 OBGYN2     &lt;NA&gt;  GYN       2\n203   712 OBGYN3     &lt;NA&gt;  GYN       3\n204   713 OBGYN4     &lt;NA&gt;  GYN       4\n205   714 OBGYN5     &lt;NA&gt;  GYN       5\n206   714 OBGYN5     &lt;NA&gt;  GYN       5\n207   715 OBGYN6     &lt;NA&gt;  GYN       6\n208   716 OBGYN7     &lt;NA&gt;  GYN       7\n209   717 OBGYN8     &lt;NA&gt;  GYN       8\n210   718 OBGYN9     &lt;NA&gt;  GYN       9\n211   719 OBGYN10    &lt;NA&gt;  GYN      10\n212   720 OBGYN11    &lt;NA&gt;  GYN      11\n213   721 RADIO8     &lt;NA&gt;  DIO       8\n214   722 OBGYN12    &lt;NA&gt;  GYN      12\n215   723 OBGYN13    &lt;NA&gt;  GYN      13\n216   724 OBGYN14    &lt;NA&gt;  GYN      14\n217   725 OBGYN15    &lt;NA&gt;  GYN      15\n218   725 OBGYN15    &lt;NA&gt;  GYN      15\n219   726 GAMCD33    GA    MCD      33\n220   727 ICD10-83   &lt;NA&gt;  D        10\n221   727 ICD10-83   &lt;NA&gt;  -        83\n222   728 ICD10-94   &lt;NA&gt;  D        10\n223   728 ICD10-94   &lt;NA&gt;  -        94\n224   729 VACCN51    VA    CCN      51\n225   729 VACCN51    VA    CCN      51\n226   730 VACCN52    VA    CCN      52\n227   731 VACCN53    VA    CCN      53\n228   732 SCMCD2     SC    MCD       2\n229   733 UNVSL87    &lt;NA&gt;  VSL      87\n230   734 UNVSL88    &lt;NA&gt;  VSL      88\n231   735 MDMCD1     MD    MCD       1\n232   736 MDMCD2     MD    MCD       2\n233   737 ICD10-95   &lt;NA&gt;  D        10\n234   737 ICD10-95   &lt;NA&gt;  -        95\n235   738 VACCN54    VA    CCN      54\n236   739 VACCN55    VA    CCN      55\n237   740 VACCN56    VA    CCN      56\n238   741 INTEG17    IN    TEG      17\n239   742 INTEG18    IN    TEG      18\n240   743 MEDSV20    ME    DSV      20\n241   744 E&M47      &lt;NA&gt;  M        47\n242   745 COMCD1     CO    MCD       1\n243   746 COMCD2     CO    MCD       2\n244   747 COMCD3     CO    MCD       3\n245   747 COMCD3     CO    MCD       3\n246   748 COMCD4     CO    MCD       4\n247   749 COMCD5     CO    MCD       5\n248   750 COMCD6     CO    MCD       6\n249   751 COMCD7     CO    MCD       7\n250   752 COMCD8     CO    MCD       8\n251   753 COMCD9     CO    MCD       9\n252   754 COMCD10    CO    MCD      10\n253   755 COMCD11    CO    MCD      11\n254   756 COMCD12    CO    MCD      12\n255   757 COMCD13    CO    MCD      13\n256   758 COMCD14    CO    MCD      14\n257   759 COMCD15    CO    MCD      15\n258   760 GABCBS1    GA    BCBS      1\n259   761 GAMCD34    GA    MCD      34\n260   762 VFC-CO     CO    C-CO     NA\n261   763 ICD10-120  &lt;NA&gt;  D        10\n262   763 ICD10-120  &lt;NA&gt;  -       120\n263   764 VFC-MI     MI    C-MI     NA\n264   765 COVID19-41 ID    VID      19\n265   765 COVID19-41 CO    -        41\n266   766 MIMCD1     MI    MCD       1\n267   767 MIMCD2     MI    MCD       2\n268   768 MIMCD3     MI    MCD       3\n269   769 MIMCD4     MI    MCD       4\n270   770 MIMCD5     MI    MCD       5\n271   771 MIMCD6     MI    MCD       6\n272   772 MIMCD7     MI    MCD       7\n273   773 MIMCD8     MI    MCD       8\n274   774 ICD10-97   &lt;NA&gt;  D        10\n275   774 ICD10-97   &lt;NA&gt;  -        97\n276   775 MIMCD9     MI    MCD       9\n277   776 DIGES3     &lt;NA&gt;  GES       3\n278   777 ANEST3     &lt;NA&gt;  EST       3\n279   777 ANEST3     &lt;NA&gt;  EST       3\n280   778 ANEST4     &lt;NA&gt;  EST       4\n281   779 ANEST5     &lt;NA&gt;  EST       5\n282   780 ANEST6     &lt;NA&gt;  EST       6\n283   781 ANEST7     &lt;NA&gt;  EST       7\n284   782 ICD10-98   &lt;NA&gt;  D        10\n285   782 ICD10-98   &lt;NA&gt;  -        98\n286   783 ICD10-99   &lt;NA&gt;  D        10\n287   783 ICD10-99   &lt;NA&gt;  -        99\n288   784 ORTHO32    OR    THO      32\n289   785 ORTHO33    OR    THO      33\n290   786 ASC5       &lt;NA&gt;  C         5\n291   787 ICD10-100  &lt;NA&gt;  D        10\n292   787 ICD10-100  &lt;NA&gt;  -       100\n293   788 E&M48      &lt;NA&gt;  M        48\n294   789 MEDSV21    ME    DSV      21\n295   790 CAMCD17    CA    MCD      17\n296   791 CAMCD18    CA    MCD      18\n297   792 CAMCD19    CA    MCD      19\n298   793 CAMCD20    CA    MCD      20\n299   794 ASC6       &lt;NA&gt;  C         6\n300   795 ASC7       &lt;NA&gt;  C         7\n301   796 UNVSL4     &lt;NA&gt;  VSL       4\n302   797 CAMCD21    CA    MCD      21\n303   798 BCBSMI1    MI    BSMI      1\n304   799 LABS31     LA    BS       31\n305   799 LABS31     LA    BS       31\n306   800 RADIO9     &lt;NA&gt;  DIO       9\n307   800 RADIO9     &lt;NA&gt;  DIO       9\n308   801 UNVSL5     &lt;NA&gt;  VSL       5\n309   802 RADIO10    &lt;NA&gt;  DIO      10\n310   803 ICD10-101  &lt;NA&gt;  D        10\n311   803 ICD10-101  &lt;NA&gt;  -       101\n312   804 MEDSV22    ME    DSV      22\n313   805 LABS32     LA    BS       32\n314   806 UNVSL6     &lt;NA&gt;  VSL       6\n315   807 UNVSL7     &lt;NA&gt;  VSL       7\n316   808 LABS33     LA    BS       33\n317   809 UNVSL8     &lt;NA&gt;  VSL       8\n318   810 UNVSL9     &lt;NA&gt;  VSL       9\n319   811 PRVNT34    &lt;NA&gt;  VNT      34\n320   812 COVID19-42 ID    VID      19\n321   812 COVID19-42 CO    -        42\n322   813 COVID19-43 ID    VID      19\n323   813 COVID19-43 CO    -        43\n324   814 COVID19-44 ID    VID      19\n325   814 COVID19-44 CO    -        44\n326   815 COVID19-45 ID    VID      19\n327   815 COVID19-45 CO    -        45\n328   816 ICD10-102  &lt;NA&gt;  D        10\n329   816 ICD10-102  &lt;NA&gt;  -       102\n330   817 ICD10-103  &lt;NA&gt;  D        10\n331   817 ICD10-103  &lt;NA&gt;  -       103\n332   818 COVID19-46 ID    VID      19\n333   818 COVID19-46 CO    -        46\n334   819 COVID19-47 ID    VID      19\n335   819 COVID19-47 CO    -        47\n336   819 COVID19-47 ID    VID      19\n337   819 COVID19-47 CO    -        47\n338   820 TELEH41    &lt;NA&gt;  LEH      41\n339   821 E&M51      &lt;NA&gt;  M        51\n340   822 E&M52      &lt;NA&gt;  M        52\n341   823 ICD10-104  &lt;NA&gt;  D        10\n342   823 ICD10-104  &lt;NA&gt;  -       104\n343   824 DIGES4     &lt;NA&gt;  GES       4\n344   825 DIGES5     &lt;NA&gt;  GES       5\n345   826 DIGES6     &lt;NA&gt;  GES       6\n346   827 ICD10-105  &lt;NA&gt;  D        10\n347   827 ICD10-105  &lt;NA&gt;  -       105\n348   828 ICD10-106  &lt;NA&gt;  D        10\n349   828 ICD10-106  &lt;NA&gt;  -       106\n350   829 ICD10-107  &lt;NA&gt;  D        10\n351   829 ICD10-107  &lt;NA&gt;  -       107\n352   830 ICD10-108  &lt;NA&gt;  D        10\n353   830 ICD10-108  &lt;NA&gt;  -       108\n354   831 ICD10-109  &lt;NA&gt;  D        10\n355   831 ICD10-109  &lt;NA&gt;  -       109\n356   832 ICD10-96   &lt;NA&gt;  D        10\n357   832 ICD10-96   &lt;NA&gt;  -        96\n358   833 ICD10-110  &lt;NA&gt;  D        10\n359   833 ICD10-110  &lt;NA&gt;  -       110\n360   834 TNMCD2     TN    MCD       2\n361   835 ICD10-111  &lt;NA&gt;  D        10\n362   835 ICD10-111  &lt;NA&gt;  -       111\n363   836 ICD10-112  &lt;NA&gt;  D        10\n364   836 ICD10-112  &lt;NA&gt;  -       112\n365   837 MEDSV23    ME    DSV      23\n366   838 ANEST8     &lt;NA&gt;  EST       8\n367   839 ANEST9     &lt;NA&gt;  EST       9\n368   840 UNVSL89    &lt;NA&gt;  VSL      89\n369   840 UNVSL89    &lt;NA&gt;  VSL      89\n370   840 UNVSL89    &lt;NA&gt;  VSL      89\n371   841 MEDSV24    ME    DSV      24\n372   842 ICD10-113  &lt;NA&gt;  D        10\n373   842 ICD10-113  &lt;NA&gt;  -       113\n374   843 ICD10-114  &lt;NA&gt;  D        10\n375   843 ICD10-114  &lt;NA&gt;  -       114\n376   844 GAMCD35    GA    MCD      35\n377   845 UNVSL90    &lt;NA&gt;  VSL      90\n378   846 TXMCD10    TX    MCD      10\n379   847 TXMCD12    TX    MCD      12\n380   848 UNVSL91    &lt;NA&gt;  VSL      91\n381   849 AUDIO4     &lt;NA&gt;  DIO       4\n382   850 VACCN57    VA    CCN      57\n383   851 VACCN58    VA    CCN      58\n384   852 VACCN59    VA    CCN      59\n385   853 VACCN60    VA    CCN      60\n386   854 VACCN62    VA    CCN      62\n387   855 COVID19-48 ID    VID      19\n388   855 COVID19-48 CO    -        48\n389   856 COVID19-49 ID    VID      19\n390   856 COVID19-49 CO    -        49\n391   857 COVID19-50 ID    VID      19\n392   857 COVID19-50 CO    -        50\n393   858 OBGYN16    &lt;NA&gt;  GYN      16\n394   859 E&M49      &lt;NA&gt;  M        49\n395   859 E&M49      &lt;NA&gt;  M        49\n396   860 ICD10-115  &lt;NA&gt;  D        10\n397   860 ICD10-115  &lt;NA&gt;  -       115\n398   861 UNVSL104   &lt;NA&gt;  VSL     104\n399   862 RADIO11    &lt;NA&gt;  DIO      11\n400   863 DIGES7     &lt;NA&gt;  GES       7\n401   864 DIGES8     &lt;NA&gt;  GES       8\n402   865 DIGES9     &lt;NA&gt;  GES       9\n403   866 BCBSTN2    TN    BSTN      2\n404   866 BCBSTN2    TN    BSTN      2\n405   867 RADIO12    &lt;NA&gt;  DIO      12\n406   868 ICD10-117  &lt;NA&gt;  D        10\n407   868 ICD10-117  &lt;NA&gt;  -       117\n408   869 UNVSL60    &lt;NA&gt;  VSL      60\n409   870 UNVSL92    &lt;NA&gt;  VSL      92\n410   870 UNVSL92    &lt;NA&gt;  VSL      92\n411   871 COVID19-51 ID    VID      19\n412   871 COVID19-51 CO    -        51\n413   872 ICD10-118  &lt;NA&gt;  D        10\n414   872 ICD10-118  &lt;NA&gt;  -       118\n415   873 ICD10-119  &lt;NA&gt;  D        10\n416   873 ICD10-119  &lt;NA&gt;  -       119\n417   874 UNVSL93    &lt;NA&gt;  VSL      93\n418   874 UNVSL93    &lt;NA&gt;  VSL      93\n419   875 UNVSL94    &lt;NA&gt;  VSL      94\n420   876 UNVSL95    &lt;NA&gt;  VSL      95\n421   877 UNVSL96    &lt;NA&gt;  VSL      96\n422   878 UNVSL17    &lt;NA&gt;  VSL      17\n423   879 WAMCD21    WA    MCD      21\n424   880 PRVNT36    &lt;NA&gt;  VNT      36\n425   880 PRVNT36    &lt;NA&gt;  VNT      36\n426   881 WAMCD22    WA    MCD      22\n427   882 RHC47      &lt;NA&gt;  C        47\n428   883 UNVSL97    &lt;NA&gt;  VSL      97\n429   884 RHC48      &lt;NA&gt;  C        48\n430   885 UNVSL18    &lt;NA&gt;  VSL      18\n431   886 GAMCD36    GA    MCD      36\n432   887 NJBCBS1    NJ    BCBS      1\n433   888 SCBCBS2    SC    BCBS      2\n434   889 COVID19-52 ID    VID      19\n435   889 COVID19-52 CO    -        52\n436   890 COVID19-53 ID    VID      19\n437   890 COVID19-53 CO    -        53\n438   891 RHC31      &lt;NA&gt;  C        31\n439   892 COVID19-54 ID    VID      19\n440   892 COVID19-54 CO    -        54\n441   893 VACCN61    VA    CCN      61\n442   894 DME1       &lt;NA&gt;  E         1\n443   895 DME2       &lt;NA&gt;  E         2\n444   896 DME3       &lt;NA&gt;  E         3\n445   897 DME4       &lt;NA&gt;  E         4\n446   898 DME5       &lt;NA&gt;  E         5\n447   899 DME6       &lt;NA&gt;  E         6\n448   900 DME7       &lt;NA&gt;  E         7\n449   901 DME8       &lt;NA&gt;  E         8\n450   902 DME9       &lt;NA&gt;  E         9\n451   903 DME10      &lt;NA&gt;  E        10\n452   904 DME11      &lt;NA&gt;  E        11\n453   905 DME12      &lt;NA&gt;  E        12\n454   906 DME13      &lt;NA&gt;  E        13\n455   907 DME14      &lt;NA&gt;  E        14\n456   908 DME15      &lt;NA&gt;  E        15\n457   909 DME16      &lt;NA&gt;  E        16\n458   910 DME17      &lt;NA&gt;  E        17\n459   911 DME18      &lt;NA&gt;  E        18\n460   912 DME19      &lt;NA&gt;  E        19\n461   913 DME20      &lt;NA&gt;  E        20\n462   914 DME21      &lt;NA&gt;  E        21\n463   915 DME22      &lt;NA&gt;  E        22\n464   916 DME23      &lt;NA&gt;  E        23\n465   917 DME24      &lt;NA&gt;  E        24\n466   918 DME25      &lt;NA&gt;  E        25\n467   919 DME26      &lt;NA&gt;  E        26\n468   920 DME27      &lt;NA&gt;  E        27\n469   921 DME28      &lt;NA&gt;  E        28\n470   922 DME29      &lt;NA&gt;  E        29\n471   923 DME30      &lt;NA&gt;  E        30\n472   924 DME31      &lt;NA&gt;  E        31\n473   925 DME32      &lt;NA&gt;  E        32\n474   926 DME33      &lt;NA&gt;  E        33\n475   927 UNVSL98    &lt;NA&gt;  VSL      98\n476   927 UNVSL98    &lt;NA&gt;  VSL      98\n477   928 UNVSL99    &lt;NA&gt;  VSL      99\n478   929 DME34      &lt;NA&gt;  E        34\n479   930 COVID19-55 ID    VID      19\n480   930 COVID19-55 CO    -        55\n481   930 COVID19-55 ID    VID      19\n482   930 COVID19-55 CO    -        55\n483   931 RHC50      &lt;NA&gt;  C        50\n484   932 RHC51      &lt;NA&gt;  C        51\n485   933 VACCN63    VA    CCN      63\n486   934 VACCN64    VA    CCN      64\n487   935 E&M53      &lt;NA&gt;  M        53\n488   936 SCMCD3     SC    MCD       3\n489   937 AUDIO5     &lt;NA&gt;  DIO       5\n490   938 UNVSL100   &lt;NA&gt;  VSL     100\n491   939 DME35      &lt;NA&gt;  E        35\n492   940 UNVSL101   &lt;NA&gt;  VSL     101\n493   941 UNVSL102   &lt;NA&gt;  VSL     102\n494   942 RADIO13    &lt;NA&gt;  DIO      13\n495   943 UNVSL103   &lt;NA&gt;  VSL     103\n496   944 GABCBS2    GA    BCBS      2\n497   945 INTEG19    IN    TEG      19\n498   946 GAMCD37    GA    MCD      37\n499   947 VACCN65    VA    CCN      65\n500   948 PAMCD1     PA    MCD       1\n501   949 PAMCD2     PA    MCD       2\n502   949 PAMCD2     PA    MCD       2\n503   950 PAMCD3     PA    MCD       3\n504   951 MEDSV25    ME    DSV      25\n505   952 MEDSV26    ME    DSV      26\n506   953 MEDSV27    ME    DSV      27\n507   953 MEDSV27    ME    DSV      27\n508   954 MEDSV28    ME    DSV      28\n509   954 MEDSV28    ME    DSV      28\n510   955 MEDSV29    ME    DSV      29\n511   955 MEDSV29    ME    DSV      29\n512   956 GAMCD38    GA    MCD      38\n513   957 ICD10-121  &lt;NA&gt;  D        10\n514   957 ICD10-121  &lt;NA&gt;  -       121\n515   958 TXMCD13    TX    MCD      13\n516   959 RHC52      &lt;NA&gt;  C        52\n517   960 ORTHO34    OR    THO      34\n518   961 MEDSV30    ME    DSV      30\n519   962 ORTHO35    OR    THO      35\n520   963 ORTHO36    OR    THO      36\n521   964 GAMCD39    GA    MCD      39\n522   965 LABS34     LA    BS       34\n523   966 GAMCD40    GA    MCD      40\n524   967 GAMCD41    GA    MCD      41\n525   968 GAMCD42    GA    MCD      42\n526   969 DIGES10    &lt;NA&gt;  GES      10\n527   970 TELEH42    &lt;NA&gt;  LEH      42\n528   971 ICD10-122  &lt;NA&gt;  D        10\n529   971 ICD10-122  &lt;NA&gt;  -       122\n530   972 VACCN66    VA    CCN      66\n531   973 VACCN67    VA    CCN      67\n532   974 VACCN68    VA    CCN      68\n533   975 VACCN69    VA    CCN      69\n534   976 VACCN70    VA    CCN      70\n535   977 VACCN71    VA    CCN      71\n536   978 UNVSL105   &lt;NA&gt;  VSL     105\n537   979 UNVSL106   &lt;NA&gt;  VSL     106\n538   980 UNVSL107   &lt;NA&gt;  VSL     107\n539   981 BCBSTX2    TX    BSTX      2\n540   981 BCBSTX2    TX    BSTX      2\n541   982 ORTHO37    OR    THO      37\n542   982 ORTHO37    OR    THO      37\n543   983 PRVNT37    &lt;NA&gt;  VNT      37\n544   984 E&M54      &lt;NA&gt;  M        54\n545   985 E&M55      &lt;NA&gt;  M        55\n546   986 E&M56      &lt;NA&gt;  M        56\n547   987 E&M57      &lt;NA&gt;  M        57\n548   988 E&M58      &lt;NA&gt;  M        58\n549   989 E&M59      &lt;NA&gt;  M        59\n550   990 E&M60      &lt;NA&gt;  M        60\n551   991 E&M61      &lt;NA&gt;  M        61\n552   992 E&M62      &lt;NA&gt;  M        62\n553   993 E&M63      &lt;NA&gt;  M        63\n554   994 E&M64      &lt;NA&gt;  M        64\n555   995 LAMCD1     LA    MCD       1\n556   996 LAMCD2     LA    MCD       2\n557   997 LAMCD3     LA    MCD       3\n558   998 LAMCD4     LA    MCD       4\n559   999 E&M65      &lt;NA&gt;  M        65\n560  1000 DIGES11    &lt;NA&gt;  GES      11\n561  1001 DIGES12    &lt;NA&gt;  GES      12\n562  1002 BCBSMS1    MS    BSMS      1\n563  1003 DIGES13    &lt;NA&gt;  GES      13\n564  1004 AUDIO6     &lt;NA&gt;  DIO       6\n565  1004 AUDIO6     &lt;NA&gt;  DIO       6\n566  1005 BCBSTN3    TN    BSTN      3\n567  1005 BCBSTN3    TN    BSTN      3\n568  1006 CAMCD22    CA    MCD      22\n569  1007 UNVSL108   &lt;NA&gt;  VSL     108\n570  1008 UNVSL109   &lt;NA&gt;  VSL     109\n571  1009 UNVSL110   &lt;NA&gt;  VSL     110\n572  1010 ICD10-123  &lt;NA&gt;  D        10\n573  1010 ICD10-123  &lt;NA&gt;  -       123\n574  1011 ICD10-124  &lt;NA&gt;  D        10\n575  1011 ICD10-124  &lt;NA&gt;  -       124\n576  1012 TELEH43    &lt;NA&gt;  LEH      43\n577  1013 UNVSL111   &lt;NA&gt;  VSL     111\n578  1014 UNVSL112   &lt;NA&gt;  VSL     112\n579  1015 VACCN72    VA    CCN      72\n580  1016 MOMCD1     MO    MCD       1\n581  1017 MOMCD2     MO    MCD       2\n582  1018 RHC53      &lt;NA&gt;  C        53\n583  1019 FQHC26     &lt;NA&gt;  HC       26\n584  1020 MOMCD3     MO    MCD       3\n585  1021 MOMCD4     MO    MCD       4\n586  1022 MOMCD5     MO    MCD       5\n587  1023 MOMCD6     MO    MCD       6\n588  1024 MOMCD7     MO    MCD       7\n589  1025 MOMCD8     MO    MCD       8\n590  1026 MOMCD9     MO    MCD       9\n591  1027 MOMCD10    MO    MCD      10\n592  1028 MOMCD11    MO    MCD      11\n593  1029 KSMCD1     KS    MCD       1\n594  1030 KSMCD2     KS    MCD       2\n595  1031 KSMCD3     KS    MCD       3\n596  1032 ICD10-125  &lt;NA&gt;  D        10\n597  1032 ICD10-125  &lt;NA&gt;  -       125\n598  1033 ICD10-126  &lt;NA&gt;  D        10\n599  1033 ICD10-126  &lt;NA&gt;  -       126\n600  1034 ICD10-127  &lt;NA&gt;  D        10\n601  1034 ICD10-127  &lt;NA&gt;  -       127\n602  1035 NEURO18    NE    URO      18\n603  1036 CAMCD23    CA    MCD      23\n604  1036 CAMCD23    CA    MCD      23\n605  1037 GAMCD43    GA    MCD      43\n606  1038 TELEH43    &lt;NA&gt;  LEH      43\n607  1039 TXMCD14    TX    MCD      14\n608  1040 VACCN73    VA    CCN      73\n609  1041 UNVSL113   &lt;NA&gt;  VSL     113\n610  1041 UNVSL113   &lt;NA&gt;  VSL     113\n611  1042 RHC54      &lt;NA&gt;  C        54\n612  1043 RHC55      &lt;NA&gt;  C        55\n613  1044 RHC56      &lt;NA&gt;  C        56\n614  1045 ARMCD10    AR    MCD      10\n615  1046 ARMCD11    AR    MCD      11\n616  1047 GAMCD28    GA    MCD      28\n617  1048 GAMCD44    GA    MCD      44\n618  1049 GAMCD45    GA    MCD      45\n619  1050 GAMCD48    GA    MCD      48\n620  1051 GAMCD47    GA    MCD      47\n621  1052 ALMCD12    AL    MCD      12\n622  1053 ALMCD13    AL    MCD      13\n623  1054 ALMCD14    AL    MCD      14\n624  1055 WAMCD23    WA    MCD      23\n625  1056 WAMCD24    WA    MCD      24\n626  1057 ICD10-128  &lt;NA&gt;  D        10\n627  1057 ICD10-128  &lt;NA&gt;  -       128\n628  1058 PRVNT38    &lt;NA&gt;  VNT      38\n629  1059 UNVSL114   &lt;NA&gt;  VSL     114\n630  1060 ARMCD12    AR    MCD      12\n631  1061 ANEST10    &lt;NA&gt;  EST      10\n632  1062 ICD10-129  &lt;NA&gt;  D        10\n633  1062 ICD10-129  &lt;NA&gt;  -       129\n634  1062 ICD10-129  &lt;NA&gt;  D        10\n635  1062 ICD10-129  &lt;NA&gt;  -       129\n636  1063 BCBSNC1    NC    BSNC      1\n637  1064 DIGES14    &lt;NA&gt;  GES      14\n638  1065 NEURO19    NE    URO      19\n639  1066 NEURO20    NE    URO      20\n640  1067 UNVSL115   &lt;NA&gt;  VSL     115\n641  1068 BCBSVA1    VA    BSVA      1\n642  1069 UNVSL116   &lt;NA&gt;  VSL     116\n643  1070 UNVSL117   &lt;NA&gt;  VSL     117\n644  1071 UNVSL118   &lt;NA&gt;  VSL     118\n645  1072 ICD10-130  &lt;NA&gt;  D        10\n646  1072 ICD10-130  &lt;NA&gt;  -       130\n647  1073 ICD10-131  &lt;NA&gt;  D        10\n648  1073 ICD10-131  &lt;NA&gt;  -       131\n649  1074 LABS35     LA    BS       35\n650  1075 UNVSL119   &lt;NA&gt;  VSL     119\n651  1076 DME36      &lt;NA&gt;  E        36\n652  1077 UNVSL120   &lt;NA&gt;  VSL     120\n653  1078 DME37      &lt;NA&gt;  E        37\n654  1079 COVID19-56 ID    VID      19\n655  1079 COVID19-56 CO    -        56\n656  1080 COVID19-57 ID    VID      19\n657  1080 COVID19-57 CO    -        57\n658  1081 UNVSL121   &lt;NA&gt;  VSL     121\n659  1082 UNVSL122   &lt;NA&gt;  VSL     122\n660  1083 UNVSL123   &lt;NA&gt;  VSL     123\n661  1084 COVID19-58 ID    VID      19\n662  1084 COVID19-58 CO    -        58\n663  1085 RHC57      &lt;NA&gt;  C        57\n664  1086 ICD10-132  &lt;NA&gt;  D        10\n665  1086 ICD10-132  &lt;NA&gt;  -       132\n666  1087 SCMCD4     SC    MCD       4\n667  1088 SCMCD5     SC    MCD       5\n668  1089 ORMCD5     OR    MCD       5\n669  1090 UNVSL124   &lt;NA&gt;  VSL     124\n670  1091 COMCD16    CO    MCD      16\n671  1092 ICD10-132  &lt;NA&gt;  D        10\n672  1092 ICD10-132  &lt;NA&gt;  -       132\n\n\n\n\ndescriptors |&gt;\n  slice_sample(n = 15) |&gt; \n  mutate(category = str_wrap(category, width = 50),\n         description = str_wrap(description, width = 60),\n         rationale = str_wrap(rationale, width = 50)) |&gt;\n  select(-sources) |&gt; \n  gt(rowname_col = \"name\",\n     groupname_col = \"category\",\n     row_group_as_column = TRUE) |&gt;\n  cols_align(align = \"left\", columns = -c(id)) |&gt;\n  cols_align(align = \"center\", columns = c(id)) |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = \"left\",\n        weight = \"bold\",\n        size = px(14),\n        whitespace = \"break-spaces\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(description))) |&gt;\n  tab_style(\n      style = cell_text(\n        color = \"#0B0B35\",\n        align = \"center\",\n        weight = \"bold\",\n        size = px(16),\n        font = google_font(name = \"Roboto Condensed\")),\n      locations = cells_body(columns = c(id))) |&gt;\n  gtExtras::gt_add_divider(\n    columns = \"description\", \n    style = \"solid\",\n    weight = \"3px\",\n    color = \"royalblue\") |&gt;\n  tab_style(\n    style = cell_text(\n      v_align = \"middle\", \n      align = \"right\",\n      weight = \"800\"),\n    locations = cells_row_groups()) |&gt; \n  tab_style(\n    style = cell_text(\n      size = px(16),\n      font = google_font(name = \"JetBrains Mono\"),\n      v_align = \"middle\", \n      align = \"center\"\n      ),\n    locations = cells_stub()) |&gt; \n  opt_stylize(add_row_striping = TRUE) |&gt;\n  tab_options(table.width = pct(85),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      id\n      description\n      rationale\n    \n\n\nZurich Workers Comp\nUNVSL70\n499\nPrimary Insurance is one of [ZURICH (80), ZURICH AMERICAN\nINSURANCE (499), ZURICH (1332)]\nFollow Workers Comp billing guidelines for\nelectronic claims attachments. If unsuccessful,\nclaims can be faxed to 874-240-8172.\n\n\nHearing Screening\nPRVNT31\n262\nPatient Age is younger than [19, years] AND CPT Code is one\nof [92551, 92552, 92567] AND CPT Code is not [9938*, 9939*]\nAND DX Code is not [Z01.10, Z01.118, Z01.110]\nZ01.10 (encounter for examination of ears and\nhearing without abnormal findings), Z01.118\n(encounter for examination of ears and hearing\nwith other abnormal findings) and Z01.110\n(Encounter for hearing examination following\nfailed hearing screening) are reported when a\npatient presents for an encounter outside of a\nroutine well-child exam.\n\n\nMedicaid Authorization\nGAMCD10\n71\nPrimary Insurance Class is one of [MEDICAID (3); MEDICAID\nCMO (7); MEDICAID CMO (11)] AND CPT Code is one of [9938*;\n9939*] AND CPT Code is one of [90476; 90477; 905*; 906*;\n9071*; 9072*; 9073*; 9074*; 9075*; 913*] AND CPT Mod1 is not\n[25] AND CPT Mod2 is not [25]\nModifier 25 should be added when a vaccine is\nadministered during the preventive visit.\n\n\nNA\nGAMCD36\n886\nPrimary Insurance Class is one of [MEDICAID, MEDICAID CMO\n(5455)] AND Patient Age is younger than [21, years] AND CPT\nCode is one of [9938*; 9939*]\nEPSDT info should be completed for all\npreventative visits.\n\n\nGAMCD34\n761\nPrimary Insurance is one of [AMERIGROUP, CareSource, Peach\nState] AND CPT Code is one of 80047, 80048, 80051, 80053,\n80061, 80069, 80178, 80305, 81003, 81007, 82010, 82040,\n82042, 82043, 82044, 82120, 82150, 82247, 82271, 82274,\n82310, 82330, 82374, 82435, 82465, 82523, 82550, 82565,\n82570, 82679, 82947, 82950, 82951, 82952, 82977, 82985,\n83001, 83002, 83036, 83037, 83516, 83518, 83520, 83605,\n83655, 83718, 83721, 83861, 83880, 83986, 84075, 84132,\n84155, 84157, 84295, 84443, 84450, 84460, 84478, 84520,\n84550, 84703, 85014, 85018, 85025, 85576, 85610, 86294,\n86308, 86318, 86328, 86386, 86618, 86701, 86780, 86803,\n87077, 87210, 87338, 87389, 87400, 87420, 87426, 87428,\n87430, 87449, 87502, 87631, 87633, 87634, 87635, 87636,\n87637, 87650, 87651, 87801, 87804, 87806, 87807, 87808,\n87809, 87811, 87880, 87899, 87905, 89300, 89321, G0328,\nG0433, G0472, G0475, U0002, 0240U, 0241U\nProviders who have obtained a CLIA Waiver\nor Provider Performed Microscopy Procedure\naccreditation must include the QW modifier when\nany CLIA waived laboratory service is reported on\na CMS-1500 claim form in order for the procedure\nto be evaluated to determine eligibility for\nbenefit coverage.\n\n\nVACCN65\n947\nCPT Code is [91309] AND Encounter Date of Service after\n09/11/2023\nVaccine is no longer authorized for use in the\nUnited States. See 91322 for 50 mcg Moderna\nvaccine.\n\n\nDME5\n898\nCPT Code is one of [A5500; A5501; A5503; A5504; A5505;\nA5506; A5507; A5508; A5510; A5512; A5513; A5514] AND ( CPT\nMod1 is not [KX; EY; GA; GY; GZ] AND CPT Mod2 is not [KX;\nEY; GA; GY; GZ] AND CPT Mod3 is not [KX; EY; GA; GY; GZ] AND\nCPT Mod4 is not [KX; EY; GA; GY; GZ] )\nTherapeutic Shoes for Persons with Diabetes may\nrequire the usage of the KX modifier to identify\nthat the requirements identified in the medical\npolicy have been met. If requirements were not\nmet, see also modifier EY, GA, GY, or GZ. Review\npayer guidelines.\n\n\nCOVID19-55\n930\nPrimary Insurance is [Humana (32)] AND ( Location is\n[TELEHEALTH OR Place of Service is one of [TELEHEALTH\nPROVIDED OTHER THAN IN PATIENT HOME (02) (45); TELEHEALTH\nPROVIDED IN PATIENT HOME (10) (50)] ) AND CPT Mod1 is not\n[93; 95; FQ] AND CPT Mod2 is not 93; 95; FQ]\nHumana Medicare requires a provider to submit a\ncharge for a telehealth service with the place of\nservice (POS) code that would have been reported\nhad the service been furnished in person. In\naddition, Humana requires a provider to report\na telehealth or other virtual service with\nmodifier 93, 95 or modifier FQ as applicable,\nto identify that the service was furnished via\ntelecommunications-based technology.\n\n\nUNVSL4\n796\nPrimary Insurance Class is one of [MEDICARE (1), MEDICARE\nREPLACEMENT (4)] AND CPT Code is one of [A4450, A4452,\nA4221, B4224, B4034, B4035, B4036, A4625, A4629, A4625,\nA4629, B4224, B4034, B4035, B4036, A6448, A6449, A6450,\nA6451, A6452, A6453, A6454, A6455, A6442, A6443, A6444,\nA6445, A6446, A6447, A6441, A6531, A6532, A6545, A6501,\nA6502, A6503, A6504, A6505, A6506, A6507, A6508, A6509,\nA6510, A6511, A6512, A6513, A4649, A6010, A6011, A6021,\nA6022, A6023, A6024, A6154, A6196, A6197, A6198, A6199,\nA6203, A6204, A6205, A6206, A6207, A6208, A6209, A6210,\nA6211, A6212, A621, A6214, A6215, A6217, A6218, A6219,\nA6220, A6221, A6222, A6223, A6224, A6228, A6229, A6230,\nA6231, A6232, A6233, A6234, A6235, A6236, A6237, A6238,\nA6239, A6240, A6241, A6242, A6243, A6244, A6245, A6246,\nA6247, A6248, A6251, A6252, A6253, A6254, A6255, A6256,\nA6257, A6258, A6259, A6261, A6262, A6266, A6402, A6403,\nA6404, A6441, A6442, A6443, A6444, A6445, A6446, A6447,\nA6448, A6449, A6450, A6451, A6452, A6453, A6454, A6455,\nA6456, A6457] AND Place of Service is not [HOME (12) (10)]\nIf a treating practitioner applies surgical\ndressings as part of a professional service that\nis billed to Medicare, the surgical dressings are\nconsidered incident to the professional services\nof the health care practitioner and are not\nseparately payable. Claims for these dressings\nmust not be submitted. Claims for the professional\nservice, which includes the dressings, must be\nsubmitted to the local carrier or intermediary.\nIf dressing changes are sent home with the\nbeneficiary, claims for these dressings may\nbe submitted. In this situation, use the place\nof service corresponding to the beneficiarys\nresidence, Place of Service Office (POS=11) must\nnot be used.\n\n\nGA, CO, KY, ME, MO, NV, NH, OH, VA, WI\nTELEH15\n312\nPrimary Insurance is [BCBS OF OH (121)] AND Place of Service\nis one of [TELEHEALTH PROVIDED OTHER THAN IN PT HOME (02) ,\nTELEHEALTH PROVIDED IN PATIENT HOME(10) AND CPT Code is one\nof [G0406, G0407, G0408, G0425, G0426, G0427, G0459, G0508,\nG0509, Q3014] AND CPT Mod1 is [95, GT, GQ]\nCodes are specific to telehealth services and do\nnot require the use of telehealth modifiers.\n\n\n90 day global - Surgery/Respiratory System\nE&M6\n543\nCPT Code is one of [30115, 30117, 30118, 30120, 30124,\n30125, 30130, 30150, 30160, 30320, 30400, 30410, 30420,\n30430, 30435, 30450, 30460, 30462, 30465, 30520, 30540,\n30545, 30580, 30600, 30620, 30630, 30915, 30920, 31020,\n31030, 31032, 31040, 31050, 31051, 31070, 31075, 31080,\n31081, 31084, 31085, 31086, 31087, 31090, 31200, 31201,\n31205, 31225, 31230, 31300, 31360, 31365, 31367, 31368,\n31370, 31375, 31380, 31382, 31390, 31395, 31400, 31420,\n31551, 31552, 31553, 31554, 31580, 31584, 31587, 31590,\n31591, 31592, 31610, 31611, 31613, 31614, 31750, 31755,\n31760, 31766, 31770, 31775, 31780, 31781, 31785, 31786,\n31800, 31805, 31820, 31825, 31830, 32035, 32036, 32096,\n32097, 32098, 32100, 32110, 32120, 32124, 32140, 32141,\n32150, 32151, 32160, 32200, 32215, 32220, 32225, 32310,\n32320, 32440, 32442, 32445, 32480, 32482, 32484, 32486,\n32488, 32491, 32503, 32504, 32505, 32540, 32650, 32651,\n32652, 32653, 32654, 32655, 32656, 32658, 32659, 32661,\n32662, 32663, 32664, 32665, 32666, 32669, 32670, 32671,\n32672, 32673, 32800, 32810, 32815, 32820, 32851, 32852,\n32853, 32854, 32900, 32905, 32906, 32940] AND CPT Code is\none of [9920*, 9921*, 9922*, 9923*, 9924*, 9925*, 9928*,\n9929*, 9930*, 9931*, 9932*, 9933*, 9934*, 9935*, 9938*,\n9939*, 9946*, 9947*, 9948*, 9949*] AND CPT Mod1 is not [57]\nAND CPT UB04 is [false]\n(add for RHC and FQHC)\n\n\nMedicare 27217\nORTHO21\n228\nPrimary Insurance Class is [MEDICARE (7)] AND CPT Code is\n[27217]\n27217 is not covered by Medicare in any payment\nsystem. See code G0414.\n\n\nCode check - Modifier\nUNVSL61\n463\nFor RHC/FQHC: Code Check CPT Mod Alert (Presence) is\n[Present] AND CPT Mod1 is not [CG]\nImproper or invalid modifier is present - review\nfor proper modifier usage.\n\n\nSurgical endoscopy includes diagnostic\nDIGES5\n825\nCPT Code is [45378] AND CPT Code is one of [4530*, 4531*,\n4532*, 4533*, 4534*, 4535*, 4537*, 4538*]\nA surgical Colonoscopy includes a diagnostic\nColonoscopy (45378) and should not be billed\nseparately.\n\n\nLiberty Mutual fax/portal\nUNVSL72\n501\nPrimary Insurance is one of [LIBERTY MUTAL INSURANCE (53),\nLIBERTY MUTAL (340), LIBERTY MEDICAL MAIL (469), LIBERTY\nMUTUAL (1421), LIBERTY MUTUAL (1534), LIBERTY MUTUAL (1543),\nLIBERTY MUTAL CORP (1556)]\nFor WC claims: Follow Workers Comp billing\nguidelines for electronic claims attachments.\nIf unsuccessful, Fax claims to 888-925-8391\nAttn: Bill Review or use the portal at\nhttps://www.libertymutualprovidersupport.com\n\n\n\n\n\n\n\n\nstep:\nvariable: Recode to standardize\nclass: Variable Data Class\ngroup: Variable Grouping\naction: Remove\nmethod: Operation Performed to Test for Expected State\nexpression: Actual Code to Run\nvalue: Coerce to correct data type, deal with wildcards\n\n\ncomponents &lt;- rules |&gt; \n  select(id, step, variable, action, value) |&gt; \n  distinct()\n\ncomponents\n\n# A tibble: 3,131 × 5\n      id  step variable                  action    value                        \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                     &lt;chr&gt;     &lt;chr&gt;                        \n 1     1     1 CPT Code                  is        43760                        \n 2     1     2 Encounter Date of Service after     01/01/2019                   \n 3     2     1 Primary Insurance         is        BCBS                         \n 4     2     2 CPT Code                  is        J*                           \n 5     2     3 CPT NDC (Presence)        is not    Present                      \n 6     3     1 Primary Insurance         is        BCBS                         \n 7     3     2 CPT NDC (Presence)        is not    Present                      \n 8     3     3 CPT Code                  is one of 90476,90477,905*,906*,9071*,…\n 9     4     1 DX Code                   is        S*                           \n10     5     1 Primary Insurance         is        BCBS (125),BCBS AL BLUE ADVA…\n# ℹ 3,121 more rows\n\n\n\n\n\nhcpcs:\n\nmod_1:\n\nmod_2:\n\nmod_3:\n\nmod_4:\n\nunit:\n\nicd:\n\ndos:\n\npos:\n\nub04:\n\nndc:\n\nrev_code:\n\ncci:\n\nlcd:\n\nncd:\n\ndob:\n\nsex:\n\nrendering:\n\nreferring:\n\nprimary_class:\n\nprimary_name:\n\nprimary_auth:\n\nsecondary_class:\n\nsecondary_name:\n\n\ncomponents &lt;- components |&gt;\n  mutate(variable = case_match(variable,\n      c(\"CPT CODE\", \n        \"CPT Code\", \n        \"CPT code\", \n        \"CPT\", \n        \"Code Check Expired CPT Alert (Presence)\", \n        \"CPT is one of\") ~ \"hcpcs\",\n      c(\"Mod1\", \n        \"CPT Mod1\", \n        \"CPT Mod 1\", \n        \"CPTMod1\", \n        \"Code Check CPT Mod Alert (Presence)\", \n        \"CPT MOD1\", \n        \"CPT Mod1 (Presence)\") ~ \"mod_1\",\n      c(\"Mod2\", \n        \"CPT MOD2\", \n        \"CPT Mod 2\", \n        \"CPT Mod2 (Presence)\", \n        \"CPTMod2\", \n        \"CPT Mod2\") ~ \"mod_2\",\n      \"CPT Mod3\" ~ \"mod_3\",\n      \"CPT Mod4\" ~ \"mod_4\",\n      \"CPT Units\" ~ \"unit\",\n      c(\"Dx code\", \n        \"DX Code\", \n        \"Dx Code\", \n        \"Code Check Expired DX Alert (Presence)\") ~ \"icd\",\n      c(\"Encounter Date of Service\", \n        \"Date of Service\") ~ \"dos\",\n      c(\"Location\", \n        \"Place of Service\") ~ \"pos\",\n      c(\"CPT UB04\", \n        \"UB04 Bill Type\") ~ \"ub04\",\n      \"CPT NDC (Presence)\" ~ \"ndc\",\n      \"CPT Rev Code\" ~ \"rev_code\",\n      \"Code Check CCI Alert (Presence)\" ~ \"cci\",\n      \"Code Check LCD Alert (Presence)\" ~ \"lcd\",\n      \"Code Check NCD Alert (Presence)\" ~ \"ncd\",\n      c(\"Patient Age\", \n        \"Code Check Age Alert (Presence)\") ~ \"dob\",\n      c(\"Patient Sex\", \n        \"Code Check Gender Alert (Presence)\") ~ \"sex\",\n      \"NA\" ~ NA_character_,\n      \"Rendering Provider\" ~ \"rendering\",\n      \"Referring Provider (Presence)\" ~ \"referring\",\n      c(\"Primary Insurance Class\", \n        \"Primary Insurance class\", \n        \"Primary insurance class\") ~ \"primary_class\",\n      \"Primary Insurance\" ~ \"primary_name\",\n      \"Secondary Insurance Class\" ~ \"secondary_class\",\n      \"Secondary Insurance\" ~ \"secondary_name\",\n      c(\"Primary Insurance Authorization (Presence)\", \n        \"Primary Insurance Authorization (Presence) is not [Present]\") ~ \"primary_auth\",\n      .default = variable) |&gt; \n      as_factor())\n\ncomponents\n\n# A tibble: 3,131 × 5\n      id  step variable     action    value                                     \n   &lt;int&gt; &lt;int&gt; &lt;fct&gt;        &lt;chr&gt;     &lt;chr&gt;                                     \n 1     1     1 hcpcs        is        43760                                     \n 2     1     2 dos          after     01/01/2019                                \n 3     2     1 primary_name is        BCBS                                      \n 4     2     2 hcpcs        is        J*                                        \n 5     2     3 ndc          is not    Present                                   \n 6     3     1 primary_name is        BCBS                                      \n 7     3     2 ndc          is not    Present                                   \n 8     3     3 hcpcs        is one of 90476,90477,905*,906*,9071*,9072*,9073*,9…\n 9     4     1 icd          is        S*                                        \n10     5     1 primary_name is        BCBS (125),BCBS AL BLUE ADVANTAGE MEDICAR…\n# ℹ 3,121 more rows\n\n\n\n\ncomponents &lt;- components |&gt; \n  mutate(\n    class = case_match(variable,\n      c(\"sex\", \"rendering\", \"referring\", \n        \"primary_auth\", \"primary_class\", \n        \"primary_name\", \"secondary_class\", \n        \"secondary_name\", \"ncd\", \"lcd\", \n        \"cci\", \"ndc\", \"ub04\", \"pos\", \n        \"icd\", \"hcpcs\", \"mod_1\", \"mod_2\", \n        \"mod_3\", \"mod_4\") ~ \"&lt;chr&gt;\",\n      c(\"rev_code\", \"unit\") ~ \"&lt;int&gt;\",\n      c(\"dos\", \"dob\") ~ \"&lt;date&gt;\"\n    ) |&gt; as_factor(),\n    group = case_match(as.character(variable),\n      c(\"sex\", \"dos\", \"dob\") ~ \"patient\",\n      c(\"rendering\", \"referring\") ~ \"provider\",\n      c(\"hcpcs\", \"mod_1\", \"mod_2\", \"mod_3\", \"mod_4\", \n        \"rev_code\", \"unit\", \"ndc\", \"pos\") ~ \"procedure\",\n      c(\"icd\") ~ \"diagnosis\",\n      c(\"ub04\", \"1500\") ~ \"claim\",\n      c(\"ncd\", \"lcd\", \"cci\") ~ \"ncci\",\n      c(\"primary_auth\", \"primary_class\", \n        \"primary_name\", \"secondary_class\", \n        \"secondary_name\") ~ \"payer\"\n    ) |&gt; as_factor())\n\ncomponents # |&gt; \n\n# A tibble: 3,131 × 7\n      id  step variable     action    value                          class group\n   &lt;int&gt; &lt;int&gt; &lt;fct&gt;        &lt;chr&gt;     &lt;chr&gt;                          &lt;fct&gt; &lt;fct&gt;\n 1     1     1 hcpcs        is        43760                          &lt;chr&gt; proc…\n 2     1     2 dos          after     01/01/2019                     &lt;dat… pati…\n 3     2     1 primary_name is        BCBS                           &lt;chr&gt; payer\n 4     2     2 hcpcs        is        J*                             &lt;chr&gt; proc…\n 5     2     3 ndc          is not    Present                        &lt;chr&gt; proc…\n 6     3     1 primary_name is        BCBS                           &lt;chr&gt; payer\n 7     3     2 ndc          is not    Present                        &lt;chr&gt; proc…\n 8     3     3 hcpcs        is one of 90476,90477,905*,906*,9071*,9… &lt;chr&gt; proc…\n 9     4     1 icd          is        S*                             &lt;chr&gt; diag…\n10     5     1 primary_name is        BCBS (125),BCBS AL BLUE ADVAN… &lt;chr&gt; payer\n# ℹ 3,121 more rows\n\n  # select(class, group, variable, action) |&gt; \n  # arrange(class, group, variable) |&gt;\n  # gt() |&gt;\n  # cols_align(align = \"left\") |&gt;\n  # opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  # opt_all_caps() |&gt;\n  # tab_style(\n  #     style = cell_text(\n  #       align = 'left',\n  #       weight = \"bold\",\n  #       font = google_font(name = \"Roboto Mono\")),\n  #     locations = cells_body(columns = c(action))) |&gt;\n  # tab_style(\n  #     style = cell_text(\n  #       align = 'left',\n  #       weight = \"normal\",\n  #       style = \"italic\",\n  #       decorate = \"underline\",\n  #       stretch = \"condensed\",\n  #       font = google_font(name = \"Fira Code\")),\n  #     locations = cells_body(columns = c(class))) |&gt;\n  # tab_options(table.width = pct(100),\n  #             quarto.disable_processing = TRUE)\n\n\n\ncomponents |&gt; \n  filter(variable == \"dos\") |&gt; \n  mutate(class = \"&lt;date&gt;\",\n         value = anytime::anydate(value),\n         method = if_else(str_detect(action, \"after\"), \"&gt;\", \"&lt;\")) |&gt; \n  select(id, step, class, variable, method, value) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  opt_stylize() |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n    \n\n\n1\n2\n&lt;date&gt;\ndos\n&gt;\n2019-01-01\n\n\n160\n3\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n305\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n317\n4\n&lt;date&gt;\ndos\n&gt;\n2019-01-01\n\n\n349\n3\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n351\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n371\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n416\n1\n&lt;date&gt;\ndos\n&gt;\n2019-07-31\n\n\n416\n2\n&lt;date&gt;\ndos\n&lt;\n2020-08-01\n\n\n475\n1\n&lt;date&gt;\ndos\n&gt;\n2020-03-09\n\n\n475\n6\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n479\n3\n&lt;date&gt;\ndos\n&gt;\n2020-03-05\n\n\n491\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n493\n4\n&lt;date&gt;\ndos\n&lt;\n2024-12-31\n\n\n504\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n505\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n605\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n606\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n607\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n608\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n610\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n612\n3\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n615\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n616\n3\n&lt;date&gt;\ndos\n&lt;\n2022-01-01\n\n\n622\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n630\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n633\n2\n&lt;date&gt;\ndos\n&gt;\n2023-06-01\n\n\n635\n1\n&lt;date&gt;\ndos\n&gt;\n2021-04-30\n\n\n640\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n699\n9\n&lt;date&gt;\ndos\n&lt;\n2024-12-31\n\n\n700\n3\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n732\n1\n&lt;date&gt;\ndos\n&gt;\n2021-03-31\n\n\n765\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n788\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n813\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n814\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n815\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n816\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n817\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n828\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n829\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n830\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n850\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n851\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n852\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n853\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n854\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n879\n4\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n881\n4\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n885\n1\n&lt;date&gt;\ndos\n&gt;\n2021-12-31\n\n\n889\n1\n&lt;date&gt;\ndos\n&gt;\n2022-01-23\n\n\n890\n1\n&lt;date&gt;\ndos\n&lt;\n2022-01-01\n\n\n933\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n934\n3\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n947\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n971\n2\n&lt;date&gt;\ndos\n&gt;\n2022-10-01\n\n\n972\n2\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n973\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n974\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n975\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n976\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n977\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n981\n1\n&lt;date&gt;\ndos\n&gt;\n2022-09-01\n\n\n982\n1\n&lt;date&gt;\ndos\n&gt;\n2022-11-01\n\n\n984\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n985\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n986\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n987\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n988\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n989\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n990\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n991\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n992\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n993\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n994\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n999\n2\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1000\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1001\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1015\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n1041\n2\n&lt;date&gt;\ndos\n&gt;\n2023-05-25\n\n\n1044\n4\n&lt;date&gt;\ndos\n&gt;\n2023-05-11\n\n\n1067\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-16\n\n\n1074\n3\n&lt;date&gt;\ndos\n&gt;\n2023-08-01\n\n\n1076\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-01\n\n\n1079\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n1080\n2\n&lt;date&gt;\ndos\n&gt;\n2023-05-07\n\n\n1083\n2\n&lt;date&gt;\ndos\n&gt;\n2023-11-01\n\n\n1084\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n\n\n\n\n\nAll ages should be in the same unit of time, in this case, days.\nShould be calculated from the encounter’s Date of Service (dos) and the patient’s Date of Birth (dob).\n\ncomponents |&gt; \n  filter(variable == \"dob\") |&gt; \n  mutate(variable = \"age\",\n         class = \"&lt;int&gt;\", \n         age = strex::str_extract_numbers(value),\n         period = strex::str_extract_non_numerics(value),\n         .before = variable) |&gt; \n  unnest(c(age, period)) |&gt; \n  mutate(\n    age = as.integer(age),\n    period = str_remove_all(period, \"\\\\s|,\"),\n    value = NULL,\n    method = case_match(\n      action,\n      c(\"is younger than\", \"younger than\") ~ \"&lt;\",\n      \"is older than\" ~ \"&gt;\",\n      \"is\" ~ \"==\",\n      .default = NA_character_),\n    days = case_when(\n      period == \"years\" ~ as.duration(years(age)) / ddays(1),\n      period == \"months\" ~ as.duration(months(age)) / ddays(1),\n      period == \"days\" ~ as.duration(days(age)) / ddays(1),\n      .default = NA_real_),\n    dos = lubridate::today(),\n  ) |&gt; \n  select(id, step, class, variable, method, age, period, days) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  fmt_integer(columns = c(\"age\", \"days\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      age\n      period\n      days\n    \n\n\n8\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n8\n3\n&lt;int&gt;\nage\n&gt;\n3\nyears\n1,096\n\n\n9\n3\n&lt;int&gt;\nage\n&gt;\n20\nyears\n7,305\n\n\n13\n4\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n27\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n37\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n70\n1\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n72\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n75\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n76\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n77\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n78\n2\n&lt;int&gt;\nage\n&lt;\n3\nyears\n1,096\n\n\n80\n3\n&lt;int&gt;\nage\n==\n18\nmonths\n548\n\n\n80\n4\n&lt;int&gt;\nage\n==\n24\nmonths\n730\n\n\n82\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n83\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n84\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n85\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n86\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n87\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n88\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n90\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n91\n3\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n96\n6\n&lt;int&gt;\nage\n&gt;\n21\nyears\n7,670\n\n\n150\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n171\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n172\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n173\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n174\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n176\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n203\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n212\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n214\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n223\n2\n&lt;int&gt;\nage\n&gt;\n10\nyears\n3,652\n\n\n224\n1\n&lt;int&gt;\nage\n&lt;\n11\nyears\n4,018\n\n\n239\n2\n&lt;int&gt;\nage\n&gt;\n11\nmonths\n335\n\n\n242\n1\n&lt;int&gt;\nage\n&lt;\n8\ndays\n8\n\n\n243\n3\n&lt;int&gt;\nage\n&gt;\n7\ndays\n7\n\n\n243\n4\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n244\n1\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n244\n2\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n245\n1\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n250\n2\n&lt;int&gt;\nage\n&lt;\n1\nyears\n365\n\n\n250\n3\n&lt;int&gt;\nage\n&gt;\n5\nyears\n1,826\n\n\n255\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n256\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n258\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n259\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n260\n2\n&lt;int&gt;\nage\n&lt;\n5\nyears\n1,826\n\n\n260\n3\n&lt;int&gt;\nage\n&gt;\n11\nyears\n4,018\n\n\n261\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n262\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n264\n2\n&lt;int&gt;\nage\n&lt;\n12\nyears\n4,383\n\n\n264\n3\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n265\n2\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n265\n3\n&lt;int&gt;\nage\n&gt;\n39\nyears\n14,245\n\n\n266\n2\n&lt;int&gt;\nage\n&lt;\n40\nyears\n14,610\n\n\n266\n3\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n267\n2\n&lt;int&gt;\nage\n&lt;\n65\nyears\n23,741\n\n\n335\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n335\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n338\n2\n&lt;int&gt;\nage\n&gt;\n20\nyears\n7,305\n\n\n338\n3\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n370\n1\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n377\n1\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n397\n2\n&lt;int&gt;\nage\n&lt;\n4\nyears\n1,461\n\n\n397\n3\n&lt;int&gt;\nage\n&gt;\n6\nyears\n2,192\n\n\n398\n2\n&lt;int&gt;\nage\n&gt;\n7\nyears\n2,557\n\n\n399\n2\n&lt;int&gt;\nage\n&lt;\n7\nyears\n2,557\n\n\n400\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n401\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n403\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n404\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n405\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n406\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n407\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n408\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n409\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n410\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n411\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n412\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n414\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n418\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n434\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n436\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n454\n2\n&lt;int&gt;\nage\n&lt;\n65\nyears\n23,741\n\n\n455\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n456\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n457\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n459\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n521\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n571\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n580\n1\n&lt;int&gt;\nage\n&lt;\n20\nyears\n7,305\n\n\n581\n2\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n603\n1\n&lt;int&gt;\nage\n&lt;\n1\nmonths\n30\n\n\n613\n3\n&lt;int&gt;\nage\n&lt;\n12\nyears\n4,383\n\n\n641\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n642\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n645\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n651\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n652\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n653\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n654\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n655\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n656\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n657\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n658\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n659\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n660\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n661\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n662\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n663\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n664\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n665\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n666\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n667\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n668\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n669\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n670\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n671\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n672\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n674\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n685\n2\n&lt;int&gt;\nage\n&lt;\n15\nyears\n5,479\n\n\n686\n2\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n687\n1\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n690\n2\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n690\n3\n&lt;int&gt;\nage\n&gt;\n49\nyears\n17,897\n\n\n691\n1\n&lt;int&gt;\nage\n&lt;\n4\nyears\n1,461\n\n\n692\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n693\n1\n&lt;int&gt;\nage\n&lt;\n6\nmonths\n183\n\n\n693\n2\n&lt;int&gt;\nage\n&gt;\n35\nmonths\n1,065\n\n\n694\n1\n&lt;int&gt;\nage\n&lt;\n3\nyears\n1,096\n\n\n695\n2\n&lt;int&gt;\nage\n&gt;\n16\nyears\n5,844\n\n\n707\n2\n&lt;int&gt;\nage\n&lt;\n35\nyears\n12,784\n\n\n708\n2\n&lt;int&gt;\nage\n&gt;\n35\nyears\n12,784\n\n\n709\n2\n&lt;int&gt;\nage\n&lt;\n16\nyears\n5,844\n\n\n721\n2\n&lt;int&gt;\nage\n&gt;\n1\nyears\n365\n\n\n726\n2\n&lt;int&gt;\nage\n&gt;\n21\nyears\n7,670\n\n\n727\n2\n&lt;int&gt;\nage\n&lt;\n9\nyears\n3,287\n\n\n727\n3\n&lt;int&gt;\nage\n&gt;\n65\nyears\n23,741\n\n\n729\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n735\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n736\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n738\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n739\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n740\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n751\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n762\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n764\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n768\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n838\n2\n&lt;int&gt;\nage\n&lt;\n71\nyears\n25,933\n\n\n838\n3\n&lt;int&gt;\nage\n&gt;\n364\ndays\n364\n\n\n844\n5\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n854\n2\n&lt;int&gt;\nage\n&gt;\n12\nyears\n4,383\n\n\n893\n2\n&lt;int&gt;\nage\n&lt;\n6\nmonths\n183\n\n\n893\n3\n&lt;int&gt;\nage\n&gt;\n35\nmonths\n1,065\n\n\n936\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n942\n1\n&lt;int&gt;\nage\n&gt;\n11\nmonths\n335\n\n\n946\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n981\n4\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n1051\n3\n&lt;int&gt;\nage\n==\n9\nmonths\n274\n\n\n1051\n4\n&lt;int&gt;\nage\n==\n18\nmonths\n548\n\n\n1051\n5\n&lt;int&gt;\nage\n==\n30\nmonths\n913\n\n\n1071\n2\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n\n\n\n\n\n\ncomponents |&gt; \n  filter(variable == \"unit\") |&gt; \n  mutate(class = \"&lt;int&gt;\", \n         value = as.integer(value),\n         method = if_else(str_detect(action, \"is not\"), \"!=\", \"==\"),\n         .before = variable) |&gt; \n  select(id, step, class, variable, method, value, action) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n    \n\n\n169\n2\n&lt;int&gt;\nunit\n!=\n2\nis not\n\n\n621\n2\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n730\n3\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n730\n4\n&lt;int&gt;\nunit\n==\n3\nis\n\n\n730\n5\n&lt;int&gt;\nunit\n==\n4\nis\n\n\n730\n6\n&lt;int&gt;\nunit\n==\n5\nis\n\n\n730\n7\n&lt;int&gt;\nunit\n==\n6\nis\n\n\n731\n1\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n731\n2\n&lt;int&gt;\nunit\n==\n3\nis\n\n\n731\n3\n&lt;int&gt;\nunit\n==\n4\nis\n\n\n731\n4\n&lt;int&gt;\nunit\n==\n5\nis\n\n\n731\n5\n&lt;int&gt;\nunit\n==\n6\nis\n\n\n1078\n2\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n\n\n\n\n\nHow can this be represented in relational algebra? Detect presence with regex?\nIf not present, then is NA its’ representation? If so, is.na(x) would equal is not present and !is.na(x) would equal is present\n\ncomponents |&gt; \n  filter(variable == \"ndc\") |&gt; \n  mutate(class = \"&lt;lgl&gt;\", \n         .before = variable, \n         method = if_else(str_detect(action, \"is not\"), \"is.na(x)\", \"!is.na(x)\")) |&gt; \n  select(id, step, class, variable, method, value, action) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n    \n\n\n2\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n3\n2\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n10\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n15\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n25\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n39\n2\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n40\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n153\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n207\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n211\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n327\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n336\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n353\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nPresent\nis\n\n\n362\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNotPresent\nis\n\n\n522\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n523\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n570\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n585\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n749\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n752\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n766\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n944\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n1002\n2\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n\n\n\n\n\n\nhas all\nis\nis not\nis one of\n\nsome values contain wildcards *\n\ncomponents |&gt; \n  filter(variable == \"icd\") |&gt;\n  mutate(wc = case_when(str_detect(value, \"\\\\*\") ~ 1L, .default = 0L),\n         nchar = if_else(wc == 1, str_count(value, \"[[:alnum:]]\"), 0L),\n         class = \"&lt;chr&gt;\",\n         method = case_when(\n           action == \"is\" & wc == 1 ~ \"%in%\",\n           action == \"is\" & wc == 0 ~ \"==\",\n           .default = NA_character_)\n         ) |&gt; \n  filter(!is.na(method)) |&gt; \n  select(id, step, class, variable, method, value, action, wc, nchar) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n      wc\n      nchar\n    \n\n\n4\n1\n&lt;chr&gt;\nicd\n%in%\nS*\nis\n1\n1\n\n\n23\n2\n&lt;chr&gt;\nicd\n==\nH01.119\nis\n0\n0\n\n\n24\n2\n&lt;chr&gt;\nicd\n%in%\nS*\nis\n1\n1\n\n\n79\n3\n&lt;chr&gt;\nicd\n==\nZ13.41\nis\n0\n0\n\n\n100\n1\n&lt;chr&gt;\nicd\n%in%\nR06.0*\nis\n1\n4\n\n\n101\n1\n&lt;chr&gt;\nicd\n%in%\nJ41.*\nis\n1\n3\n\n\n104\n1\n&lt;chr&gt;\nicd\n==\nG89.2\nis\n0\n0\n\n\n106\n1\n&lt;chr&gt;\nicd\n%in%\nE08.*\nis\n1\n3\n\n\n107\n1\n&lt;chr&gt;\nicd\n%in%\nG30.*\nis\n1\n3\n\n\n108\n1\n&lt;chr&gt;\nicd\n==\nR63.5\nis\n0\n0\n\n\n109\n1\n&lt;chr&gt;\nicd\n%in%\nR41.*\nis\n1\n3\n\n\n110\n1\n&lt;chr&gt;\nicd\n==\nJ00\nis\n0\n0\n\n\n111\n1\n&lt;chr&gt;\nicd\n==\nR41.3\nis\n0\n0\n\n\n112\n1\n&lt;chr&gt;\nicd\n%in%\nG43.*\nis\n1\n3\n\n\n113\n1\n&lt;chr&gt;\nicd\n%in%\nG43.7*\nis\n1\n4\n\n\n113\n2\n&lt;chr&gt;\nicd\n%in%\nG43.0*\nis\n1\n4\n\n\n114\n1\n&lt;chr&gt;\nicd\n==\nZ72.821\nis\n0\n0\n\n\n115\n1\n&lt;chr&gt;\nicd\n%in%\nM54.1*\nis\n1\n4\n\n\n116\n1\n&lt;chr&gt;\nicd\n%in%\nM54.5*\nis\n1\n4\n\n\n118\n1\n&lt;chr&gt;\nicd\n%in%\nE10.*\nis\n1\n3\n\n\n119\n1\n&lt;chr&gt;\nicd\n%in%\nE11.*\nis\n1\n3\n\n\n120\n1\n&lt;chr&gt;\nicd\n%in%\nE09.*\nis\n1\n3\n\n\n122\n1\n&lt;chr&gt;\nicd\n==\nG31.84\nis\n0\n0\n\n\n123\n1\n&lt;chr&gt;\nicd\n%in%\nJ45*\nis\n1\n3\n\n\n124\n1\n&lt;chr&gt;\nicd\n==\nZ72.0\nis\n0\n0\n\n\n125\n1\n&lt;chr&gt;\nicd\n==\nN39.0\nis\n0\n0\n\n\n126\n1\n&lt;chr&gt;\nicd\n%in%\nR06*\nis\n1\n3\n\n\n128\n1\n&lt;chr&gt;\nicd\n%in%\nF20*\nis\n1\n3\n\n\n129\n1\n&lt;chr&gt;\nicd\n%in%\nF30*\nis\n1\n3\n\n\n130\n1\n&lt;chr&gt;\nicd\n%in%\nF31*\nis\n1\n3\n\n\n131\n1\n&lt;chr&gt;\nicd\n==\nH72.00\nis\n0\n0\n\n\n132\n1\n&lt;chr&gt;\nicd\n%in%\nF32*\nis\n1\n3\n\n\n133\n1\n&lt;chr&gt;\nicd\n%in%\nF33*\nis\n1\n3\n\n\n138\n1\n&lt;chr&gt;\nicd\n%in%\nF10.1*\nis\n1\n4\n\n\n139\n1\n&lt;chr&gt;\nicd\n%in%\nF11.1*\nis\n1\n4\n\n\n140\n1\n&lt;chr&gt;\nicd\n==\nZ31.89\nis\n0\n0\n\n\n141\n1\n&lt;chr&gt;\nicd\n%in%\nM75.12*\nis\n1\n5\n\n\n141\n2\n&lt;chr&gt;\nicd\n%in%\nS46.01*\nis\n1\n5\n\n\n142\n1\n&lt;chr&gt;\nicd\n==\nJ30.9\nis\n0\n0\n\n\n143\n1\n&lt;chr&gt;\nicd\n==\nJ06.9\nis\n0\n0\n\n\n144\n1\n&lt;chr&gt;\nicd\n==\nR07.0\nis\n0\n0\n\n\n145\n1\n&lt;chr&gt;\nicd\n==\nM51.16\nis\n0\n0\n\n\n146\n1\n&lt;chr&gt;\nicd\n%in%\nM54.3*\nis\n1\n4\n\n\n154\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n230\n2\n&lt;chr&gt;\nicd\n==\nM17.0\nis\n0\n0\n\n\n363\n1\n&lt;chr&gt;\nicd\n%in%\nZ68*\nis\n1\n3\n\n\n368\n1\n&lt;chr&gt;\nicd\n==\nH61.23\nis\n0\n0\n\n\n382\n1\n&lt;chr&gt;\nicd\n%in%\nZ01.41*\nis\n1\n5\n\n\n402\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n436\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n448\n1\n&lt;chr&gt;\nicd\n%in%\nZ01.41*\nis\n1\n5\n\n\n457\n1\n&lt;chr&gt;\nicd\n==\nR17\nis\n0\n0\n\n\n469\n1\n&lt;chr&gt;\nicd\n==\nPresent\nis\n0\n0\n\n\n476\n1\n&lt;chr&gt;\nicd\n==\nR50.81\nis\n0\n0\n\n\n521\n1\n&lt;chr&gt;\nicd\n==\nF91.3\nis\n0\n0\n\n\n531\n1\n&lt;chr&gt;\nicd\n%in%\nJ95*\nis\n1\n3\n\n\n536\n1\n&lt;chr&gt;\nicd\n%in%\nR53.8*\nis\n1\n4\n\n\n596\n1\n&lt;chr&gt;\nicd\n==\nH60.393\nis\n0\n0\n\n\n599\n1\n&lt;chr&gt;\nicd\n==\nH66.90\nis\n0\n0\n\n\n602\n1\n&lt;chr&gt;\nicd\n%in%\nM43.0*\nis\n1\n4\n\n\n603\n2\n&lt;chr&gt;\nicd\n%in%\nO*\nis\n1\n1\n\n\n605\n2\n&lt;chr&gt;\nicd\n==\nZ11.59\nis\n0\n0\n\n\n606\n2\n&lt;chr&gt;\nicd\n==\nZ20.828\nis\n0\n0\n\n\n607\n2\n&lt;chr&gt;\nicd\n==\nJ12.82\nis\n0\n0\n\n\n609\n1\n&lt;chr&gt;\nicd\n==\nM35.81\nis\n0\n0\n\n\n622\n1\n&lt;chr&gt;\nicd\n==\nZ11.52\nis\n0\n0\n\n\n628\n1\n&lt;chr&gt;\nicd\n%in%\nR51.*\nis\n1\n3\n\n\n629\n1\n&lt;chr&gt;\nicd\n%in%\nM12.55*\nis\n1\n5\n\n\n634\n1\n&lt;chr&gt;\nicd\n==\nH62.40\nis\n0\n0\n\n\n637\n1\n&lt;chr&gt;\nicd\n==\nZ00.8\nis\n0\n0\n\n\n638\n1\n&lt;chr&gt;\nicd\n%in%\nE66*\nis\n1\n3\n\n\n648\n2\n&lt;chr&gt;\nicd\n%in%\nO*\nis\n1\n1\n\n\n677\n1\n&lt;chr&gt;\nicd\n==\nG25.3\nis\n0\n0\n\n\n678\n1\n&lt;chr&gt;\nicd\n==\nR56.1\nis\n0\n0\n\n\n681\n1\n&lt;chr&gt;\nicd\n%in%\nR22.*\nis\n1\n3\n\n\n682\n1\n&lt;chr&gt;\nicd\n%in%\nG58.*\nis\n1\n3\n\n\n683\n1\n&lt;chr&gt;\nicd\n%in%\nR65.*\nis\n1\n3\n\n\n695\n1\n&lt;chr&gt;\nicd\n%in%\nO09.6*\nis\n1\n4\n\n\n698\n1\n&lt;chr&gt;\nicd\n==\nB97.21\nis\n0\n0\n\n\n705\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n706\n1\n&lt;chr&gt;\nicd\n%in%\nZ3A*\nis\n1\n3\n\n\n707\n1\n&lt;chr&gt;\nicd\n%in%\nO09.5*\nis\n1\n4\n\n\n708\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n709\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n710\n2\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n711\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n712\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n728\n1\n&lt;chr&gt;\nicd\n%in%\nL50*\nis\n1\n3\n\n\n729\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n735\n5\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n736\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n737\n1\n&lt;chr&gt;\nicd\n==\nR19.4\nis\n0\n0\n\n\n753\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n755\n4\n&lt;chr&gt;\nicd\n%in%\nZ30*\nis\n1\n3\n\n\n768\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n782\n1\n&lt;chr&gt;\nicd\n==\nJ91.0\nis\n0\n0\n\n\n783\n1\n&lt;chr&gt;\nicd\n==\nJ91.8\nis\n0\n0\n\n\n803\n1\n&lt;chr&gt;\nicd\n==\nI87.2\nis\n0\n0\n\n\n811\n1\n&lt;chr&gt;\nicd\n%in%\nZ13.39,Z0*\nis\n1\n7\n\n\n813\n2\n&lt;chr&gt;\nicd\n==\nM35.81\nis\n0\n0\n\n\n815\n2\n&lt;chr&gt;\nicd\n==\nU09.9\nis\n0\n0\n\n\n816\n2\n&lt;chr&gt;\nicd\n==\nF32.9\nis\n0\n0\n\n\n817\n2\n&lt;chr&gt;\nicd\n==\nR63.3\nis\n0\n0\n\n\n827\n1\n&lt;chr&gt;\nicd\n==\nR35.8\nis\n0\n0\n\n\n828\n2\n&lt;chr&gt;\nicd\n==\nM54.5\nis\n0\n0\n\n\n829\n2\n&lt;chr&gt;\nicd\n==\nP09\nis\n0\n0\n\n\n830\n2\n&lt;chr&gt;\nicd\n==\nR05\nis\n0\n0\n\n\n831\n1\n&lt;chr&gt;\nicd\n==\nZ20.822\nis\n0\n0\n\n\n831\n2\n&lt;chr&gt;\nicd\n==\nU07.1\nis\n0\n0\n\n\n842\n1\n&lt;chr&gt;\nicd\n%in%\nB97*\nis\n1\n3\n\n\n858\n1\n&lt;chr&gt;\nicd\n%in%\nZ37.*\nis\n1\n3\n\n\n957\n1\n&lt;chr&gt;\nicd\n%in%\nQ03*\nis\n1\n3\n\n\n965\n3\n&lt;chr&gt;\nicd\n==\nZ12.5\nis\n0\n0\n\n\n969\n3\n&lt;chr&gt;\nicd\n%in%\nZ12.*\nis\n1\n3\n\n\n971\n1\n&lt;chr&gt;\nicd\n==\nB37.3\nis\n0\n0\n\n\n1003\n1\n&lt;chr&gt;\nicd\n==\nK30\nis\n0\n0\n\n\n1039\n3\n&lt;chr&gt;\nicd\n==\nZ13.41\nis\n0\n0\n\n\n1057\n1\n&lt;chr&gt;\nicd\n%in%\nR31.*\nis\n1\n3\n\n\n1062\n1\n&lt;chr&gt;\nicd\n==\nJ02.9\nis\n0\n0\n\n\n1064\n3\n&lt;chr&gt;\nicd\n==\nR19.5\nis\n0\n0\n\n\n1071\n1\n&lt;chr&gt;\nicd\n%in%\nH04.53*\nis\n1\n5\n\n\n1072\n1\n&lt;chr&gt;\nicd\n==\nM54.6\nis\n0\n0\n\n\n1077\n2\n&lt;chr&gt;\nicd\n%in%\nF25*\nis\n1\n3\n\n\n1092\n1\n&lt;chr&gt;\nicd\n%in%\nF17.*\nis\n1\n3\n\n\n\n\n\n\n\n\ncategorize_vars |&gt;\n  separate_longer_delim(cols = value, delim = \",\") |&gt;\n  mutate(value = str_squish(value),\n         neg = case_when(str_detect(action, \"not\") ~ 1L, .default = 0L),\n         wc = case_when(str_detect(value, \"\\\\*\") ~ 1L, .default = 0L),\n         .after = value)\n\nhead_tail(rules_new, n = 10, by = c(\"var\", \"action\")) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(var, action, value))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\nrules_new |&gt;\n  filter(!is.na(var)) |&gt;\n  group_by(var) |&gt;\n  count(action) |&gt;\n  ungroup() |&gt;\n  arrange(var, desc(n), action) |&gt;\n  gt(groupname_col = \"var\", row_group_as_column = TRUE) |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(\n    font = google_font(name = \"Roboto Condensed\"),\n    weight = \"bold\"\n    ) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(var, action))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\nrules_new |&gt;\n  filter(wc == 1,\n         var == \"hcpcs\") |&gt;\n  mutate(value = str_remove_all(value, \"\\\\*\"),\n         chars = 5 - str_length(value),\n         .after = value) |&gt;\n  mutate(\n    regex = case_when(\n      chars == 0 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\"),\n      chars == 1 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;[0-9]$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\"),\n      chars &gt; 1 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;[0-9]{&lt;&lt;chars&gt;&gt;}$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\")),\n    regex = case_when(neg == 1L ~ glue_chr('!{regex}'), .default = regex),\n    .after = regex\n  ) |&gt;\n  head_tail(n = 10, by = c(\"var\", \"action\")) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(regex))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\nnorthstar::search_descriptions(hcpcs_desc_type = \"Long\") |&gt; \n  # dplyr::mutate(not_hcpcs = !grepl(\"^99[0-9]{3}$\", hcpcs_code)) |&gt; \n  filter(!grepl(\"^99[0-9]{3,3}$\", hcpcs_code)) |&gt;\n  # dplyr::mutate(has_hcpcs = grepl(\"^J[0-9]{4}$\", hcpcs_code)) |&gt; \n  filter(str_detect(hcpcs_code, regex(\"^J[0-9]{4}$\"))) |&gt; \n  filter(str_detect(hcpcs_code, regex(\"^(?!5405)(?&lt;![0-9]{1})$\"))) |&gt; \n  print(n = 200)\n\n# Match strings that don't start with \"99\" and don't end with 3 digits\npattern &lt;- \"^(?!99).*(?&lt;![0-9]{3})$\"\n\n# Negation pattern\n\"^(?!9938[0-9]{1}$)\"\n\n# Begins with 0, ends with digit\n\"^0.*\\\\d$\"\n\n# Begins with 0, ends with letter\n\"^0.*[A-Z]$\"\n\n# Match strings that don't start with \"a\" and don't end with \"z\"\npattern &lt;- \"^(?!a).*[^z]$\"\ngrep(pattern, c(\"apple\", \"banana\", \"cherry\"), value = TRUE)\n# Output: \"banana\" \"cherry\"\n\nstringr::str_detect(\"99202\", stringr::regex(\"^[992]{3}.*\"))\n\ngrep(\"^[992]{3}.*\", \"99202\", value = TRUE, invert = TRUE)\n\n\npattern = dplyr::case_when(\n  chars == 0 & negation == FALSE ~ glue::glue(\"^&lt;value&gt;$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars &gt; 0  & negation == FALSE ~ glue::glue(\"^&lt;value&gt;[0-9]{&lt;chars&gt;}$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars == 0 & negation == TRUE ~ glue::glue(\"^(?!&lt;value&gt;)$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars &gt; 0  & negation == TRUE ~ glue::glue(\"^(?!&lt;&lt;value&gt;&gt;)(?&lt;![0-9]{&lt;&lt;chars&gt;&gt;})$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\")\n  )"
  },
  {
    "objectID": "posts/rules/claims_rules.html#descriptors",
    "href": "posts/rules/claims_rules.html#descriptors",
    "title": "Building Claims Rules",
    "section": "",
    "text": "id\nname: Split letters/numbers, categorize Payer, State, etc.\ncategory:\ndescription:\nrationale: Steps are detailed in the rationale that are missing from the ruleset\nsources: Extract urls from category\n\n\ndescriptors &lt;- rules |&gt; \n  select(id, name, category, description, rationale) |&gt; \n  distinct() |&gt; \n  mutate(sources = str_extract_all(category,\"https?://[^\\\\s]+\"),\n         category = str_remove_all(category,\"https?://[^\\\\s]+\")) |&gt;\n  unnest(sources, keep_empty = TRUE) |&gt;\n  separate_longer_delim(sources, delim = \"https:\") |&gt;\n  mutate(sources = na_if(sources, \"\") |&gt; str_squish(),\n         sources = if_else(!is.na(sources), str_c(\"https:\", sources), sources),\n         category = na_if(category, \"\") |&gt; str_squish(),\n         description = str_squish(description),\n         description = str_remove_all(description, \"►\"),\n         description = gsub(\",(?!\\\\s)\", \", \", description, perl = TRUE) |&gt; str_squish(),\n         rationale = str_squish(rationale),\n         rationale = str_remove_all(rationale, \"►\"),\n         rationale = gsub(\",(?!\\\\s)\", \", \", rationale, perl = TRUE) |&gt; str_squish()\n         ) |&gt; \n  nest(sources = c(sources))\n\ndescriptors\n\n# A tibble: 1,192 × 6\n      id name       category                      description rationale sources \n   &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;                         &lt;chr&gt;       &lt;chr&gt;     &lt;list&gt;  \n 1     1 ExpiredCPT Expired CPT                   CPT Code i… 43760 ex… &lt;tibble&gt;\n 2     2 ALBCBS1    NDC Numbers                   Primary In… Alabama … &lt;tibble&gt;\n 3     3 ALBCBS2    NDC Numbers                   Primary In… Alabama … &lt;tibble&gt;\n 4     4 ALBCBS3    NDC Numbers                   Primary In… Add acci… &lt;tibble&gt;\n 5     5 ALBCBS4    Wellness visits - BMI & BP r… Primary In… When fil… &lt;tibble&gt;\n 6     6 ALMCD1     Independent RHC claims        Primary In… RHC clai… &lt;tibble&gt;\n 7     7 ALMCD2     BMI requirement               Primary In… Beginnin… &lt;tibble&gt;\n 8     8 ALMCD3     Pediatric BMI                 Primary In… Pediatri… &lt;tibble&gt;\n 9     9 ALMCD4     Adult BMI                     Primary In… Adult BM… &lt;tibble&gt;\n10    10 ALMCD5     NDC requirement               Primary In… The NDC … &lt;tibble&gt;\n# ℹ 1,182 more rows\n\n\n\n\n# FIX\n\"VFC-GA\"\n\n[1] \"VFC-GA\"\n\n\"BCBSMI\"\n\n[1] \"BCBSMI\"\n\npayers &lt;- c(\"BCBS\", \"MCD\", \"VFC-\")\n\nother &lt;- c(\n  \"INTEG\",\n  \"LABS\",\n  \"NEURO\",\n  \"ORTHO\",\n  \"MEDSV\",\n  \"VACCN\",\n  \"COVID19-\",\n  \"E&M\",\n  \"UNVSL\",\n  \"ICD10-\",\n  \"RHC\",\n  \"ANEST\",\n  \"SURG\",\n  \"FQHC\",\n  \"TELEH\",\n  \"ASC\",\n  \"DIGES\",\n  \"RADIO\",\n  \"PRVNT\",\n  \"OPTHL\",\n  \"FOOT\",\n  \"FERTL\",\n  \"DME\",\n  \"AUDIO\",\n  \"OBGYN\")\n\n\ndescriptors |&gt; \n  reframe(\n    id,\n    name,\n    state = if_else(\n      str_sub(name, 1, 2) %in% state.abb, \n      str_sub(name, 1, 2), NA_character_),\n    payer = strex::str_extract_non_numerics(str_sub(name, 3, -1)),\n    n = strex::str_extract_numbers(name)\n  ) |&gt; \n  unnest(c(n, payer), keep_empty = TRUE) |&gt; \n  mutate(\n    state = if_else(\n      str_sub(payer, -2) %in% state.abb, \n      str_sub(payer, -2), state)\n  ) |&gt; \n  # filter(!is.na(state)) |&gt; \n  slice(701:1380) |&gt; \n  print(n = 700)\n\n# A tibble: 672 × 5\n       id name       state payer     n\n    &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n  1   567 E&M30      &lt;NA&gt;  M        30\n  2   567 E&M30      &lt;NA&gt;  M        30\n  3   568 E&M31      &lt;NA&gt;  M        31\n  4   568 E&M31      &lt;NA&gt;  M        31\n  5   569 IDMCD1     ID    MCD       1\n  6   570 IDMCD2     ID    MCD       2\n  7   571 IDMCD3     ID    MCD       3\n  8   572 ORTHO26    OR    THO      26\n  9   573 ORTHO27    OR    THO      27\n 10   574 MEDSV2     ME    DSV       2\n 11   574 MEDSV2     ME    DSV       2\n 12   575 MEDSV3     ME    DSV       3\n 13   576 MEDSV4     ME    DSV       4\n 14   576 MEDSV4     ME    DSV       4\n 15   577 MEDSV5     ME    DSV       5\n 16   578 MEDSV6     ME    DSV       6\n 17   579 E&M43      &lt;NA&gt;  M        43\n 18   580 UNVSL3     &lt;NA&gt;  VSL       3\n 19   581 VACCN35    VA    CCN      35\n 20   582 MEDSV7     ME    DSV       7\n 21   583 FOOT4      &lt;NA&gt;  OT        4\n 22   584 LABS27     LA    BS       27\n 23   585 LAMCD1     LA    MCD       1\n 24   585 LAMCD1     LA    MCD       1\n 25   586 UNVSL81    &lt;NA&gt;  VSL      81\n 26   587 INTEG14    IN    TEG      14\n 27   588 UNVSL82    &lt;NA&gt;  VSL      82\n 28   589 LABS28     LA    BS       28\n 29   590 LABS29     LA    BS       29\n 30   591 MEDSV16    ME    DSV      16\n 31   592 MEDSV17    ME    DSV      17\n 32   593 VACCN36    VA    CCN      36\n 33   593 VACCN36    VA    CCN      36\n 34   594 MEDSV18    ME    DSV      18\n 35   595 MEDSV19    ME    DSV      19\n 36   595 MEDSV19    ME    DSV      19\n 37   596 ICD10-58   &lt;NA&gt;  D        10\n 38   596 ICD10-58   &lt;NA&gt;  -        58\n 39   597 ICD10-59   &lt;NA&gt;  D        10\n 40   597 ICD10-59   &lt;NA&gt;  -        59\n 41   598 ICD10-60   &lt;NA&gt;  D        10\n 42   598 ICD10-60   &lt;NA&gt;  -        60\n 43   599 ICD10-61   &lt;NA&gt;  D        10\n 44   599 ICD10-61   &lt;NA&gt;  -        61\n 45   600 VACCN38    VA    CCN      38\n 46   601 E&M44      &lt;NA&gt;  M        44\n 47   602 ICD10-62   &lt;NA&gt;  D        10\n 48   602 ICD10-62   &lt;NA&gt;  -        62\n 49   603 ICD10-63   &lt;NA&gt;  D        10\n 50   603 ICD10-63   &lt;NA&gt;  -        63\n 51   604 E&M45      &lt;NA&gt;  M        45\n 52   605 COVID19-26 ID    VID      19\n 53   605 COVID19-26 CO    -        26\n 54   606 COVID19-27 ID    VID      19\n 55   606 COVID19-27 CO    -        27\n 56   607 COVID19-28 ID    VID      19\n 57   607 COVID19-28 CO    -        28\n 58   608 COVID19-29 ID    VID      19\n 59   608 COVID19-29 CO    -        29\n 60   609 COVID19-30 ID    VID      19\n 61   609 COVID19-30 CO    -        30\n 62   610 COVID19-31 ID    VID      19\n 63   610 COVID19-31 CO    -        31\n 64   611 ICD10-64   &lt;NA&gt;  D        10\n 65   611 ICD10-64   &lt;NA&gt;  -        64\n 66   612 VACCN39    VA    CCN      39\n 67   613 VACCN40    VA    CCN      40\n 68   614 VACCN41    VA    CCN      41\n 69   615 VACCN42    VA    CCN      42\n 70   616 VACCN43    VA    CCN      43\n 71   617 RHC40      &lt;NA&gt;  C        40\n 72   618 FQHC24     &lt;NA&gt;  HC       24\n 73   619 UNVSL83    &lt;NA&gt;  VSL      83\n 74   620 VACCN44    VA    CCN      44\n 75   621 AUDIO3     &lt;NA&gt;  DIO       3\n 76   622 COVID19-32 ID    VID      19\n 77   622 COVID19-32 CO    -        32\n 78   623 ICD10-65   &lt;NA&gt;  D        10\n 79   623 ICD10-65   &lt;NA&gt;  -        65\n 80   624 ICD10-66   &lt;NA&gt;  D        10\n 81   624 ICD10-66   &lt;NA&gt;  -        66\n 82   625 RADIO6     &lt;NA&gt;  DIO       6\n 83   626 NEURO16    NE    URO      16\n 84   627 NEURO17    NE    URO      17\n 85   628 ICD10-67   &lt;NA&gt;  D        10\n 86   628 ICD10-67   &lt;NA&gt;  -        67\n 87   629 ICD10-68   &lt;NA&gt;  D        10\n 88   629 ICD10-68   &lt;NA&gt;  -        68\n 89   630 COVID19-33 ID    VID      19\n 90   630 COVID19-33 CO    -        33\n 91   631 LABS30     LA    BS       30\n 92   631 LABS30     LA    BS       30\n 93   632 ORTHO23    OR    THO      23\n 94   633 VACCN45    VA    CCN      45\n 95   634 ICD10-69   &lt;NA&gt;  D        10\n 96   634 ICD10-69   &lt;NA&gt;  -        69\n 97   635 GAMCD31    GA    MCD      31\n 98   636 ALMCD11    AL    MCD      11\n 99   637 ICD10-70   &lt;NA&gt;  D        10\n100   637 ICD10-70   &lt;NA&gt;  -        70\n101   638 ICD10-71   &lt;NA&gt;  D        10\n102   638 ICD10-71   &lt;NA&gt;  -        71\n103   639 IDMCD4     ID    MCD       4\n104   640 E&M46      &lt;NA&gt;  M        46\n105   641 ARMCD5     AR    MCD       5\n106   642 ARMCD6     AR    MCD       6\n107   643 ARMCD7     AR    MCD       7\n108   644 ARMCD8     AR    MCD       8\n109   645 ARMCD9     AR    MCD       9\n110   646 RADIO7     &lt;NA&gt;  DIO       7\n111   647 WIMCD1     WI    MCD       1\n112   648 WIMCD2     WI    MCD       2\n113   649 WIMCD3     WI    MCD       3\n114   650 WIMCD4     WI    MCD       4\n115   651 VFC-ID     ID    C-ID     NA\n116   652 VFC-GA     GA    C-GA     NA\n117   653 VFC-AL     AL    C-AL     NA\n118   654 VFC-AR     AR    C-AR     NA\n119   655 VFC-AZ     AZ    C-AZ     NA\n120   656 VFC-FL     FL    C-FL     NA\n121   657 VFC-IA     IA    C-IA     NA\n122   658 VFC-IL     IL    C-IL     NA\n123   659 VFC-LA     LA    C-LA     NA\n124   660 VFC-MD     MD    C-MD     NA\n125   661 VFC-MO     MO    C-MO     NA\n126   662 VFC-MS     MS    C-MS     NA\n127   663 VFC-NC     NC    C-NC     NA\n128   664 VFC-NJ     NJ    C-NJ     NA\n129   665 VFC-OK     OK    C-OK     NA\n130   666 VFC-OR     OR    C-OR     NA\n131   667 VFC-SC     SC    C-SC     NA\n132   668 VFC-TN     TN    C-TN     NA\n133   669 VFC-TX     TX    C-TX     NA\n134   670 VFC-WA     WA    C-WA     NA\n135   671 VFC-WI     WI    C-WI     NA\n136   672 IDMCD5     ID    MCD       5\n137   672 IDMCD5     ID    MCD       5\n138   673 PRVNT33    &lt;NA&gt;  VNT      33\n139   674 GAMCD32    GA    MCD      32\n140   675 UNVSL84    &lt;NA&gt;  VSL      84\n141   675 UNVSL84    &lt;NA&gt;  VSL      84\n142   676 ICD10-72   &lt;NA&gt;  D        10\n143   676 ICD10-72   &lt;NA&gt;  -        72\n144   677 ICD10-73   &lt;NA&gt;  D        10\n145   677 ICD10-73   &lt;NA&gt;  -        73\n146   678 ICD10-74   &lt;NA&gt;  D        10\n147   678 ICD10-74   &lt;NA&gt;  -        74\n148   679 ICD10-75   &lt;NA&gt;  D        10\n149   679 ICD10-75   &lt;NA&gt;  -        75\n150   680 ICD10-76   &lt;NA&gt;  D        10\n151   680 ICD10-76   &lt;NA&gt;  -        76\n152   681 ICD10-77   &lt;NA&gt;  D        10\n153   681 ICD10-77   &lt;NA&gt;  -        77\n154   682 ICD10-79   &lt;NA&gt;  D        10\n155   682 ICD10-79   &lt;NA&gt;  -        79\n156   683 ICD10-80   &lt;NA&gt;  D        10\n157   683 ICD10-80   &lt;NA&gt;  -        80\n158   684 ICD10-81   &lt;NA&gt;  D        10\n159   684 ICD10-81   &lt;NA&gt;  -        81\n160   685 ICD10-82   &lt;NA&gt;  D        10\n161   685 ICD10-82   &lt;NA&gt;  -        82\n162   686 ICD10-84   &lt;NA&gt;  D        10\n163   686 ICD10-84   &lt;NA&gt;  -        84\n164   687 ICD10-85   &lt;NA&gt;  D        10\n165   687 ICD10-85   &lt;NA&gt;  -        85\n166   688 COVID19-34 ID    VID      19\n167   688 COVID19-34 CO    -        34\n168   689 UNVSL85    &lt;NA&gt;  VSL      85\n169   690 VACCN46    VA    CCN      46\n170   691 VACCN47    VA    CCN      47\n171   692 VACCN48    VA    CCN      48\n172   693 VACCN49    VA    CCN      49\n173   694 VACCN50    VA    CCN      50\n174   695 ICD10-86   &lt;NA&gt;  D        10\n175   695 ICD10-86   &lt;NA&gt;  -        86\n176   696 ICD10-87   &lt;NA&gt;  D        10\n177   696 ICD10-87   &lt;NA&gt;  -        87\n178   697 ICD10-88   &lt;NA&gt;  D        10\n179   697 ICD10-88   &lt;NA&gt;  -        88\n180   698 COVID19-35 ID    VID      19\n181   698 COVID19-35 CO    -        35\n182   699 RHC41      &lt;NA&gt;  C        41\n183   700 COVID19-36 ID    VID      19\n184   700 COVID19-36 CO    -        36\n185   701 RHC42      &lt;NA&gt;  C        42\n186   702 RHC43      &lt;NA&gt;  C        43\n187   703 RHC44      &lt;NA&gt;  C        44\n188   704 UNVSL86    &lt;NA&gt;  VSL      86\n189   704 UNVSL86    &lt;NA&gt;  VSL      86\n190   705 ICD10-89   &lt;NA&gt;  D        10\n191   705 ICD10-89   &lt;NA&gt;  -        89\n192   706 ICD10-90   &lt;NA&gt;  D        10\n193   706 ICD10-90   &lt;NA&gt;  -        90\n194   707 ICD10-91   &lt;NA&gt;  D        10\n195   707 ICD10-91   &lt;NA&gt;  -        91\n196   708 ICD10-92   &lt;NA&gt;  D        10\n197   708 ICD10-92   &lt;NA&gt;  -        92\n198   709 ICD10-93   &lt;NA&gt;  D        10\n199   709 ICD10-93   &lt;NA&gt;  -        93\n200   710 OBGYN1     &lt;NA&gt;  GYN       1\n201   711 OBGYN2     &lt;NA&gt;  GYN       2\n202   711 OBGYN2     &lt;NA&gt;  GYN       2\n203   712 OBGYN3     &lt;NA&gt;  GYN       3\n204   713 OBGYN4     &lt;NA&gt;  GYN       4\n205   714 OBGYN5     &lt;NA&gt;  GYN       5\n206   714 OBGYN5     &lt;NA&gt;  GYN       5\n207   715 OBGYN6     &lt;NA&gt;  GYN       6\n208   716 OBGYN7     &lt;NA&gt;  GYN       7\n209   717 OBGYN8     &lt;NA&gt;  GYN       8\n210   718 OBGYN9     &lt;NA&gt;  GYN       9\n211   719 OBGYN10    &lt;NA&gt;  GYN      10\n212   720 OBGYN11    &lt;NA&gt;  GYN      11\n213   721 RADIO8     &lt;NA&gt;  DIO       8\n214   722 OBGYN12    &lt;NA&gt;  GYN      12\n215   723 OBGYN13    &lt;NA&gt;  GYN      13\n216   724 OBGYN14    &lt;NA&gt;  GYN      14\n217   725 OBGYN15    &lt;NA&gt;  GYN      15\n218   725 OBGYN15    &lt;NA&gt;  GYN      15\n219   726 GAMCD33    GA    MCD      33\n220   727 ICD10-83   &lt;NA&gt;  D        10\n221   727 ICD10-83   &lt;NA&gt;  -        83\n222   728 ICD10-94   &lt;NA&gt;  D        10\n223   728 ICD10-94   &lt;NA&gt;  -        94\n224   729 VACCN51    VA    CCN      51\n225   729 VACCN51    VA    CCN      51\n226   730 VACCN52    VA    CCN      52\n227   731 VACCN53    VA    CCN      53\n228   732 SCMCD2     SC    MCD       2\n229   733 UNVSL87    &lt;NA&gt;  VSL      87\n230   734 UNVSL88    &lt;NA&gt;  VSL      88\n231   735 MDMCD1     MD    MCD       1\n232   736 MDMCD2     MD    MCD       2\n233   737 ICD10-95   &lt;NA&gt;  D        10\n234   737 ICD10-95   &lt;NA&gt;  -        95\n235   738 VACCN54    VA    CCN      54\n236   739 VACCN55    VA    CCN      55\n237   740 VACCN56    VA    CCN      56\n238   741 INTEG17    IN    TEG      17\n239   742 INTEG18    IN    TEG      18\n240   743 MEDSV20    ME    DSV      20\n241   744 E&M47      &lt;NA&gt;  M        47\n242   745 COMCD1     CO    MCD       1\n243   746 COMCD2     CO    MCD       2\n244   747 COMCD3     CO    MCD       3\n245   747 COMCD3     CO    MCD       3\n246   748 COMCD4     CO    MCD       4\n247   749 COMCD5     CO    MCD       5\n248   750 COMCD6     CO    MCD       6\n249   751 COMCD7     CO    MCD       7\n250   752 COMCD8     CO    MCD       8\n251   753 COMCD9     CO    MCD       9\n252   754 COMCD10    CO    MCD      10\n253   755 COMCD11    CO    MCD      11\n254   756 COMCD12    CO    MCD      12\n255   757 COMCD13    CO    MCD      13\n256   758 COMCD14    CO    MCD      14\n257   759 COMCD15    CO    MCD      15\n258   760 GABCBS1    GA    BCBS      1\n259   761 GAMCD34    GA    MCD      34\n260   762 VFC-CO     CO    C-CO     NA\n261   763 ICD10-120  &lt;NA&gt;  D        10\n262   763 ICD10-120  &lt;NA&gt;  -       120\n263   764 VFC-MI     MI    C-MI     NA\n264   765 COVID19-41 ID    VID      19\n265   765 COVID19-41 CO    -        41\n266   766 MIMCD1     MI    MCD       1\n267   767 MIMCD2     MI    MCD       2\n268   768 MIMCD3     MI    MCD       3\n269   769 MIMCD4     MI    MCD       4\n270   770 MIMCD5     MI    MCD       5\n271   771 MIMCD6     MI    MCD       6\n272   772 MIMCD7     MI    MCD       7\n273   773 MIMCD8     MI    MCD       8\n274   774 ICD10-97   &lt;NA&gt;  D        10\n275   774 ICD10-97   &lt;NA&gt;  -        97\n276   775 MIMCD9     MI    MCD       9\n277   776 DIGES3     &lt;NA&gt;  GES       3\n278   777 ANEST3     &lt;NA&gt;  EST       3\n279   777 ANEST3     &lt;NA&gt;  EST       3\n280   778 ANEST4     &lt;NA&gt;  EST       4\n281   779 ANEST5     &lt;NA&gt;  EST       5\n282   780 ANEST6     &lt;NA&gt;  EST       6\n283   781 ANEST7     &lt;NA&gt;  EST       7\n284   782 ICD10-98   &lt;NA&gt;  D        10\n285   782 ICD10-98   &lt;NA&gt;  -        98\n286   783 ICD10-99   &lt;NA&gt;  D        10\n287   783 ICD10-99   &lt;NA&gt;  -        99\n288   784 ORTHO32    OR    THO      32\n289   785 ORTHO33    OR    THO      33\n290   786 ASC5       &lt;NA&gt;  C         5\n291   787 ICD10-100  &lt;NA&gt;  D        10\n292   787 ICD10-100  &lt;NA&gt;  -       100\n293   788 E&M48      &lt;NA&gt;  M        48\n294   789 MEDSV21    ME    DSV      21\n295   790 CAMCD17    CA    MCD      17\n296   791 CAMCD18    CA    MCD      18\n297   792 CAMCD19    CA    MCD      19\n298   793 CAMCD20    CA    MCD      20\n299   794 ASC6       &lt;NA&gt;  C         6\n300   795 ASC7       &lt;NA&gt;  C         7\n301   796 UNVSL4     &lt;NA&gt;  VSL       4\n302   797 CAMCD21    CA    MCD      21\n303   798 BCBSMI1    MI    BSMI      1\n304   799 LABS31     LA    BS       31\n305   799 LABS31     LA    BS       31\n306   800 RADIO9     &lt;NA&gt;  DIO       9\n307   800 RADIO9     &lt;NA&gt;  DIO       9\n308   801 UNVSL5     &lt;NA&gt;  VSL       5\n309   802 RADIO10    &lt;NA&gt;  DIO      10\n310   803 ICD10-101  &lt;NA&gt;  D        10\n311   803 ICD10-101  &lt;NA&gt;  -       101\n312   804 MEDSV22    ME    DSV      22\n313   805 LABS32     LA    BS       32\n314   806 UNVSL6     &lt;NA&gt;  VSL       6\n315   807 UNVSL7     &lt;NA&gt;  VSL       7\n316   808 LABS33     LA    BS       33\n317   809 UNVSL8     &lt;NA&gt;  VSL       8\n318   810 UNVSL9     &lt;NA&gt;  VSL       9\n319   811 PRVNT34    &lt;NA&gt;  VNT      34\n320   812 COVID19-42 ID    VID      19\n321   812 COVID19-42 CO    -        42\n322   813 COVID19-43 ID    VID      19\n323   813 COVID19-43 CO    -        43\n324   814 COVID19-44 ID    VID      19\n325   814 COVID19-44 CO    -        44\n326   815 COVID19-45 ID    VID      19\n327   815 COVID19-45 CO    -        45\n328   816 ICD10-102  &lt;NA&gt;  D        10\n329   816 ICD10-102  &lt;NA&gt;  -       102\n330   817 ICD10-103  &lt;NA&gt;  D        10\n331   817 ICD10-103  &lt;NA&gt;  -       103\n332   818 COVID19-46 ID    VID      19\n333   818 COVID19-46 CO    -        46\n334   819 COVID19-47 ID    VID      19\n335   819 COVID19-47 CO    -        47\n336   819 COVID19-47 ID    VID      19\n337   819 COVID19-47 CO    -        47\n338   820 TELEH41    &lt;NA&gt;  LEH      41\n339   821 E&M51      &lt;NA&gt;  M        51\n340   822 E&M52      &lt;NA&gt;  M        52\n341   823 ICD10-104  &lt;NA&gt;  D        10\n342   823 ICD10-104  &lt;NA&gt;  -       104\n343   824 DIGES4     &lt;NA&gt;  GES       4\n344   825 DIGES5     &lt;NA&gt;  GES       5\n345   826 DIGES6     &lt;NA&gt;  GES       6\n346   827 ICD10-105  &lt;NA&gt;  D        10\n347   827 ICD10-105  &lt;NA&gt;  -       105\n348   828 ICD10-106  &lt;NA&gt;  D        10\n349   828 ICD10-106  &lt;NA&gt;  -       106\n350   829 ICD10-107  &lt;NA&gt;  D        10\n351   829 ICD10-107  &lt;NA&gt;  -       107\n352   830 ICD10-108  &lt;NA&gt;  D        10\n353   830 ICD10-108  &lt;NA&gt;  -       108\n354   831 ICD10-109  &lt;NA&gt;  D        10\n355   831 ICD10-109  &lt;NA&gt;  -       109\n356   832 ICD10-96   &lt;NA&gt;  D        10\n357   832 ICD10-96   &lt;NA&gt;  -        96\n358   833 ICD10-110  &lt;NA&gt;  D        10\n359   833 ICD10-110  &lt;NA&gt;  -       110\n360   834 TNMCD2     TN    MCD       2\n361   835 ICD10-111  &lt;NA&gt;  D        10\n362   835 ICD10-111  &lt;NA&gt;  -       111\n363   836 ICD10-112  &lt;NA&gt;  D        10\n364   836 ICD10-112  &lt;NA&gt;  -       112\n365   837 MEDSV23    ME    DSV      23\n366   838 ANEST8     &lt;NA&gt;  EST       8\n367   839 ANEST9     &lt;NA&gt;  EST       9\n368   840 UNVSL89    &lt;NA&gt;  VSL      89\n369   840 UNVSL89    &lt;NA&gt;  VSL      89\n370   840 UNVSL89    &lt;NA&gt;  VSL      89\n371   841 MEDSV24    ME    DSV      24\n372   842 ICD10-113  &lt;NA&gt;  D        10\n373   842 ICD10-113  &lt;NA&gt;  -       113\n374   843 ICD10-114  &lt;NA&gt;  D        10\n375   843 ICD10-114  &lt;NA&gt;  -       114\n376   844 GAMCD35    GA    MCD      35\n377   845 UNVSL90    &lt;NA&gt;  VSL      90\n378   846 TXMCD10    TX    MCD      10\n379   847 TXMCD12    TX    MCD      12\n380   848 UNVSL91    &lt;NA&gt;  VSL      91\n381   849 AUDIO4     &lt;NA&gt;  DIO       4\n382   850 VACCN57    VA    CCN      57\n383   851 VACCN58    VA    CCN      58\n384   852 VACCN59    VA    CCN      59\n385   853 VACCN60    VA    CCN      60\n386   854 VACCN62    VA    CCN      62\n387   855 COVID19-48 ID    VID      19\n388   855 COVID19-48 CO    -        48\n389   856 COVID19-49 ID    VID      19\n390   856 COVID19-49 CO    -        49\n391   857 COVID19-50 ID    VID      19\n392   857 COVID19-50 CO    -        50\n393   858 OBGYN16    &lt;NA&gt;  GYN      16\n394   859 E&M49      &lt;NA&gt;  M        49\n395   859 E&M49      &lt;NA&gt;  M        49\n396   860 ICD10-115  &lt;NA&gt;  D        10\n397   860 ICD10-115  &lt;NA&gt;  -       115\n398   861 UNVSL104   &lt;NA&gt;  VSL     104\n399   862 RADIO11    &lt;NA&gt;  DIO      11\n400   863 DIGES7     &lt;NA&gt;  GES       7\n401   864 DIGES8     &lt;NA&gt;  GES       8\n402   865 DIGES9     &lt;NA&gt;  GES       9\n403   866 BCBSTN2    TN    BSTN      2\n404   866 BCBSTN2    TN    BSTN      2\n405   867 RADIO12    &lt;NA&gt;  DIO      12\n406   868 ICD10-117  &lt;NA&gt;  D        10\n407   868 ICD10-117  &lt;NA&gt;  -       117\n408   869 UNVSL60    &lt;NA&gt;  VSL      60\n409   870 UNVSL92    &lt;NA&gt;  VSL      92\n410   870 UNVSL92    &lt;NA&gt;  VSL      92\n411   871 COVID19-51 ID    VID      19\n412   871 COVID19-51 CO    -        51\n413   872 ICD10-118  &lt;NA&gt;  D        10\n414   872 ICD10-118  &lt;NA&gt;  -       118\n415   873 ICD10-119  &lt;NA&gt;  D        10\n416   873 ICD10-119  &lt;NA&gt;  -       119\n417   874 UNVSL93    &lt;NA&gt;  VSL      93\n418   874 UNVSL93    &lt;NA&gt;  VSL      93\n419   875 UNVSL94    &lt;NA&gt;  VSL      94\n420   876 UNVSL95    &lt;NA&gt;  VSL      95\n421   877 UNVSL96    &lt;NA&gt;  VSL      96\n422   878 UNVSL17    &lt;NA&gt;  VSL      17\n423   879 WAMCD21    WA    MCD      21\n424   880 PRVNT36    &lt;NA&gt;  VNT      36\n425   880 PRVNT36    &lt;NA&gt;  VNT      36\n426   881 WAMCD22    WA    MCD      22\n427   882 RHC47      &lt;NA&gt;  C        47\n428   883 UNVSL97    &lt;NA&gt;  VSL      97\n429   884 RHC48      &lt;NA&gt;  C        48\n430   885 UNVSL18    &lt;NA&gt;  VSL      18\n431   886 GAMCD36    GA    MCD      36\n432   887 NJBCBS1    NJ    BCBS      1\n433   888 SCBCBS2    SC    BCBS      2\n434   889 COVID19-52 ID    VID      19\n435   889 COVID19-52 CO    -        52\n436   890 COVID19-53 ID    VID      19\n437   890 COVID19-53 CO    -        53\n438   891 RHC31      &lt;NA&gt;  C        31\n439   892 COVID19-54 ID    VID      19\n440   892 COVID19-54 CO    -        54\n441   893 VACCN61    VA    CCN      61\n442   894 DME1       &lt;NA&gt;  E         1\n443   895 DME2       &lt;NA&gt;  E         2\n444   896 DME3       &lt;NA&gt;  E         3\n445   897 DME4       &lt;NA&gt;  E         4\n446   898 DME5       &lt;NA&gt;  E         5\n447   899 DME6       &lt;NA&gt;  E         6\n448   900 DME7       &lt;NA&gt;  E         7\n449   901 DME8       &lt;NA&gt;  E         8\n450   902 DME9       &lt;NA&gt;  E         9\n451   903 DME10      &lt;NA&gt;  E        10\n452   904 DME11      &lt;NA&gt;  E        11\n453   905 DME12      &lt;NA&gt;  E        12\n454   906 DME13      &lt;NA&gt;  E        13\n455   907 DME14      &lt;NA&gt;  E        14\n456   908 DME15      &lt;NA&gt;  E        15\n457   909 DME16      &lt;NA&gt;  E        16\n458   910 DME17      &lt;NA&gt;  E        17\n459   911 DME18      &lt;NA&gt;  E        18\n460   912 DME19      &lt;NA&gt;  E        19\n461   913 DME20      &lt;NA&gt;  E        20\n462   914 DME21      &lt;NA&gt;  E        21\n463   915 DME22      &lt;NA&gt;  E        22\n464   916 DME23      &lt;NA&gt;  E        23\n465   917 DME24      &lt;NA&gt;  E        24\n466   918 DME25      &lt;NA&gt;  E        25\n467   919 DME26      &lt;NA&gt;  E        26\n468   920 DME27      &lt;NA&gt;  E        27\n469   921 DME28      &lt;NA&gt;  E        28\n470   922 DME29      &lt;NA&gt;  E        29\n471   923 DME30      &lt;NA&gt;  E        30\n472   924 DME31      &lt;NA&gt;  E        31\n473   925 DME32      &lt;NA&gt;  E        32\n474   926 DME33      &lt;NA&gt;  E        33\n475   927 UNVSL98    &lt;NA&gt;  VSL      98\n476   927 UNVSL98    &lt;NA&gt;  VSL      98\n477   928 UNVSL99    &lt;NA&gt;  VSL      99\n478   929 DME34      &lt;NA&gt;  E        34\n479   930 COVID19-55 ID    VID      19\n480   930 COVID19-55 CO    -        55\n481   930 COVID19-55 ID    VID      19\n482   930 COVID19-55 CO    -        55\n483   931 RHC50      &lt;NA&gt;  C        50\n484   932 RHC51      &lt;NA&gt;  C        51\n485   933 VACCN63    VA    CCN      63\n486   934 VACCN64    VA    CCN      64\n487   935 E&M53      &lt;NA&gt;  M        53\n488   936 SCMCD3     SC    MCD       3\n489   937 AUDIO5     &lt;NA&gt;  DIO       5\n490   938 UNVSL100   &lt;NA&gt;  VSL     100\n491   939 DME35      &lt;NA&gt;  E        35\n492   940 UNVSL101   &lt;NA&gt;  VSL     101\n493   941 UNVSL102   &lt;NA&gt;  VSL     102\n494   942 RADIO13    &lt;NA&gt;  DIO      13\n495   943 UNVSL103   &lt;NA&gt;  VSL     103\n496   944 GABCBS2    GA    BCBS      2\n497   945 INTEG19    IN    TEG      19\n498   946 GAMCD37    GA    MCD      37\n499   947 VACCN65    VA    CCN      65\n500   948 PAMCD1     PA    MCD       1\n501   949 PAMCD2     PA    MCD       2\n502   949 PAMCD2     PA    MCD       2\n503   950 PAMCD3     PA    MCD       3\n504   951 MEDSV25    ME    DSV      25\n505   952 MEDSV26    ME    DSV      26\n506   953 MEDSV27    ME    DSV      27\n507   953 MEDSV27    ME    DSV      27\n508   954 MEDSV28    ME    DSV      28\n509   954 MEDSV28    ME    DSV      28\n510   955 MEDSV29    ME    DSV      29\n511   955 MEDSV29    ME    DSV      29\n512   956 GAMCD38    GA    MCD      38\n513   957 ICD10-121  &lt;NA&gt;  D        10\n514   957 ICD10-121  &lt;NA&gt;  -       121\n515   958 TXMCD13    TX    MCD      13\n516   959 RHC52      &lt;NA&gt;  C        52\n517   960 ORTHO34    OR    THO      34\n518   961 MEDSV30    ME    DSV      30\n519   962 ORTHO35    OR    THO      35\n520   963 ORTHO36    OR    THO      36\n521   964 GAMCD39    GA    MCD      39\n522   965 LABS34     LA    BS       34\n523   966 GAMCD40    GA    MCD      40\n524   967 GAMCD41    GA    MCD      41\n525   968 GAMCD42    GA    MCD      42\n526   969 DIGES10    &lt;NA&gt;  GES      10\n527   970 TELEH42    &lt;NA&gt;  LEH      42\n528   971 ICD10-122  &lt;NA&gt;  D        10\n529   971 ICD10-122  &lt;NA&gt;  -       122\n530   972 VACCN66    VA    CCN      66\n531   973 VACCN67    VA    CCN      67\n532   974 VACCN68    VA    CCN      68\n533   975 VACCN69    VA    CCN      69\n534   976 VACCN70    VA    CCN      70\n535   977 VACCN71    VA    CCN      71\n536   978 UNVSL105   &lt;NA&gt;  VSL     105\n537   979 UNVSL106   &lt;NA&gt;  VSL     106\n538   980 UNVSL107   &lt;NA&gt;  VSL     107\n539   981 BCBSTX2    TX    BSTX      2\n540   981 BCBSTX2    TX    BSTX      2\n541   982 ORTHO37    OR    THO      37\n542   982 ORTHO37    OR    THO      37\n543   983 PRVNT37    &lt;NA&gt;  VNT      37\n544   984 E&M54      &lt;NA&gt;  M        54\n545   985 E&M55      &lt;NA&gt;  M        55\n546   986 E&M56      &lt;NA&gt;  M        56\n547   987 E&M57      &lt;NA&gt;  M        57\n548   988 E&M58      &lt;NA&gt;  M        58\n549   989 E&M59      &lt;NA&gt;  M        59\n550   990 E&M60      &lt;NA&gt;  M        60\n551   991 E&M61      &lt;NA&gt;  M        61\n552   992 E&M62      &lt;NA&gt;  M        62\n553   993 E&M63      &lt;NA&gt;  M        63\n554   994 E&M64      &lt;NA&gt;  M        64\n555   995 LAMCD1     LA    MCD       1\n556   996 LAMCD2     LA    MCD       2\n557   997 LAMCD3     LA    MCD       3\n558   998 LAMCD4     LA    MCD       4\n559   999 E&M65      &lt;NA&gt;  M        65\n560  1000 DIGES11    &lt;NA&gt;  GES      11\n561  1001 DIGES12    &lt;NA&gt;  GES      12\n562  1002 BCBSMS1    MS    BSMS      1\n563  1003 DIGES13    &lt;NA&gt;  GES      13\n564  1004 AUDIO6     &lt;NA&gt;  DIO       6\n565  1004 AUDIO6     &lt;NA&gt;  DIO       6\n566  1005 BCBSTN3    TN    BSTN      3\n567  1005 BCBSTN3    TN    BSTN      3\n568  1006 CAMCD22    CA    MCD      22\n569  1007 UNVSL108   &lt;NA&gt;  VSL     108\n570  1008 UNVSL109   &lt;NA&gt;  VSL     109\n571  1009 UNVSL110   &lt;NA&gt;  VSL     110\n572  1010 ICD10-123  &lt;NA&gt;  D        10\n573  1010 ICD10-123  &lt;NA&gt;  -       123\n574  1011 ICD10-124  &lt;NA&gt;  D        10\n575  1011 ICD10-124  &lt;NA&gt;  -       124\n576  1012 TELEH43    &lt;NA&gt;  LEH      43\n577  1013 UNVSL111   &lt;NA&gt;  VSL     111\n578  1014 UNVSL112   &lt;NA&gt;  VSL     112\n579  1015 VACCN72    VA    CCN      72\n580  1016 MOMCD1     MO    MCD       1\n581  1017 MOMCD2     MO    MCD       2\n582  1018 RHC53      &lt;NA&gt;  C        53\n583  1019 FQHC26     &lt;NA&gt;  HC       26\n584  1020 MOMCD3     MO    MCD       3\n585  1021 MOMCD4     MO    MCD       4\n586  1022 MOMCD5     MO    MCD       5\n587  1023 MOMCD6     MO    MCD       6\n588  1024 MOMCD7     MO    MCD       7\n589  1025 MOMCD8     MO    MCD       8\n590  1026 MOMCD9     MO    MCD       9\n591  1027 MOMCD10    MO    MCD      10\n592  1028 MOMCD11    MO    MCD      11\n593  1029 KSMCD1     KS    MCD       1\n594  1030 KSMCD2     KS    MCD       2\n595  1031 KSMCD3     KS    MCD       3\n596  1032 ICD10-125  &lt;NA&gt;  D        10\n597  1032 ICD10-125  &lt;NA&gt;  -       125\n598  1033 ICD10-126  &lt;NA&gt;  D        10\n599  1033 ICD10-126  &lt;NA&gt;  -       126\n600  1034 ICD10-127  &lt;NA&gt;  D        10\n601  1034 ICD10-127  &lt;NA&gt;  -       127\n602  1035 NEURO18    NE    URO      18\n603  1036 CAMCD23    CA    MCD      23\n604  1036 CAMCD23    CA    MCD      23\n605  1037 GAMCD43    GA    MCD      43\n606  1038 TELEH43    &lt;NA&gt;  LEH      43\n607  1039 TXMCD14    TX    MCD      14\n608  1040 VACCN73    VA    CCN      73\n609  1041 UNVSL113   &lt;NA&gt;  VSL     113\n610  1041 UNVSL113   &lt;NA&gt;  VSL     113\n611  1042 RHC54      &lt;NA&gt;  C        54\n612  1043 RHC55      &lt;NA&gt;  C        55\n613  1044 RHC56      &lt;NA&gt;  C        56\n614  1045 ARMCD10    AR    MCD      10\n615  1046 ARMCD11    AR    MCD      11\n616  1047 GAMCD28    GA    MCD      28\n617  1048 GAMCD44    GA    MCD      44\n618  1049 GAMCD45    GA    MCD      45\n619  1050 GAMCD48    GA    MCD      48\n620  1051 GAMCD47    GA    MCD      47\n621  1052 ALMCD12    AL    MCD      12\n622  1053 ALMCD13    AL    MCD      13\n623  1054 ALMCD14    AL    MCD      14\n624  1055 WAMCD23    WA    MCD      23\n625  1056 WAMCD24    WA    MCD      24\n626  1057 ICD10-128  &lt;NA&gt;  D        10\n627  1057 ICD10-128  &lt;NA&gt;  -       128\n628  1058 PRVNT38    &lt;NA&gt;  VNT      38\n629  1059 UNVSL114   &lt;NA&gt;  VSL     114\n630  1060 ARMCD12    AR    MCD      12\n631  1061 ANEST10    &lt;NA&gt;  EST      10\n632  1062 ICD10-129  &lt;NA&gt;  D        10\n633  1062 ICD10-129  &lt;NA&gt;  -       129\n634  1062 ICD10-129  &lt;NA&gt;  D        10\n635  1062 ICD10-129  &lt;NA&gt;  -       129\n636  1063 BCBSNC1    NC    BSNC      1\n637  1064 DIGES14    &lt;NA&gt;  GES      14\n638  1065 NEURO19    NE    URO      19\n639  1066 NEURO20    NE    URO      20\n640  1067 UNVSL115   &lt;NA&gt;  VSL     115\n641  1068 BCBSVA1    VA    BSVA      1\n642  1069 UNVSL116   &lt;NA&gt;  VSL     116\n643  1070 UNVSL117   &lt;NA&gt;  VSL     117\n644  1071 UNVSL118   &lt;NA&gt;  VSL     118\n645  1072 ICD10-130  &lt;NA&gt;  D        10\n646  1072 ICD10-130  &lt;NA&gt;  -       130\n647  1073 ICD10-131  &lt;NA&gt;  D        10\n648  1073 ICD10-131  &lt;NA&gt;  -       131\n649  1074 LABS35     LA    BS       35\n650  1075 UNVSL119   &lt;NA&gt;  VSL     119\n651  1076 DME36      &lt;NA&gt;  E        36\n652  1077 UNVSL120   &lt;NA&gt;  VSL     120\n653  1078 DME37      &lt;NA&gt;  E        37\n654  1079 COVID19-56 ID    VID      19\n655  1079 COVID19-56 CO    -        56\n656  1080 COVID19-57 ID    VID      19\n657  1080 COVID19-57 CO    -        57\n658  1081 UNVSL121   &lt;NA&gt;  VSL     121\n659  1082 UNVSL122   &lt;NA&gt;  VSL     122\n660  1083 UNVSL123   &lt;NA&gt;  VSL     123\n661  1084 COVID19-58 ID    VID      19\n662  1084 COVID19-58 CO    -        58\n663  1085 RHC57      &lt;NA&gt;  C        57\n664  1086 ICD10-132  &lt;NA&gt;  D        10\n665  1086 ICD10-132  &lt;NA&gt;  -       132\n666  1087 SCMCD4     SC    MCD       4\n667  1088 SCMCD5     SC    MCD       5\n668  1089 ORMCD5     OR    MCD       5\n669  1090 UNVSL124   &lt;NA&gt;  VSL     124\n670  1091 COMCD16    CO    MCD      16\n671  1092 ICD10-132  &lt;NA&gt;  D        10\n672  1092 ICD10-132  &lt;NA&gt;  -       132\n\n\n\n\ndescriptors |&gt;\n  slice_sample(n = 15) |&gt; \n  mutate(category = str_wrap(category, width = 50),\n         description = str_wrap(description, width = 60),\n         rationale = str_wrap(rationale, width = 50)) |&gt;\n  select(-sources) |&gt; \n  gt(rowname_col = \"name\",\n     groupname_col = \"category\",\n     row_group_as_column = TRUE) |&gt;\n  cols_align(align = \"left\", columns = -c(id)) |&gt;\n  cols_align(align = \"center\", columns = c(id)) |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = \"left\",\n        weight = \"bold\",\n        size = px(14),\n        whitespace = \"break-spaces\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(description))) |&gt;\n  tab_style(\n      style = cell_text(\n        color = \"#0B0B35\",\n        align = \"center\",\n        weight = \"bold\",\n        size = px(16),\n        font = google_font(name = \"Roboto Condensed\")),\n      locations = cells_body(columns = c(id))) |&gt;\n  gtExtras::gt_add_divider(\n    columns = \"description\", \n    style = \"solid\",\n    weight = \"3px\",\n    color = \"royalblue\") |&gt;\n  tab_style(\n    style = cell_text(\n      v_align = \"middle\", \n      align = \"right\",\n      weight = \"800\"),\n    locations = cells_row_groups()) |&gt; \n  tab_style(\n    style = cell_text(\n      size = px(16),\n      font = google_font(name = \"JetBrains Mono\"),\n      v_align = \"middle\", \n      align = \"center\"\n      ),\n    locations = cells_stub()) |&gt; \n  opt_stylize(add_row_striping = TRUE) |&gt;\n  tab_options(table.width = pct(85),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n      id\n      description\n      rationale\n    \n\n\nZurich Workers Comp\nUNVSL70\n499\nPrimary Insurance is one of [ZURICH (80), ZURICH AMERICAN\nINSURANCE (499), ZURICH (1332)]\nFollow Workers Comp billing guidelines for\nelectronic claims attachments. If unsuccessful,\nclaims can be faxed to 874-240-8172.\n\n\nHearing Screening\nPRVNT31\n262\nPatient Age is younger than [19, years] AND CPT Code is one\nof [92551, 92552, 92567] AND CPT Code is not [9938*, 9939*]\nAND DX Code is not [Z01.10, Z01.118, Z01.110]\nZ01.10 (encounter for examination of ears and\nhearing without abnormal findings), Z01.118\n(encounter for examination of ears and hearing\nwith other abnormal findings) and Z01.110\n(Encounter for hearing examination following\nfailed hearing screening) are reported when a\npatient presents for an encounter outside of a\nroutine well-child exam.\n\n\nMedicaid Authorization\nGAMCD10\n71\nPrimary Insurance Class is one of [MEDICAID (3); MEDICAID\nCMO (7); MEDICAID CMO (11)] AND CPT Code is one of [9938*;\n9939*] AND CPT Code is one of [90476; 90477; 905*; 906*;\n9071*; 9072*; 9073*; 9074*; 9075*; 913*] AND CPT Mod1 is not\n[25] AND CPT Mod2 is not [25]\nModifier 25 should be added when a vaccine is\nadministered during the preventive visit.\n\n\nNA\nGAMCD36\n886\nPrimary Insurance Class is one of [MEDICAID, MEDICAID CMO\n(5455)] AND Patient Age is younger than [21, years] AND CPT\nCode is one of [9938*; 9939*]\nEPSDT info should be completed for all\npreventative visits.\n\n\nGAMCD34\n761\nPrimary Insurance is one of [AMERIGROUP, CareSource, Peach\nState] AND CPT Code is one of 80047, 80048, 80051, 80053,\n80061, 80069, 80178, 80305, 81003, 81007, 82010, 82040,\n82042, 82043, 82044, 82120, 82150, 82247, 82271, 82274,\n82310, 82330, 82374, 82435, 82465, 82523, 82550, 82565,\n82570, 82679, 82947, 82950, 82951, 82952, 82977, 82985,\n83001, 83002, 83036, 83037, 83516, 83518, 83520, 83605,\n83655, 83718, 83721, 83861, 83880, 83986, 84075, 84132,\n84155, 84157, 84295, 84443, 84450, 84460, 84478, 84520,\n84550, 84703, 85014, 85018, 85025, 85576, 85610, 86294,\n86308, 86318, 86328, 86386, 86618, 86701, 86780, 86803,\n87077, 87210, 87338, 87389, 87400, 87420, 87426, 87428,\n87430, 87449, 87502, 87631, 87633, 87634, 87635, 87636,\n87637, 87650, 87651, 87801, 87804, 87806, 87807, 87808,\n87809, 87811, 87880, 87899, 87905, 89300, 89321, G0328,\nG0433, G0472, G0475, U0002, 0240U, 0241U\nProviders who have obtained a CLIA Waiver\nor Provider Performed Microscopy Procedure\naccreditation must include the QW modifier when\nany CLIA waived laboratory service is reported on\na CMS-1500 claim form in order for the procedure\nto be evaluated to determine eligibility for\nbenefit coverage.\n\n\nVACCN65\n947\nCPT Code is [91309] AND Encounter Date of Service after\n09/11/2023\nVaccine is no longer authorized for use in the\nUnited States. See 91322 for 50 mcg Moderna\nvaccine.\n\n\nDME5\n898\nCPT Code is one of [A5500; A5501; A5503; A5504; A5505;\nA5506; A5507; A5508; A5510; A5512; A5513; A5514] AND ( CPT\nMod1 is not [KX; EY; GA; GY; GZ] AND CPT Mod2 is not [KX;\nEY; GA; GY; GZ] AND CPT Mod3 is not [KX; EY; GA; GY; GZ] AND\nCPT Mod4 is not [KX; EY; GA; GY; GZ] )\nTherapeutic Shoes for Persons with Diabetes may\nrequire the usage of the KX modifier to identify\nthat the requirements identified in the medical\npolicy have been met. If requirements were not\nmet, see also modifier EY, GA, GY, or GZ. Review\npayer guidelines.\n\n\nCOVID19-55\n930\nPrimary Insurance is [Humana (32)] AND ( Location is\n[TELEHEALTH OR Place of Service is one of [TELEHEALTH\nPROVIDED OTHER THAN IN PATIENT HOME (02) (45); TELEHEALTH\nPROVIDED IN PATIENT HOME (10) (50)] ) AND CPT Mod1 is not\n[93; 95; FQ] AND CPT Mod2 is not 93; 95; FQ]\nHumana Medicare requires a provider to submit a\ncharge for a telehealth service with the place of\nservice (POS) code that would have been reported\nhad the service been furnished in person. In\naddition, Humana requires a provider to report\na telehealth or other virtual service with\nmodifier 93, 95 or modifier FQ as applicable,\nto identify that the service was furnished via\ntelecommunications-based technology.\n\n\nUNVSL4\n796\nPrimary Insurance Class is one of [MEDICARE (1), MEDICARE\nREPLACEMENT (4)] AND CPT Code is one of [A4450, A4452,\nA4221, B4224, B4034, B4035, B4036, A4625, A4629, A4625,\nA4629, B4224, B4034, B4035, B4036, A6448, A6449, A6450,\nA6451, A6452, A6453, A6454, A6455, A6442, A6443, A6444,\nA6445, A6446, A6447, A6441, A6531, A6532, A6545, A6501,\nA6502, A6503, A6504, A6505, A6506, A6507, A6508, A6509,\nA6510, A6511, A6512, A6513, A4649, A6010, A6011, A6021,\nA6022, A6023, A6024, A6154, A6196, A6197, A6198, A6199,\nA6203, A6204, A6205, A6206, A6207, A6208, A6209, A6210,\nA6211, A6212, A621, A6214, A6215, A6217, A6218, A6219,\nA6220, A6221, A6222, A6223, A6224, A6228, A6229, A6230,\nA6231, A6232, A6233, A6234, A6235, A6236, A6237, A6238,\nA6239, A6240, A6241, A6242, A6243, A6244, A6245, A6246,\nA6247, A6248, A6251, A6252, A6253, A6254, A6255, A6256,\nA6257, A6258, A6259, A6261, A6262, A6266, A6402, A6403,\nA6404, A6441, A6442, A6443, A6444, A6445, A6446, A6447,\nA6448, A6449, A6450, A6451, A6452, A6453, A6454, A6455,\nA6456, A6457] AND Place of Service is not [HOME (12) (10)]\nIf a treating practitioner applies surgical\ndressings as part of a professional service that\nis billed to Medicare, the surgical dressings are\nconsidered incident to the professional services\nof the health care practitioner and are not\nseparately payable. Claims for these dressings\nmust not be submitted. Claims for the professional\nservice, which includes the dressings, must be\nsubmitted to the local carrier or intermediary.\nIf dressing changes are sent home with the\nbeneficiary, claims for these dressings may\nbe submitted. In this situation, use the place\nof service corresponding to the beneficiarys\nresidence, Place of Service Office (POS=11) must\nnot be used.\n\n\nGA, CO, KY, ME, MO, NV, NH, OH, VA, WI\nTELEH15\n312\nPrimary Insurance is [BCBS OF OH (121)] AND Place of Service\nis one of [TELEHEALTH PROVIDED OTHER THAN IN PT HOME (02) ,\nTELEHEALTH PROVIDED IN PATIENT HOME(10) AND CPT Code is one\nof [G0406, G0407, G0408, G0425, G0426, G0427, G0459, G0508,\nG0509, Q3014] AND CPT Mod1 is [95, GT, GQ]\nCodes are specific to telehealth services and do\nnot require the use of telehealth modifiers.\n\n\n90 day global - Surgery/Respiratory System\nE&M6\n543\nCPT Code is one of [30115, 30117, 30118, 30120, 30124,\n30125, 30130, 30150, 30160, 30320, 30400, 30410, 30420,\n30430, 30435, 30450, 30460, 30462, 30465, 30520, 30540,\n30545, 30580, 30600, 30620, 30630, 30915, 30920, 31020,\n31030, 31032, 31040, 31050, 31051, 31070, 31075, 31080,\n31081, 31084, 31085, 31086, 31087, 31090, 31200, 31201,\n31205, 31225, 31230, 31300, 31360, 31365, 31367, 31368,\n31370, 31375, 31380, 31382, 31390, 31395, 31400, 31420,\n31551, 31552, 31553, 31554, 31580, 31584, 31587, 31590,\n31591, 31592, 31610, 31611, 31613, 31614, 31750, 31755,\n31760, 31766, 31770, 31775, 31780, 31781, 31785, 31786,\n31800, 31805, 31820, 31825, 31830, 32035, 32036, 32096,\n32097, 32098, 32100, 32110, 32120, 32124, 32140, 32141,\n32150, 32151, 32160, 32200, 32215, 32220, 32225, 32310,\n32320, 32440, 32442, 32445, 32480, 32482, 32484, 32486,\n32488, 32491, 32503, 32504, 32505, 32540, 32650, 32651,\n32652, 32653, 32654, 32655, 32656, 32658, 32659, 32661,\n32662, 32663, 32664, 32665, 32666, 32669, 32670, 32671,\n32672, 32673, 32800, 32810, 32815, 32820, 32851, 32852,\n32853, 32854, 32900, 32905, 32906, 32940] AND CPT Code is\none of [9920*, 9921*, 9922*, 9923*, 9924*, 9925*, 9928*,\n9929*, 9930*, 9931*, 9932*, 9933*, 9934*, 9935*, 9938*,\n9939*, 9946*, 9947*, 9948*, 9949*] AND CPT Mod1 is not [57]\nAND CPT UB04 is [false]\n(add for RHC and FQHC)\n\n\nMedicare 27217\nORTHO21\n228\nPrimary Insurance Class is [MEDICARE (7)] AND CPT Code is\n[27217]\n27217 is not covered by Medicare in any payment\nsystem. See code G0414.\n\n\nCode check - Modifier\nUNVSL61\n463\nFor RHC/FQHC: Code Check CPT Mod Alert (Presence) is\n[Present] AND CPT Mod1 is not [CG]\nImproper or invalid modifier is present - review\nfor proper modifier usage.\n\n\nSurgical endoscopy includes diagnostic\nDIGES5\n825\nCPT Code is [45378] AND CPT Code is one of [4530*, 4531*,\n4532*, 4533*, 4534*, 4535*, 4537*, 4538*]\nA surgical Colonoscopy includes a diagnostic\nColonoscopy (45378) and should not be billed\nseparately.\n\n\nLiberty Mutual fax/portal\nUNVSL72\n501\nPrimary Insurance is one of [LIBERTY MUTAL INSURANCE (53),\nLIBERTY MUTAL (340), LIBERTY MEDICAL MAIL (469), LIBERTY\nMUTUAL (1421), LIBERTY MUTUAL (1534), LIBERTY MUTUAL (1543),\nLIBERTY MUTAL CORP (1556)]\nFor WC claims: Follow Workers Comp billing\nguidelines for electronic claims attachments.\nIf unsuccessful, Fax claims to 888-925-8391\nAttn: Bill Review or use the portal at\nhttps://www.libertymutualprovidersupport.com"
  },
  {
    "objectID": "posts/rules/claims_rules.html#components",
    "href": "posts/rules/claims_rules.html#components",
    "title": "Building Claims Rules",
    "section": "",
    "text": "step:\nvariable: Recode to standardize\nclass: Variable Data Class\ngroup: Variable Grouping\naction: Remove\nmethod: Operation Performed to Test for Expected State\nexpression: Actual Code to Run\nvalue: Coerce to correct data type, deal with wildcards\n\n\ncomponents &lt;- rules |&gt; \n  select(id, step, variable, action, value) |&gt; \n  distinct()\n\ncomponents\n\n# A tibble: 3,131 × 5\n      id  step variable                  action    value                        \n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;                     &lt;chr&gt;     &lt;chr&gt;                        \n 1     1     1 CPT Code                  is        43760                        \n 2     1     2 Encounter Date of Service after     01/01/2019                   \n 3     2     1 Primary Insurance         is        BCBS                         \n 4     2     2 CPT Code                  is        J*                           \n 5     2     3 CPT NDC (Presence)        is not    Present                      \n 6     3     1 Primary Insurance         is        BCBS                         \n 7     3     2 CPT NDC (Presence)        is not    Present                      \n 8     3     3 CPT Code                  is one of 90476,90477,905*,906*,9071*,…\n 9     4     1 DX Code                   is        S*                           \n10     5     1 Primary Insurance         is        BCBS (125),BCBS AL BLUE ADVA…\n# ℹ 3,121 more rows\n\n\n\n\n\nhcpcs:\n\nmod_1:\n\nmod_2:\n\nmod_3:\n\nmod_4:\n\nunit:\n\nicd:\n\ndos:\n\npos:\n\nub04:\n\nndc:\n\nrev_code:\n\ncci:\n\nlcd:\n\nncd:\n\ndob:\n\nsex:\n\nrendering:\n\nreferring:\n\nprimary_class:\n\nprimary_name:\n\nprimary_auth:\n\nsecondary_class:\n\nsecondary_name:\n\n\ncomponents &lt;- components |&gt;\n  mutate(variable = case_match(variable,\n      c(\"CPT CODE\", \n        \"CPT Code\", \n        \"CPT code\", \n        \"CPT\", \n        \"Code Check Expired CPT Alert (Presence)\", \n        \"CPT is one of\") ~ \"hcpcs\",\n      c(\"Mod1\", \n        \"CPT Mod1\", \n        \"CPT Mod 1\", \n        \"CPTMod1\", \n        \"Code Check CPT Mod Alert (Presence)\", \n        \"CPT MOD1\", \n        \"CPT Mod1 (Presence)\") ~ \"mod_1\",\n      c(\"Mod2\", \n        \"CPT MOD2\", \n        \"CPT Mod 2\", \n        \"CPT Mod2 (Presence)\", \n        \"CPTMod2\", \n        \"CPT Mod2\") ~ \"mod_2\",\n      \"CPT Mod3\" ~ \"mod_3\",\n      \"CPT Mod4\" ~ \"mod_4\",\n      \"CPT Units\" ~ \"unit\",\n      c(\"Dx code\", \n        \"DX Code\", \n        \"Dx Code\", \n        \"Code Check Expired DX Alert (Presence)\") ~ \"icd\",\n      c(\"Encounter Date of Service\", \n        \"Date of Service\") ~ \"dos\",\n      c(\"Location\", \n        \"Place of Service\") ~ \"pos\",\n      c(\"CPT UB04\", \n        \"UB04 Bill Type\") ~ \"ub04\",\n      \"CPT NDC (Presence)\" ~ \"ndc\",\n      \"CPT Rev Code\" ~ \"rev_code\",\n      \"Code Check CCI Alert (Presence)\" ~ \"cci\",\n      \"Code Check LCD Alert (Presence)\" ~ \"lcd\",\n      \"Code Check NCD Alert (Presence)\" ~ \"ncd\",\n      c(\"Patient Age\", \n        \"Code Check Age Alert (Presence)\") ~ \"dob\",\n      c(\"Patient Sex\", \n        \"Code Check Gender Alert (Presence)\") ~ \"sex\",\n      \"NA\" ~ NA_character_,\n      \"Rendering Provider\" ~ \"rendering\",\n      \"Referring Provider (Presence)\" ~ \"referring\",\n      c(\"Primary Insurance Class\", \n        \"Primary Insurance class\", \n        \"Primary insurance class\") ~ \"primary_class\",\n      \"Primary Insurance\" ~ \"primary_name\",\n      \"Secondary Insurance Class\" ~ \"secondary_class\",\n      \"Secondary Insurance\" ~ \"secondary_name\",\n      c(\"Primary Insurance Authorization (Presence)\", \n        \"Primary Insurance Authorization (Presence) is not [Present]\") ~ \"primary_auth\",\n      .default = variable) |&gt; \n      as_factor())\n\ncomponents\n\n# A tibble: 3,131 × 5\n      id  step variable     action    value                                     \n   &lt;int&gt; &lt;int&gt; &lt;fct&gt;        &lt;chr&gt;     &lt;chr&gt;                                     \n 1     1     1 hcpcs        is        43760                                     \n 2     1     2 dos          after     01/01/2019                                \n 3     2     1 primary_name is        BCBS                                      \n 4     2     2 hcpcs        is        J*                                        \n 5     2     3 ndc          is not    Present                                   \n 6     3     1 primary_name is        BCBS                                      \n 7     3     2 ndc          is not    Present                                   \n 8     3     3 hcpcs        is one of 90476,90477,905*,906*,9071*,9072*,9073*,9…\n 9     4     1 icd          is        S*                                        \n10     5     1 primary_name is        BCBS (125),BCBS AL BLUE ADVANTAGE MEDICAR…\n# ℹ 3,121 more rows\n\n\n\n\ncomponents &lt;- components |&gt; \n  mutate(\n    class = case_match(variable,\n      c(\"sex\", \"rendering\", \"referring\", \n        \"primary_auth\", \"primary_class\", \n        \"primary_name\", \"secondary_class\", \n        \"secondary_name\", \"ncd\", \"lcd\", \n        \"cci\", \"ndc\", \"ub04\", \"pos\", \n        \"icd\", \"hcpcs\", \"mod_1\", \"mod_2\", \n        \"mod_3\", \"mod_4\") ~ \"&lt;chr&gt;\",\n      c(\"rev_code\", \"unit\") ~ \"&lt;int&gt;\",\n      c(\"dos\", \"dob\") ~ \"&lt;date&gt;\"\n    ) |&gt; as_factor(),\n    group = case_match(as.character(variable),\n      c(\"sex\", \"dos\", \"dob\") ~ \"patient\",\n      c(\"rendering\", \"referring\") ~ \"provider\",\n      c(\"hcpcs\", \"mod_1\", \"mod_2\", \"mod_3\", \"mod_4\", \n        \"rev_code\", \"unit\", \"ndc\", \"pos\") ~ \"procedure\",\n      c(\"icd\") ~ \"diagnosis\",\n      c(\"ub04\", \"1500\") ~ \"claim\",\n      c(\"ncd\", \"lcd\", \"cci\") ~ \"ncci\",\n      c(\"primary_auth\", \"primary_class\", \n        \"primary_name\", \"secondary_class\", \n        \"secondary_name\") ~ \"payer\"\n    ) |&gt; as_factor())\n\ncomponents # |&gt; \n\n# A tibble: 3,131 × 7\n      id  step variable     action    value                          class group\n   &lt;int&gt; &lt;int&gt; &lt;fct&gt;        &lt;chr&gt;     &lt;chr&gt;                          &lt;fct&gt; &lt;fct&gt;\n 1     1     1 hcpcs        is        43760                          &lt;chr&gt; proc…\n 2     1     2 dos          after     01/01/2019                     &lt;dat… pati…\n 3     2     1 primary_name is        BCBS                           &lt;chr&gt; payer\n 4     2     2 hcpcs        is        J*                             &lt;chr&gt; proc…\n 5     2     3 ndc          is not    Present                        &lt;chr&gt; proc…\n 6     3     1 primary_name is        BCBS                           &lt;chr&gt; payer\n 7     3     2 ndc          is not    Present                        &lt;chr&gt; proc…\n 8     3     3 hcpcs        is one of 90476,90477,905*,906*,9071*,9… &lt;chr&gt; proc…\n 9     4     1 icd          is        S*                             &lt;chr&gt; diag…\n10     5     1 primary_name is        BCBS (125),BCBS AL BLUE ADVAN… &lt;chr&gt; payer\n# ℹ 3,121 more rows\n\n  # select(class, group, variable, action) |&gt; \n  # arrange(class, group, variable) |&gt;\n  # gt() |&gt;\n  # cols_align(align = \"left\") |&gt;\n  # opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  # opt_all_caps() |&gt;\n  # tab_style(\n  #     style = cell_text(\n  #       align = 'left',\n  #       weight = \"bold\",\n  #       font = google_font(name = \"Roboto Mono\")),\n  #     locations = cells_body(columns = c(action))) |&gt;\n  # tab_style(\n  #     style = cell_text(\n  #       align = 'left',\n  #       weight = \"normal\",\n  #       style = \"italic\",\n  #       decorate = \"underline\",\n  #       stretch = \"condensed\",\n  #       font = google_font(name = \"Fira Code\")),\n  #     locations = cells_body(columns = c(class))) |&gt;\n  # tab_options(table.width = pct(100),\n  #             quarto.disable_processing = TRUE)\n\n\n\ncomponents |&gt; \n  filter(variable == \"dos\") |&gt; \n  mutate(class = \"&lt;date&gt;\",\n         value = anytime::anydate(value),\n         method = if_else(str_detect(action, \"after\"), \"&gt;\", \"&lt;\")) |&gt; \n  select(id, step, class, variable, method, value) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  opt_stylize() |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n    \n\n\n1\n2\n&lt;date&gt;\ndos\n&gt;\n2019-01-01\n\n\n160\n3\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n305\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n317\n4\n&lt;date&gt;\ndos\n&gt;\n2019-01-01\n\n\n349\n3\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n351\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n371\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n416\n1\n&lt;date&gt;\ndos\n&gt;\n2019-07-31\n\n\n416\n2\n&lt;date&gt;\ndos\n&lt;\n2020-08-01\n\n\n475\n1\n&lt;date&gt;\ndos\n&gt;\n2020-03-09\n\n\n475\n6\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n479\n3\n&lt;date&gt;\ndos\n&gt;\n2020-03-05\n\n\n491\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n493\n4\n&lt;date&gt;\ndos\n&lt;\n2024-12-31\n\n\n504\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n505\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n605\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n606\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n607\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n608\n1\n&lt;date&gt;\ndos\n&gt;\n2020-12-31\n\n\n610\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n612\n3\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n615\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n616\n3\n&lt;date&gt;\ndos\n&lt;\n2022-01-01\n\n\n622\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n630\n5\n&lt;date&gt;\ndos\n&lt;\n2023-05-11\n\n\n633\n2\n&lt;date&gt;\ndos\n&gt;\n2023-06-01\n\n\n635\n1\n&lt;date&gt;\ndos\n&gt;\n2021-04-30\n\n\n640\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n699\n9\n&lt;date&gt;\ndos\n&lt;\n2024-12-31\n\n\n700\n3\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n732\n1\n&lt;date&gt;\ndos\n&gt;\n2021-03-31\n\n\n765\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n788\n3\n&lt;date&gt;\ndos\n&lt;\n2022-12-31\n\n\n813\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n814\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n815\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n816\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n817\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n828\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n829\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n830\n1\n&lt;date&gt;\ndos\n&gt;\n2021-10-01\n\n\n850\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n851\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n852\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n853\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n854\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n879\n4\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n881\n4\n&lt;date&gt;\ndos\n&lt;\n2023-05-12\n\n\n885\n1\n&lt;date&gt;\ndos\n&gt;\n2021-12-31\n\n\n889\n1\n&lt;date&gt;\ndos\n&gt;\n2022-01-23\n\n\n890\n1\n&lt;date&gt;\ndos\n&lt;\n2022-01-01\n\n\n933\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n934\n3\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n947\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n971\n2\n&lt;date&gt;\ndos\n&gt;\n2022-10-01\n\n\n972\n2\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n973\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n974\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n975\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n976\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n977\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n981\n1\n&lt;date&gt;\ndos\n&gt;\n2022-09-01\n\n\n982\n1\n&lt;date&gt;\ndos\n&gt;\n2022-11-01\n\n\n984\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n985\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n986\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n987\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n988\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n989\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n990\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n991\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n992\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n993\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n994\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n999\n2\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1000\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1001\n1\n&lt;date&gt;\ndos\n&gt;\n2023-01-01\n\n\n1015\n3\n&lt;date&gt;\ndos\n&lt;\n2023-09-11\n\n\n1041\n2\n&lt;date&gt;\ndos\n&gt;\n2023-05-25\n\n\n1044\n4\n&lt;date&gt;\ndos\n&gt;\n2023-05-11\n\n\n1067\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-16\n\n\n1074\n3\n&lt;date&gt;\ndos\n&gt;\n2023-08-01\n\n\n1076\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-01\n\n\n1079\n2\n&lt;date&gt;\ndos\n&gt;\n2023-04-18\n\n\n1080\n2\n&lt;date&gt;\ndos\n&gt;\n2023-05-07\n\n\n1083\n2\n&lt;date&gt;\ndos\n&gt;\n2023-11-01\n\n\n1084\n2\n&lt;date&gt;\ndos\n&gt;\n2023-09-11\n\n\n\n\n\n\n\nAll ages should be in the same unit of time, in this case, days.\nShould be calculated from the encounter’s Date of Service (dos) and the patient’s Date of Birth (dob).\n\ncomponents |&gt; \n  filter(variable == \"dob\") |&gt; \n  mutate(variable = \"age\",\n         class = \"&lt;int&gt;\", \n         age = strex::str_extract_numbers(value),\n         period = strex::str_extract_non_numerics(value),\n         .before = variable) |&gt; \n  unnest(c(age, period)) |&gt; \n  mutate(\n    age = as.integer(age),\n    period = str_remove_all(period, \"\\\\s|,\"),\n    value = NULL,\n    method = case_match(\n      action,\n      c(\"is younger than\", \"younger than\") ~ \"&lt;\",\n      \"is older than\" ~ \"&gt;\",\n      \"is\" ~ \"==\",\n      .default = NA_character_),\n    days = case_when(\n      period == \"years\" ~ as.duration(years(age)) / ddays(1),\n      period == \"months\" ~ as.duration(months(age)) / ddays(1),\n      period == \"days\" ~ as.duration(days(age)) / ddays(1),\n      .default = NA_real_),\n    dos = lubridate::today(),\n  ) |&gt; \n  select(id, step, class, variable, method, age, period, days) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  fmt_integer(columns = c(\"age\", \"days\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      age\n      period\n      days\n    \n\n\n8\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n8\n3\n&lt;int&gt;\nage\n&gt;\n3\nyears\n1,096\n\n\n9\n3\n&lt;int&gt;\nage\n&gt;\n20\nyears\n7,305\n\n\n13\n4\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n27\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n37\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n70\n1\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n72\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n75\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n76\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n77\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n78\n2\n&lt;int&gt;\nage\n&lt;\n3\nyears\n1,096\n\n\n80\n3\n&lt;int&gt;\nage\n==\n18\nmonths\n548\n\n\n80\n4\n&lt;int&gt;\nage\n==\n24\nmonths\n730\n\n\n82\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n83\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n84\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n85\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n86\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n87\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n88\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n90\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n91\n3\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n96\n6\n&lt;int&gt;\nage\n&gt;\n21\nyears\n7,670\n\n\n150\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n171\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n172\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n173\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n174\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n176\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n203\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n212\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n214\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n223\n2\n&lt;int&gt;\nage\n&gt;\n10\nyears\n3,652\n\n\n224\n1\n&lt;int&gt;\nage\n&lt;\n11\nyears\n4,018\n\n\n239\n2\n&lt;int&gt;\nage\n&gt;\n11\nmonths\n335\n\n\n242\n1\n&lt;int&gt;\nage\n&lt;\n8\ndays\n8\n\n\n243\n3\n&lt;int&gt;\nage\n&gt;\n7\ndays\n7\n\n\n243\n4\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n244\n1\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n244\n2\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n245\n1\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n250\n2\n&lt;int&gt;\nage\n&lt;\n1\nyears\n365\n\n\n250\n3\n&lt;int&gt;\nage\n&gt;\n5\nyears\n1,826\n\n\n255\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n256\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n258\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n259\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n260\n2\n&lt;int&gt;\nage\n&lt;\n5\nyears\n1,826\n\n\n260\n3\n&lt;int&gt;\nage\n&gt;\n11\nyears\n4,018\n\n\n261\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n262\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n264\n2\n&lt;int&gt;\nage\n&lt;\n12\nyears\n4,383\n\n\n264\n3\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n265\n2\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n265\n3\n&lt;int&gt;\nage\n&gt;\n39\nyears\n14,245\n\n\n266\n2\n&lt;int&gt;\nage\n&lt;\n40\nyears\n14,610\n\n\n266\n3\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n267\n2\n&lt;int&gt;\nage\n&lt;\n65\nyears\n23,741\n\n\n335\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n335\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n338\n2\n&lt;int&gt;\nage\n&gt;\n20\nyears\n7,305\n\n\n338\n3\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n370\n1\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n377\n1\n&lt;int&gt;\nage\n&gt;\n64\nyears\n23,376\n\n\n397\n2\n&lt;int&gt;\nage\n&lt;\n4\nyears\n1,461\n\n\n397\n3\n&lt;int&gt;\nage\n&gt;\n6\nyears\n2,192\n\n\n398\n2\n&lt;int&gt;\nage\n&gt;\n7\nyears\n2,557\n\n\n399\n2\n&lt;int&gt;\nage\n&lt;\n7\nyears\n2,557\n\n\n400\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n401\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n403\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n404\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n405\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n406\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n407\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n408\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n409\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n410\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n411\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n412\n3\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n414\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n418\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n434\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n436\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n454\n2\n&lt;int&gt;\nage\n&lt;\n65\nyears\n23,741\n\n\n455\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n456\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n457\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n459\n2\n&lt;int&gt;\nage\n&lt;\n29\ndays\n29\n\n\n521\n2\n&lt;int&gt;\nage\n&gt;\n18\nyears\n6,574\n\n\n571\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n580\n1\n&lt;int&gt;\nage\n&lt;\n20\nyears\n7,305\n\n\n581\n2\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n603\n1\n&lt;int&gt;\nage\n&lt;\n1\nmonths\n30\n\n\n613\n3\n&lt;int&gt;\nage\n&lt;\n12\nyears\n4,383\n\n\n641\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n642\n4\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n645\n3\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n651\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n652\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n653\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n654\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n655\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n656\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n657\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n658\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n659\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n660\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n661\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n662\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n663\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n664\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n665\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n666\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n667\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n668\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n669\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n670\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n671\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n672\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n674\n6\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n685\n2\n&lt;int&gt;\nage\n&lt;\n15\nyears\n5,479\n\n\n686\n2\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n687\n1\n&lt;int&gt;\nage\n&gt;\n17\nyears\n6,209\n\n\n690\n2\n&lt;int&gt;\nage\n&lt;\n2\nyears\n730\n\n\n690\n3\n&lt;int&gt;\nage\n&gt;\n49\nyears\n17,897\n\n\n691\n1\n&lt;int&gt;\nage\n&lt;\n4\nyears\n1,461\n\n\n692\n1\n&lt;int&gt;\nage\n&lt;\n18\nyears\n6,574\n\n\n693\n1\n&lt;int&gt;\nage\n&lt;\n6\nmonths\n183\n\n\n693\n2\n&lt;int&gt;\nage\n&gt;\n35\nmonths\n1,065\n\n\n694\n1\n&lt;int&gt;\nage\n&lt;\n3\nyears\n1,096\n\n\n695\n2\n&lt;int&gt;\nage\n&gt;\n16\nyears\n5,844\n\n\n707\n2\n&lt;int&gt;\nage\n&lt;\n35\nyears\n12,784\n\n\n708\n2\n&lt;int&gt;\nage\n&gt;\n35\nyears\n12,784\n\n\n709\n2\n&lt;int&gt;\nage\n&lt;\n16\nyears\n5,844\n\n\n721\n2\n&lt;int&gt;\nage\n&gt;\n1\nyears\n365\n\n\n726\n2\n&lt;int&gt;\nage\n&gt;\n21\nyears\n7,670\n\n\n727\n2\n&lt;int&gt;\nage\n&lt;\n9\nyears\n3,287\n\n\n727\n3\n&lt;int&gt;\nage\n&gt;\n65\nyears\n23,741\n\n\n729\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n735\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n736\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n738\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n739\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n740\n1\n&lt;int&gt;\nage\n&gt;\n19\nyears\n6,940\n\n\n751\n2\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n762\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n764\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n768\n1\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n838\n2\n&lt;int&gt;\nage\n&lt;\n71\nyears\n25,933\n\n\n838\n3\n&lt;int&gt;\nage\n&gt;\n364\ndays\n364\n\n\n844\n5\n&lt;int&gt;\nage\n&lt;\n21\nyears\n7,670\n\n\n854\n2\n&lt;int&gt;\nage\n&gt;\n12\nyears\n4,383\n\n\n893\n2\n&lt;int&gt;\nage\n&lt;\n6\nmonths\n183\n\n\n893\n3\n&lt;int&gt;\nage\n&gt;\n35\nmonths\n1,065\n\n\n936\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n942\n1\n&lt;int&gt;\nage\n&gt;\n11\nmonths\n335\n\n\n946\n2\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n981\n4\n&lt;int&gt;\nage\n&lt;\n19\nyears\n6,940\n\n\n1051\n3\n&lt;int&gt;\nage\n==\n9\nmonths\n274\n\n\n1051\n4\n&lt;int&gt;\nage\n==\n18\nmonths\n548\n\n\n1051\n5\n&lt;int&gt;\nage\n==\n30\nmonths\n913\n\n\n1071\n2\n&lt;int&gt;\nage\n&gt;\n28\ndays\n28\n\n\n\n\n\n\n\n\ncomponents |&gt; \n  filter(variable == \"unit\") |&gt; \n  mutate(class = \"&lt;int&gt;\", \n         value = as.integer(value),\n         method = if_else(str_detect(action, \"is not\"), \"!=\", \"==\"),\n         .before = variable) |&gt; \n  select(id, step, class, variable, method, value, action) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n    \n\n\n169\n2\n&lt;int&gt;\nunit\n!=\n2\nis not\n\n\n621\n2\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n730\n3\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n730\n4\n&lt;int&gt;\nunit\n==\n3\nis\n\n\n730\n5\n&lt;int&gt;\nunit\n==\n4\nis\n\n\n730\n6\n&lt;int&gt;\nunit\n==\n5\nis\n\n\n730\n7\n&lt;int&gt;\nunit\n==\n6\nis\n\n\n731\n1\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n731\n2\n&lt;int&gt;\nunit\n==\n3\nis\n\n\n731\n3\n&lt;int&gt;\nunit\n==\n4\nis\n\n\n731\n4\n&lt;int&gt;\nunit\n==\n5\nis\n\n\n731\n5\n&lt;int&gt;\nunit\n==\n6\nis\n\n\n1078\n2\n&lt;int&gt;\nunit\n==\n2\nis\n\n\n\n\n\n\n\nHow can this be represented in relational algebra? Detect presence with regex?\nIf not present, then is NA its’ representation? If so, is.na(x) would equal is not present and !is.na(x) would equal is present\n\ncomponents |&gt; \n  filter(variable == \"ndc\") |&gt; \n  mutate(class = \"&lt;lgl&gt;\", \n         .before = variable, \n         method = if_else(str_detect(action, \"is not\"), \"is.na(x)\", \"!is.na(x)\")) |&gt; \n  select(id, step, class, variable, method, value, action) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n    \n\n\n2\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n3\n2\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n10\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n15\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n25\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n39\n2\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n40\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n153\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n207\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n211\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n327\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n336\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n353\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nPresent\nis\n\n\n362\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNotPresent\nis\n\n\n522\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n523\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n570\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n585\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n749\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n752\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n766\n3\n&lt;lgl&gt;\nndc\nis.na(x)\nPresent\nis not\n\n\n944\n3\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n1002\n2\n&lt;lgl&gt;\nndc\n!is.na(x)\nNot Present\nis\n\n\n\n\n\n\n\n\nhas all\nis\nis not\nis one of\n\nsome values contain wildcards *\n\ncomponents |&gt; \n  filter(variable == \"icd\") |&gt;\n  mutate(wc = case_when(str_detect(value, \"\\\\*\") ~ 1L, .default = 0L),\n         nchar = if_else(wc == 1, str_count(value, \"[[:alnum:]]\"), 0L),\n         class = \"&lt;chr&gt;\",\n         method = case_when(\n           action == \"is\" & wc == 1 ~ \"%in%\",\n           action == \"is\" & wc == 0 ~ \"==\",\n           .default = NA_character_)\n         ) |&gt; \n  filter(!is.na(method)) |&gt; \n  select(id, step, class, variable, method, value, action, wc, nchar) |&gt; \n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(variable, method, value))) |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        style = \"italic\",\n        decorate = \"underline\",\n        stretch = \"condensed\",\n        font = google_font(name = \"Fira Code\")),\n      locations = cells_body(columns = c(class))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\n\n\n\nid\n      step\n      class\n      variable\n      method\n      value\n      action\n      wc\n      nchar\n    \n\n\n4\n1\n&lt;chr&gt;\nicd\n%in%\nS*\nis\n1\n1\n\n\n23\n2\n&lt;chr&gt;\nicd\n==\nH01.119\nis\n0\n0\n\n\n24\n2\n&lt;chr&gt;\nicd\n%in%\nS*\nis\n1\n1\n\n\n79\n3\n&lt;chr&gt;\nicd\n==\nZ13.41\nis\n0\n0\n\n\n100\n1\n&lt;chr&gt;\nicd\n%in%\nR06.0*\nis\n1\n4\n\n\n101\n1\n&lt;chr&gt;\nicd\n%in%\nJ41.*\nis\n1\n3\n\n\n104\n1\n&lt;chr&gt;\nicd\n==\nG89.2\nis\n0\n0\n\n\n106\n1\n&lt;chr&gt;\nicd\n%in%\nE08.*\nis\n1\n3\n\n\n107\n1\n&lt;chr&gt;\nicd\n%in%\nG30.*\nis\n1\n3\n\n\n108\n1\n&lt;chr&gt;\nicd\n==\nR63.5\nis\n0\n0\n\n\n109\n1\n&lt;chr&gt;\nicd\n%in%\nR41.*\nis\n1\n3\n\n\n110\n1\n&lt;chr&gt;\nicd\n==\nJ00\nis\n0\n0\n\n\n111\n1\n&lt;chr&gt;\nicd\n==\nR41.3\nis\n0\n0\n\n\n112\n1\n&lt;chr&gt;\nicd\n%in%\nG43.*\nis\n1\n3\n\n\n113\n1\n&lt;chr&gt;\nicd\n%in%\nG43.7*\nis\n1\n4\n\n\n113\n2\n&lt;chr&gt;\nicd\n%in%\nG43.0*\nis\n1\n4\n\n\n114\n1\n&lt;chr&gt;\nicd\n==\nZ72.821\nis\n0\n0\n\n\n115\n1\n&lt;chr&gt;\nicd\n%in%\nM54.1*\nis\n1\n4\n\n\n116\n1\n&lt;chr&gt;\nicd\n%in%\nM54.5*\nis\n1\n4\n\n\n118\n1\n&lt;chr&gt;\nicd\n%in%\nE10.*\nis\n1\n3\n\n\n119\n1\n&lt;chr&gt;\nicd\n%in%\nE11.*\nis\n1\n3\n\n\n120\n1\n&lt;chr&gt;\nicd\n%in%\nE09.*\nis\n1\n3\n\n\n122\n1\n&lt;chr&gt;\nicd\n==\nG31.84\nis\n0\n0\n\n\n123\n1\n&lt;chr&gt;\nicd\n%in%\nJ45*\nis\n1\n3\n\n\n124\n1\n&lt;chr&gt;\nicd\n==\nZ72.0\nis\n0\n0\n\n\n125\n1\n&lt;chr&gt;\nicd\n==\nN39.0\nis\n0\n0\n\n\n126\n1\n&lt;chr&gt;\nicd\n%in%\nR06*\nis\n1\n3\n\n\n128\n1\n&lt;chr&gt;\nicd\n%in%\nF20*\nis\n1\n3\n\n\n129\n1\n&lt;chr&gt;\nicd\n%in%\nF30*\nis\n1\n3\n\n\n130\n1\n&lt;chr&gt;\nicd\n%in%\nF31*\nis\n1\n3\n\n\n131\n1\n&lt;chr&gt;\nicd\n==\nH72.00\nis\n0\n0\n\n\n132\n1\n&lt;chr&gt;\nicd\n%in%\nF32*\nis\n1\n3\n\n\n133\n1\n&lt;chr&gt;\nicd\n%in%\nF33*\nis\n1\n3\n\n\n138\n1\n&lt;chr&gt;\nicd\n%in%\nF10.1*\nis\n1\n4\n\n\n139\n1\n&lt;chr&gt;\nicd\n%in%\nF11.1*\nis\n1\n4\n\n\n140\n1\n&lt;chr&gt;\nicd\n==\nZ31.89\nis\n0\n0\n\n\n141\n1\n&lt;chr&gt;\nicd\n%in%\nM75.12*\nis\n1\n5\n\n\n141\n2\n&lt;chr&gt;\nicd\n%in%\nS46.01*\nis\n1\n5\n\n\n142\n1\n&lt;chr&gt;\nicd\n==\nJ30.9\nis\n0\n0\n\n\n143\n1\n&lt;chr&gt;\nicd\n==\nJ06.9\nis\n0\n0\n\n\n144\n1\n&lt;chr&gt;\nicd\n==\nR07.0\nis\n0\n0\n\n\n145\n1\n&lt;chr&gt;\nicd\n==\nM51.16\nis\n0\n0\n\n\n146\n1\n&lt;chr&gt;\nicd\n%in%\nM54.3*\nis\n1\n4\n\n\n154\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n230\n2\n&lt;chr&gt;\nicd\n==\nM17.0\nis\n0\n0\n\n\n363\n1\n&lt;chr&gt;\nicd\n%in%\nZ68*\nis\n1\n3\n\n\n368\n1\n&lt;chr&gt;\nicd\n==\nH61.23\nis\n0\n0\n\n\n382\n1\n&lt;chr&gt;\nicd\n%in%\nZ01.41*\nis\n1\n5\n\n\n402\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n436\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n448\n1\n&lt;chr&gt;\nicd\n%in%\nZ01.41*\nis\n1\n5\n\n\n457\n1\n&lt;chr&gt;\nicd\n==\nR17\nis\n0\n0\n\n\n469\n1\n&lt;chr&gt;\nicd\n==\nPresent\nis\n0\n0\n\n\n476\n1\n&lt;chr&gt;\nicd\n==\nR50.81\nis\n0\n0\n\n\n521\n1\n&lt;chr&gt;\nicd\n==\nF91.3\nis\n0\n0\n\n\n531\n1\n&lt;chr&gt;\nicd\n%in%\nJ95*\nis\n1\n3\n\n\n536\n1\n&lt;chr&gt;\nicd\n%in%\nR53.8*\nis\n1\n4\n\n\n596\n1\n&lt;chr&gt;\nicd\n==\nH60.393\nis\n0\n0\n\n\n599\n1\n&lt;chr&gt;\nicd\n==\nH66.90\nis\n0\n0\n\n\n602\n1\n&lt;chr&gt;\nicd\n%in%\nM43.0*\nis\n1\n4\n\n\n603\n2\n&lt;chr&gt;\nicd\n%in%\nO*\nis\n1\n1\n\n\n605\n2\n&lt;chr&gt;\nicd\n==\nZ11.59\nis\n0\n0\n\n\n606\n2\n&lt;chr&gt;\nicd\n==\nZ20.828\nis\n0\n0\n\n\n607\n2\n&lt;chr&gt;\nicd\n==\nJ12.82\nis\n0\n0\n\n\n609\n1\n&lt;chr&gt;\nicd\n==\nM35.81\nis\n0\n0\n\n\n622\n1\n&lt;chr&gt;\nicd\n==\nZ11.52\nis\n0\n0\n\n\n628\n1\n&lt;chr&gt;\nicd\n%in%\nR51.*\nis\n1\n3\n\n\n629\n1\n&lt;chr&gt;\nicd\n%in%\nM12.55*\nis\n1\n5\n\n\n634\n1\n&lt;chr&gt;\nicd\n==\nH62.40\nis\n0\n0\n\n\n637\n1\n&lt;chr&gt;\nicd\n==\nZ00.8\nis\n0\n0\n\n\n638\n1\n&lt;chr&gt;\nicd\n%in%\nE66*\nis\n1\n3\n\n\n648\n2\n&lt;chr&gt;\nicd\n%in%\nO*\nis\n1\n1\n\n\n677\n1\n&lt;chr&gt;\nicd\n==\nG25.3\nis\n0\n0\n\n\n678\n1\n&lt;chr&gt;\nicd\n==\nR56.1\nis\n0\n0\n\n\n681\n1\n&lt;chr&gt;\nicd\n%in%\nR22.*\nis\n1\n3\n\n\n682\n1\n&lt;chr&gt;\nicd\n%in%\nG58.*\nis\n1\n3\n\n\n683\n1\n&lt;chr&gt;\nicd\n%in%\nR65.*\nis\n1\n3\n\n\n695\n1\n&lt;chr&gt;\nicd\n%in%\nO09.6*\nis\n1\n4\n\n\n698\n1\n&lt;chr&gt;\nicd\n==\nB97.21\nis\n0\n0\n\n\n705\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n706\n1\n&lt;chr&gt;\nicd\n%in%\nZ3A*\nis\n1\n3\n\n\n707\n1\n&lt;chr&gt;\nicd\n%in%\nO09.5*\nis\n1\n4\n\n\n708\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n709\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n710\n2\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n711\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n712\n1\n&lt;chr&gt;\nicd\n%in%\nZ34*\nis\n1\n3\n\n\n728\n1\n&lt;chr&gt;\nicd\n%in%\nL50*\nis\n1\n3\n\n\n729\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n735\n5\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n736\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n737\n1\n&lt;chr&gt;\nicd\n==\nR19.4\nis\n0\n0\n\n\n753\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n755\n4\n&lt;chr&gt;\nicd\n%in%\nZ30*\nis\n1\n3\n\n\n768\n3\n&lt;chr&gt;\nicd\n==\nZ23\nis\n0\n0\n\n\n782\n1\n&lt;chr&gt;\nicd\n==\nJ91.0\nis\n0\n0\n\n\n783\n1\n&lt;chr&gt;\nicd\n==\nJ91.8\nis\n0\n0\n\n\n803\n1\n&lt;chr&gt;\nicd\n==\nI87.2\nis\n0\n0\n\n\n811\n1\n&lt;chr&gt;\nicd\n%in%\nZ13.39,Z0*\nis\n1\n7\n\n\n813\n2\n&lt;chr&gt;\nicd\n==\nM35.81\nis\n0\n0\n\n\n815\n2\n&lt;chr&gt;\nicd\n==\nU09.9\nis\n0\n0\n\n\n816\n2\n&lt;chr&gt;\nicd\n==\nF32.9\nis\n0\n0\n\n\n817\n2\n&lt;chr&gt;\nicd\n==\nR63.3\nis\n0\n0\n\n\n827\n1\n&lt;chr&gt;\nicd\n==\nR35.8\nis\n0\n0\n\n\n828\n2\n&lt;chr&gt;\nicd\n==\nM54.5\nis\n0\n0\n\n\n829\n2\n&lt;chr&gt;\nicd\n==\nP09\nis\n0\n0\n\n\n830\n2\n&lt;chr&gt;\nicd\n==\nR05\nis\n0\n0\n\n\n831\n1\n&lt;chr&gt;\nicd\n==\nZ20.822\nis\n0\n0\n\n\n831\n2\n&lt;chr&gt;\nicd\n==\nU07.1\nis\n0\n0\n\n\n842\n1\n&lt;chr&gt;\nicd\n%in%\nB97*\nis\n1\n3\n\n\n858\n1\n&lt;chr&gt;\nicd\n%in%\nZ37.*\nis\n1\n3\n\n\n957\n1\n&lt;chr&gt;\nicd\n%in%\nQ03*\nis\n1\n3\n\n\n965\n3\n&lt;chr&gt;\nicd\n==\nZ12.5\nis\n0\n0\n\n\n969\n3\n&lt;chr&gt;\nicd\n%in%\nZ12.*\nis\n1\n3\n\n\n971\n1\n&lt;chr&gt;\nicd\n==\nB37.3\nis\n0\n0\n\n\n1003\n1\n&lt;chr&gt;\nicd\n==\nK30\nis\n0\n0\n\n\n1039\n3\n&lt;chr&gt;\nicd\n==\nZ13.41\nis\n0\n0\n\n\n1057\n1\n&lt;chr&gt;\nicd\n%in%\nR31.*\nis\n1\n3\n\n\n1062\n1\n&lt;chr&gt;\nicd\n==\nJ02.9\nis\n0\n0\n\n\n1064\n3\n&lt;chr&gt;\nicd\n==\nR19.5\nis\n0\n0\n\n\n1071\n1\n&lt;chr&gt;\nicd\n%in%\nH04.53*\nis\n1\n5\n\n\n1072\n1\n&lt;chr&gt;\nicd\n==\nM54.6\nis\n0\n0\n\n\n1077\n2\n&lt;chr&gt;\nicd\n%in%\nF25*\nis\n1\n3\n\n\n1092\n1\n&lt;chr&gt;\nicd\n%in%\nF17.*\nis\n1\n3"
  },
  {
    "objectID": "posts/rules/claims_rules.html#unevaluated-code",
    "href": "posts/rules/claims_rules.html#unevaluated-code",
    "title": "Building Claims Rules",
    "section": "",
    "text": "categorize_vars |&gt;\n  separate_longer_delim(cols = value, delim = \",\") |&gt;\n  mutate(value = str_squish(value),\n         neg = case_when(str_detect(action, \"not\") ~ 1L, .default = 0L),\n         wc = case_when(str_detect(value, \"\\\\*\") ~ 1L, .default = 0L),\n         .after = value)\n\nhead_tail(rules_new, n = 10, by = c(\"var\", \"action\")) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(var, action, value))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\nrules_new |&gt;\n  filter(!is.na(var)) |&gt;\n  group_by(var) |&gt;\n  count(action) |&gt;\n  ungroup() |&gt;\n  arrange(var, desc(n), action) |&gt;\n  gt(groupname_col = \"var\", row_group_as_column = TRUE) |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(\n    font = google_font(name = \"Roboto Condensed\"),\n    weight = \"bold\"\n    ) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"normal\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(var, action))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)"
  },
  {
    "objectID": "posts/rules/claims_rules.html#regexes",
    "href": "posts/rules/claims_rules.html#regexes",
    "title": "Building Claims Rules",
    "section": "",
    "text": "rules_new |&gt;\n  filter(wc == 1,\n         var == \"hcpcs\") |&gt;\n  mutate(value = str_remove_all(value, \"\\\\*\"),\n         chars = 5 - str_length(value),\n         .after = value) |&gt;\n  mutate(\n    regex = case_when(\n      chars == 0 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\"),\n      chars == 1 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;[0-9]$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\"),\n      chars &gt; 1 ~ glue_chr(\"^&lt;&lt;value&gt;&gt;[0-9]{&lt;&lt;chars&gt;&gt;}$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\")),\n    regex = case_when(neg == 1L ~ glue_chr('!{regex}'), .default = regex),\n    .after = regex\n  ) |&gt;\n  head_tail(n = 10, by = c(\"var\", \"action\")) |&gt;\n  gt() |&gt;\n  cols_align(align = \"left\") |&gt;\n  opt_table_font(font = google_font(name = \"Roboto Condensed\")) |&gt;\n  opt_all_caps() |&gt;\n  tab_style(\n      style = cell_text(\n        align = 'left',\n        weight = \"bold\",\n        font = google_font(name = \"Roboto Mono\")),\n      locations = cells_body(columns = c(regex))) |&gt;\n  tab_options(table.width = pct(100),\n              quarto.disable_processing = TRUE)\n\n\nnorthstar::search_descriptions(hcpcs_desc_type = \"Long\") |&gt; \n  # dplyr::mutate(not_hcpcs = !grepl(\"^99[0-9]{3}$\", hcpcs_code)) |&gt; \n  filter(!grepl(\"^99[0-9]{3,3}$\", hcpcs_code)) |&gt;\n  # dplyr::mutate(has_hcpcs = grepl(\"^J[0-9]{4}$\", hcpcs_code)) |&gt; \n  filter(str_detect(hcpcs_code, regex(\"^J[0-9]{4}$\"))) |&gt; \n  filter(str_detect(hcpcs_code, regex(\"^(?!5405)(?&lt;![0-9]{1})$\"))) |&gt; \n  print(n = 200)\n\n# Match strings that don't start with \"99\" and don't end with 3 digits\npattern &lt;- \"^(?!99).*(?&lt;![0-9]{3})$\"\n\n# Negation pattern\n\"^(?!9938[0-9]{1}$)\"\n\n# Begins with 0, ends with digit\n\"^0.*\\\\d$\"\n\n# Begins with 0, ends with letter\n\"^0.*[A-Z]$\"\n\n# Match strings that don't start with \"a\" and don't end with \"z\"\npattern &lt;- \"^(?!a).*[^z]$\"\ngrep(pattern, c(\"apple\", \"banana\", \"cherry\"), value = TRUE)\n# Output: \"banana\" \"cherry\"\n\nstringr::str_detect(\"99202\", stringr::regex(\"^[992]{3}.*\"))\n\ngrep(\"^[992]{3}.*\", \"99202\", value = TRUE, invert = TRUE)\n\n\npattern = dplyr::case_when(\n  chars == 0 & negation == FALSE ~ glue::glue(\"^&lt;value&gt;$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars &gt; 0  & negation == FALSE ~ glue::glue(\"^&lt;value&gt;[0-9]{&lt;chars&gt;}$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars == 0 & negation == TRUE ~ glue::glue(\"^(?!&lt;value&gt;)$\", .open = \"&lt;\", .close = \"&gt;\"),\n  chars &gt; 0  & negation == TRUE ~ glue::glue(\"^(?!&lt;&lt;value&gt;&gt;)(?&lt;![0-9]{&lt;&lt;chars&gt;&gt;})$\", .open = \"&lt;&lt;\", .close = \"&gt;&gt;\")\n  )"
  }
]