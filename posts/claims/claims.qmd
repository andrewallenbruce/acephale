---
title: "Claims Analysis"
format:
  html:
    reference-location: block
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: FALSE
#| message: FALSE
#| warning: FALSE

knitr::opts_chunk$set(
  echo = FALSE, 
  dev = "ragg_png",
  dpi = 320,
  out.width = "100%",
  fig.width = 8,
  fig.asp = 0.618,
  fig.retina = 2,
  fig.align = "center",
  fig.show = "hold"
)
options(scipen = 999)

library(tidyverse)
library(here)
library(gt)
library(gtExtras)
library(ggstatsplot)
library(rvu)
library(northstar)
library(fuimus)

claims_spec <- cols(
  id          = col_character(),
  enc         = col_integer(),
  dos         = col_date(format = ""),
  dob         = col_date(format = ""),
  age         = col_integer(),
  dor         = col_date(format = ""),
  lag         = col_double(),
  ref         = col_character(),
  ref_cred    = col_character(),
  ref_tax     = col_logical(),
  ren         = col_character(),
  ren_cred    = col_character(),
  ren_tax     = col_logical(),
  icd         = col_character(),
  ord         = col_integer(),
  hcpcs       = col_character(),
  desc        = col_character(),
  units       = col_integer(),
  mod1        = col_character(),
  mod2        = col_character(),
  pos         = col_character(),
  pos_name    = col_character(),
  loc         = col_character(),
  ins_class   = col_character(),
  ins_prim    = col_character(),
  ins_sec     = col_character(),
  charges     = col_double(),
  allowed     = col_double(),
  payments    = col_double(),
  adjustments = col_double(),
  adj1        = col_character(),
  adj2        = col_character(),
  adj3        = col_character()
)

claims <- read_csv(
  here("posts/claims/data", "clean_rpt_rend.csv"), 
  col_types = claims_spec) |> 
  fuimus::remove_quiet()

claims <- claims |> 
  left_join(
    search_pos() |> 
      select(-c(pos_name, pos_description)), 
    by = join_by(pos == pos_code)) |> 
  full_join(
    expand_date_range(claims$dos, "dos"), 
    by = join_by(dos))

rvus <- c(
  get_source(2021, "pprrvu"),
  get_source(2022, "pprrvu"),
  get_source(2023, "pprrvu"),
  get_source(2024, "pprrvu"))
```


## Revenue Per Visit

$RPV =$ Total Payments $\div$ Number of Patient Visits


```{r}
#| label: claims_base
#| echo: false
#| message: false
#| warning: false
claims_base <- claims |> 
  select(
    id,
    enc,
    age,
    ins_prim,
    charges,
    allowed,
    payments,
    adjustments)  |> 
  arrange(id, enc) |>  
  mutate(ppa = payments + adjustments,
         gt = charges > ppa,
         allowed = case_when(is.na(allowed) & gt ~ ppa, 
                             is.na(allowed) & !gt ~ payments, 
                             .default = allowed),
         ppa = NULL,
         gt = NULL,
         .after = charges)
```


```{r}
#| label: claims_summary
#| message: false
#| warning: false
claims_summary <- claims_base |>
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, enc, age)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age)
  ) |> 
  summarise(
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE))

claims_summary |> 
  set_names(
    c("Patient Age Average", 
      "Procedures", 
      "Visits", 
      "Charges", 
      "Allowed", 
      "Net Payment", 
      "Adjustments")) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value") |> 
  gt() |> 
  opt_table_font(font = google_font(name = "Karla")) |> 
  fmt_number(columns = Value, decimals = 0) |> 
  tab_header(
    title = "Overall Summary",
    subtitle = "August 2022 - March 2024"
  ) |> 
  tab_options(
    quarto.disable_processing = TRUE, 
    stub_row_group.font.weight = "bold",
    heading.title.font.size = px(22),
    heading.subtitle.font.size = px(16),
    heading.background.color = "white",
    heading.align = "left",
    table.width = pct(100),
    table.font.size = px(16),
    table.border.bottom.color = "white") |> 
  opt_horizontal_padding(scale = 2) |> 
  opt_all_caps()
```


```{r}
#| label: claims_ratio
#| message: false
#| warning: false
claims_summary |>
  mutate(
    revenue_adjustments = revenue + adjustments, 
    .after = charges) |> 
  reframe(
    cpp = charges / procedures,
    alpp = allowed / procedures,
    rpp = revenue / procedures,
    adpp = adjustments / procedures,
    ppv = procedures / visits,
    cpv = charges / visits,
    alpv = allowed / visits,
    rpv = revenue / visits,
    adpv = adjustments / visits,
    cpr = charges / revenue_adjustments,
    alpr = allowed / revenue,
    adpr = adjustments / revenue,
    net_collect = revenue / (charges - adjustments),
    net_allow = revenue / allowed,
    net_adjust = revenue / adjustments,
    ) |> 
  set_names(
    c("Charge Per Procedure", 
      "Allowed Per Procedure", 
      "Payment Per Procedure", 
      "Adjustment Per Procedure", 
      "Procedures Per Visit", 
      "Charge Per Visit", 
      "Allowed Per Visit", 
      "Payment Per Visit", 
      "Adjustment Per Visit",
      "Charge To Payment + Adjustment",
      "Allowed Per Dollar", 
      "Adjustment Per Dollar",
      "Net Collection Ratio",
      "Net Allowable Ratio",
      "Net Adjustment Ratio"
      )) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value")
```

```{r}
#| label: insurance_summary
#| message: false
#| warning: false
claims_base |>
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, enc, age, ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age, ins_prim)
  ) |> 
  summarise(
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = ins_prim
  ) |> 
  filter(!is.na(ins_prim)) |> 
  arrange(desc(procedures)) |>
  print(n = 30)
```


```{r}
#| label: insurance_ratios
#| message: false
#| warning: false
claims_base |>
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, enc, age, ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age, ins_prim)
  ) |> 
  summarise(
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    ppv = procedures / visits,
    rpv = revenue / visits,
    rpp = revenue / procedures,
    .by = ins_prim
  ) |> 
  filter(!is.na(ins_prim)) |> 
  arrange(desc(procedures)) |>
  print(n = 30)
```

# Trends & Demographics

```{r}
ggstatsplot::grouped_gghistostats(
  data = claims |> filter(between(payments, 1, 1000)),
  x = payments,
  grouping.var = pos_type,
  centrality.type = "nonparametric",
  plotgrid.args = list(nrow = 2)
  )
```


# Reimbursement


```{r}
yq <- claims |> 
  filter(!is.na(hcpcs)) |> 
  distinct(year, quarter, hcpcs)

yq <- split(yq$hcpcs, yq[c("year", "quarter")]) |> 
  purrr::compact() |> 
  cheapr::enframe_(name = "yq", value = "hcpcs") |> 
  arrange(yq)

yqi <- claims |> 
  distinct(y = year, q = quarter) |> 
  as.list()

yqs <- as.character(str_glue("{yqi$y}.{yqi$q}"))

# get_rvus <- \(rvu, yq, yqi, yqs) {
#   rvu |> 
#   filter(hcpcs %in% c(filter(yq, yq == yqs) |> pull(hcpcs_code) |> pluck(1))) |> 
#   select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
#   mutate(year = yqi$y, quarter = yqi$q, .before = 1)
# }

rvu_22.2 <- rvus$rvu22b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[1]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[1], quarter = yqi$q[1], .before = 1)

rvu_22.3 <- rvus$rvu22c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[2]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[2], quarter = yqi$q[2], .before = 1)

rvu_22.4 <- rvus$rvu22d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[3]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[3], quarter = yqi$q[3], .before = 1)

rvu_23.1 <- rvus$rvu23a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[4]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[4], quarter = yqi$q[4], .before = 1)

rvu_23.2 <- rvus$rvu23b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[5]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[5], quarter = yqi$q[5], .before = 1)

rvu_23.3 <- rvus$rvu23c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[6]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[6], quarter = yqi$q[6], .before = 1)

rvu_23.4 <- rvus$rvu23d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[7]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[7], quarter = yqi$q[7], .before = 1)

rvu_24.1 <- rvus$rvu24a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[8]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[8], quarter = yqi$q[8], .before = 1)

rvu_join <- vctrs::vec_rbind(
  rvu_22.2,
  rvu_22.3,
  rvu_22.4,
  rvu_23.1,
  rvu_23.2,
  rvu_23.3,
  rvu_24.1
  )
```



```{r}
rvu_join |> 
  dplyr::mutate(
    tot_fac_rvu = work_rvu + facility_pe_rvu + mp_rvu,
    tot_non_rvu = work_rvu + non_fac_pe_rvu + mp_rvu,
    par_non_amt = tot_non_rvu * conv_factor,
    par_fac_amt = tot_fac_rvu * conv_factor,
    nonpar_non_amt = par_non_amt * 1.15,
    nonpar_fac_amt = par_fac_amt * 1.15,
    limiting_non = nonpar_non_amt * 0.95,
    limiting_fac = nonpar_fac_amt * 0.95,
  ) |> 
  dplyr::filter(par_fac_amt > 0) |> 
  gt::gt(
    rowname_col = "year", 
    groupname_col = "hcpcs",
    row_group_as_column = TRUE
    ) |> 
  gt::opt_table_font(
    font = gt::google_font(name = "Atkinson Hyperlegible")) |> 
  gt::fmt_currency(
    columns = c("par_non_amt", 
                "par_fac_amt", 
                "nonpar_non_amt", 
                "nonpar_fac_amt", 
                "limiting_non", 
                "limiting_fac")
    ) |>
  gt::cols_label(
    quarter = gt::md("**Qtr**"),
    work_rvu = gt::md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    facility_pe_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    non_fac_pe_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = gt::md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    conv_factor = gt::md("<b>CF</b>"),
    tot_fac_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i>s</i>"),
    tot_non_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i>s</i>"),
    par_non_amt = gt::md("<i>nf</i><b><small>PAR</small></b>"),
    par_fac_amt = gt::md("<i>f</i><b><small>PAR</small></b>"),
    nonpar_non_amt = gt::md("<i>nf</i><b><small>NPAR</small></b>"),
    nonpar_fac_amt = gt::md("<i>f</i><b><small>NPAR</small></b>"),
    limiting_non = gt::md("<i>nf</i><b><small>LC</small></b>"),
    limiting_fac = gt::md("<i>f</i><b><small>LC</small></b>")
  ) |> 
  gt::cols_align(align = "center") |>
  gt::tab_style(
      style = gt::cell_text(
        align = 'center',
        size = gt::px(16),
        font = gt::google_font(name = "Fira Code"),
        weight = "bold"),
      locations = gt::cells_row_groups()) |> 
  gt::tab_style(
      style = gt::cell_text(
      font = gt::google_font(name = "Fira Code")),
      locations = gt::cells_body()) |> 
  gt::tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```

# Calculate Unadjusted Allowed Amounts

```{r}
#| error: true
claims_unajusted <- claims |> 
  left_join(rvu_join, by = join_by(hcpcs, year, quarter)) |> 
  mutate(
    pe_rvu = case_when(
      pos_type == "Non-Facility" ~ non_fac_pe_rvu,
      pos_type == "Facility" ~ facility_pe_rvu,
      .default = NA_real_
      ),
    facility_pe_rvu = NULL,
    non_fac_pe_rvu = NULL,
    total_rvu = work_rvu + pe_rvu + mp_rvu,
    par_amt = total_rvu * conv_factor * units,
    nonpar_amt = par_amt * 1.15,
    limit_chrg = nonpar_amt * 0.95,
    .after = work_rvu) |> 
  filter(
    ins_class != "SELF", 
    !is.na(hcpcs),
    !is.na(work_rvu),
    !(work_rvu == 0.0 & 
        pe_rvu == 0.0 & 
        mp_rvu == 0.0),
    charges > 0)

claims_unajusted |> skimr::skim()
```


