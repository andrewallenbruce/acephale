---
title: "Claims Analysis"
description: "A guide to National Provider Identifiers and the CMS standard for NPI validation."
format:
  html:
    reference-location: block
    other-links:
      - text: Luhn Algorithm
        icon: bookmark-plus
        href: https://en.wikipedia.org/wiki/Luhn_algorithm
---

```{r setup}
#| message: false
#| warning: false
#| echo: false
#| cache: false

knitr::opts_chunk$set(
  collapse  = FALSE,
  echo      = TRUE, 
  message   = FALSE, 
  warning   = FALSE,
  error     = TRUE,
  comment   = "",
  dpi       = 300, 
  dev       = "ragg_png",
  out.width = "100%",
  fig.align = "center",
  fig.width = 10
)
options(scipen = 999)

library(tidyverse)
library(here)
library(downlit)
library(gt)
library(gtExtras)
library(rvu)
library(northstar)
library(fuimus)
library(ggstatsplot)
```

```{r}
#| message: false
#| warning: false
#| echo: false
claims_spec <- cols(
  id = col_character(),
  enc = col_integer(),
  dos = col_date(format = ""),
  dob = col_date(format = ""),
  age = col_integer(),
  dor = col_date(format = ""),
  lag = col_double(),
  ref = col_character(),
  ref_cred = col_character(),
  ref_tax = col_logical(),
  ren = col_character(),
  ren_cred = col_character(),
  ren_tax = col_logical(),
  icd = col_character(),
  ord = col_integer(),
  hcpcs = col_character(),
  desc = col_character(),
  units = col_integer(),
  mod1 = col_character(),
  mod2 = col_character(),
  pos = col_character(),
  pos_name = col_character(),
  loc = col_character(),
  ins_class = col_character(),
  ins_prim = col_character(),
  ins_sec = col_character(),
  charges = col_double(),
  allowed = col_double(),
  payments = col_double(),
  adjustments = col_double(),
  adj1 = col_character(),
  adj2 = col_character(),
  adj3 = col_character()
)

claims <- read_csv(
  here("posts/claims/data", "clean_rpt_rend.csv"), 
  col_types = claims_spec) |> 
  fuimus::remove_quiet()

claims <- claims |> 
  left_join(search_pos() |> select(-c(pos_name, pos_description)), by = join_by(pos == pos_code)) |> 
  full_join(expand_date_range(claims$dos, "dos"), by = join_by(dos))

rvus <- c(
  get_source(2021, "pprrvu"),
  get_source(2022, "pprrvu"),
  get_source(2023, "pprrvu"),
  get_source(2024, "pprrvu"))
```


# Trends & Demographics


```{r}
claims |> 
  filter(ord == 1) |> 
  sorted_bars(month_l) +
  gg_theme()
```

```{r}
ggstatsplot::ggscatterstats(
  claims |> filter(
    payments > 0,
    payments < 1000,
    charges < 1000
    ),
  x = charges,
  y = payments,
  title = "Charges vs Payments")
```


# Reimbursement


```{r}
yq <- claims |> 
  filter(!is.na(hcpcs)) |> 
  distinct(year, quarter, hcpcs)

yq <- split(yq$hcpcs, yq[c("year", "quarter")]) |> 
  purrr::compact() |> 
  cheapr::enframe_(name = "yq", value = "hcpcs") |> 
  arrange(yq)

yqi <- claims |> 
  distinct(y = year, q = quarter) |> 
  as.list()

yqs <- as.character(str_glue("{yqi$y}.{yqi$q}"))

# get_rvus <- \(rvu, yq, yqi, yqs) {
#   rvu |> 
#   filter(hcpcs %in% c(filter(yq, yq == yqs) |> pull(hcpcs_code) |> pluck(1))) |> 
#   select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
#   mutate(year = yqi$y, quarter = yqi$q, .before = 1)
# }

rvu_22.2 <- rvus$rvu22b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[1]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[1], quarter = yqi$q[1], .before = 1)

rvu_22.3 <- rvus$rvu22c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[2]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[2], quarter = yqi$q[2], .before = 1)

rvu_22.4 <- rvus$rvu22d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[3]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[3], quarter = yqi$q[3], .before = 1)

rvu_23.1 <- rvus$rvu23a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[4]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[4], quarter = yqi$q[4], .before = 1)

rvu_23.2 <- rvus$rvu23b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[5]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[5], quarter = yqi$q[5], .before = 1)

rvu_23.3 <- rvus$rvu23c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[6]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[6], quarter = yqi$q[6], .before = 1)

rvu_23.4 <- rvus$rvu23d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[7]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[7], quarter = yqi$q[7], .before = 1)

rvu_24.1 <- rvus$rvu24a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[8]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[8], quarter = yqi$q[8], .before = 1)

rvu_join <- vctrs::vec_rbind(
  rvu_22.2,
  rvu_22.3,
  rvu_22.4,
  rvu_23.1,
  rvu_23.2,
  rvu_23.3,
  rvu_24.1
  )
```



```{r}
rvu_join |> 
  dplyr::mutate(
    tot_fac_rvu = work_rvu + facility_pe_rvu + mp_rvu,
    tot_non_rvu = work_rvu + non_fac_pe_rvu + mp_rvu,
    par_non_amt = tot_non_rvu * conv_factor,
    par_fac_amt = tot_fac_rvu * conv_factor,
    nonpar_non_amt = par_non_amt * 1.15,
    nonpar_fac_amt = par_fac_amt * 1.15,
    limiting_non = nonpar_non_amt * 0.95,
    limiting_fac = nonpar_fac_amt * 0.95,
  ) |> 
  dplyr::filter(par_fac_amt > 0) |> 
  gt::gt(
    rowname_col = "year", 
    groupname_col = "hcpcs",
    row_group_as_column = TRUE
    ) |> 
  gt::opt_table_font(
    font = gt::google_font(name = "Atkinson Hyperlegible")) |> 
  gt::fmt_currency(
    columns = c("par_non_amt", 
                "par_fac_amt", 
                "nonpar_non_amt", 
                "nonpar_fac_amt", 
                "limiting_non", 
                "limiting_fac")
    ) |>
  gt::cols_label(
    quarter = gt::md("**Qtr**"),
    work_rvu = gt::md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    facility_pe_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    non_fac_pe_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = gt::md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    conv_factor = gt::md("<b>CF</b>"),
    tot_fac_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i>s</i>"),
    tot_non_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i>s</i>"),
    par_non_amt = gt::md("<i>nf</i><b><small>PAR</small></b>"),
    par_fac_amt = gt::md("<i>f</i><b><small>PAR</small></b>"),
    nonpar_non_amt = gt::md("<i>nf</i><b><small>NPAR</small></b>"),
    nonpar_fac_amt = gt::md("<i>f</i><b><small>NPAR</small></b>"),
    limiting_non = gt::md("<i>nf</i><b><small>LC</small></b>"),
    limiting_fac = gt::md("<i>f</i><b><small>LC</small></b>")
  ) |> 
  gt::cols_align(align = "center") |>
  gt::tab_style(
      style = gt::cell_text(
        align = 'center',
        size = gt::px(16),
        font = gt::google_font(name = "Fira Code"),
        weight = "bold"),
      locations = gt::cells_row_groups()) |> 
  gt::tab_style(
      style = gt::cell_text(
      font = gt::google_font(name = "Fira Code")),
      locations = gt::cells_body()) |> 
  gt::tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```

# Calculate Unadjusted Allowed Amounts

```{r}
#| error: true
claims_unajusted <- claims |> 
  left_join(rvu_join, by = join_by(hcpcs, year, quarter)) |> 
  mutate(
    pe_rvu = case_when(
      pos_type == "Non-Facility" ~ non_fac_pe_rvu,
      pos_type == "Facility" ~ facility_pe_rvu,
      .default = NA_real_
      ),
    facility_pe_rvu = NULL,
    non_fac_pe_rvu = NULL,
    total_rvu = work_rvu + pe_rvu + mp_rvu,
    par_amt = total_rvu * conv_factor * units,
    nonpar_amt = par_amt * 1.15,
    limit_chrg = nonpar_amt * 0.95,
    .after = work_rvu) |> 
  filter(
    ins_class != "SELF", 
    !is.na(hcpcs),
    !is.na(work_rvu),
    !(work_rvu == 0.0 & 
        pe_rvu == 0.0 & 
        mp_rvu == 0.0),
    charges > 0)

claims_unajusted |> skimr::skim()
```


