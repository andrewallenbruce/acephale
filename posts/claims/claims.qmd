---
title: "Claims Analysis"
format:
  html:
    reference-location: block
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

knitr::opts_chunk$set(
  dev = "ragg_png",
  dpi = 320,
  out.width = "100%",
  fig.width = 8,
  fig.asp = 0.618,
  fig.retina = 2,
  fig.align = "center",
  fig.show = "hold"
)
options(scipen = 999)

library(tidyverse)
library(here)
library(gt)
library(gtExtras)
library(ggstatsplot)
library(rbrvs)
library(northstar)
library(fuimus)

source(here("posts/claims/scripts", "load.R"))
```


# Summary

```{r}
#| label: claims_summary
#| echo: true
#| message: false
#| warning: false
claims_summary <- claims |>
    select(
    id,
    enc,
    age,
    ins_prim,
    charges,
    allowed,
    payments,
    adjustments) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, enc, age)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age)
  ) |> 
  summarise(
    # patients = n(),
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE))

claims_summary |> 
  set_names(
    c("Average Patient Age", 
      "Procedures", 
      "Visits", 
      "Charges", 
      "Allowed", 
      "Net Payment", 
      "Adjustments")) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value") |>
  gt()
```

## Ratio Analysis

Revenue Per Visit
: $RPV =$ Total Payments $\div$ Number of Patient Visits


```{r}
#| label: claims_ratio
#| echo: true
#| message: false
#| warning: false
claims_summary |>
  mutate(
    revenue_adjustments = revenue + adjustments, 
    .after = charges) |> 
  reframe(
    cpp = charges / procedures,
    alpp = allowed / procedures,
    rpp = revenue / procedures,
    adpp = adjustments / procedures,
    ppv = procedures / visits,
    cpv = charges / visits,
    alpv = allowed / visits,
    rpv = revenue / visits,
    adpv = adjustments / visits,
    cpr = charges / revenue_adjustments,
    alpr = allowed / revenue,
    adpr = adjustments / revenue,
    net_collect = revenue / (charges - adjustments),
    net_allow = revenue / allowed,
    net_adjust = revenue / adjustments,
    ) |> 
  set_names(
    c("Charge Per Procedure", 
      "Allowed Per Procedure", 
      "Payment Per Procedure", 
      "Adjustment Per Procedure", 
      "Procedures Per Visit", 
      "Charge Per Visit", 
      "Allowed Per Visit", 
      "Payment Per Visit", 
      "Adjustment Per Visit",
      "Charge To Payment + Adjustment",
      "Allowed Per Dollar", 
      "Adjustment Per Dollar",
      "Net Collection Ratio",
      "Net Allowable Ratio",
      "Net Adjustment Ratio"
      )) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value") |> 
  gt()
```

```{r}
#| label: insurance_summary
#| echo: true
#| message: false
#| warning: false
insurance_summary <- claims |>
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, enc, age, ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(id, age, ins_prim)
  ) |> 
  summarise(
    patients = n(),
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(ins_prim)
  ) |> 
  filter(!is.na(ins_prim)) |> 
  arrange(desc(procedures))

# Patients are counted once per insurance class
insurance_summary |>
  gt(rowname_col = "ins_prim") |> 
  opt_all_caps()
```


```{r}
#| label: insurance_ratios
#| echo: true
#| message: false
#| warning: false
insurance_summary |> 
  reframe(
    ins_prim,
    pts = patients,
    vpp = visits / patients,
    ppp = procedures / patients,
    rpp = revenue / patients,
    ppv = procedures / visits,
    rpv = revenue / visits,
    rpp = revenue / procedures
  ) |> 
  arrange(desc(pts)) |>
  gt(rowname_col = "ins_prim") |> 
  opt_all_caps()
```


# Reimbursement

```{r}
#| label: rvu_new
#| echo: false
#| eval: false

# mult = 0: "No adjustment. If procedure is reported on 
# the same day as another procedure, base the payment on 
# the lower of (a) the actual charge, or (b) the fee 
# schedule amount for the procedure."

# glob = ZZZ: "Code related to another service and is 
# always included in Global period of other service."

pprrvu |> 
  reframe(
    # dos, 
    yr = data.table::year(dos),
    qtr = data.table::quarter(dos),
    # mon = data.table::month(dos),
    pos,
    hcpcs, 
    description, 
    # glob_days,
    # mult_proc,
    work_rvu, 
    pe_rvu, 
    mp_rvu, 
    tot_rvu = rvu_total,
    cf = conv_factor,
    allow_unadj = tot_rvu * cf,
    nonpar_unadj = allow_unadj * 1.15,
    lim_unadj = nonpar_unadj * 0.95
    ) |> 
  gt(
    rowname_col = "year", 
    groupname_col = "hcpcs",
    row_group_as_column = TRUE
    ) |> 
  opt_table_font(
    font = google_font(name = "Atkinson Hyperlegible")) |> 
  fmt_currency(
    columns = c("par_non_amt", 
                "par_fac_amt", 
                "nonpar_non_amt", 
                "nonpar_fac_amt", 
                "limiting_non", 
                "limiting_fac")
    ) |>
  cols_label(
    quarter = md("**Qtr**"),
    work_rvu = md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    facility_pe_rvu = md("<i>f</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    non_fac_pe_rvu = md("<i>nf</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    conv_factor = md("<b>CF</b>"),
    tot_fac_rvu = md("<i>f</i><b><small>RVU</small></b><i>s</i>"),
    tot_non_rvu = md("<i>nf</i><b><small>RVU</small></b><i>s</i>"),
    par_non_amt = md("<i>nf</i><b><small>PAR</small></b>"),
    par_fac_amt = md("<i>f</i><b><small>PAR</small></b>"),
    nonpar_non_amt = md("<i>nf</i><b><small>NPAR</small></b>"),
    nonpar_fac_amt = md("<i>f</i><b><small>NPAR</small></b>"),
    limiting_non = md("<i>nf</i><b><small>LC</small></b>"),
    limiting_fac = md("<i>f</i><b><small>LC</small></b>")
  ) |> 
  cols_align(align = "center") |>
  tab_style(
      style = cell_text(
        align = 'center',
        size = px(16),
        font = google_font(name = "Fira Code"),
        weight = "bold"),
      locations = cells_row_groups()) |> 
  tab_style(
      style = cell_text(
      font = google_font(name = "Fira Code")),
      locations = cells_body()) |> 
  tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```

```{r}
#| label: rvu_old
#| echo: false
#| eval: false

torvu <- claims |> 
  filter(
  stringfish::sf_grepl(hcpcs, "^[A-CEGHJ-MP-V0-9]\\d{3}[AFMTU0-9]$")
  ) |> 
  distinct(dos, hcpcs, pos_type) |> 
  reframe(dos, hcpcs, pos = as.character(pos_type))

# readr::write_csv(torvu, file = "C:/Users/Andrew/Desktop/Repositories/rbrvs/data-raw/torvu.csv"
#   )
torvu |> 
  arrange(desc(dos))

yq <- claims |> 
  filter(!is.na(hcpcs)) |> 
  distinct(year, quarter, hcpcs, pos_type)

rvus$rvu22b_apr |>
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor)

yq <- split(yq$hcpcs, yq[c("year", "quarter")]) |> 
  purrr::compact() |> 
  cheapr::enframe_(name = "yq", value = "hcpcs") |> 
  arrange(yq)

yqi <- claims |> 
  distinct(y = year, q = quarter) |> 
  as.list()

yqs <- as.character(str_glue("{yqi$y}.{yqi$q}"))

# get_rvus <- \(rvu, yq, yqi, yqs) {
#   rvu |> 
#   filter(hcpcs %in% c(filter(yq, yq == yqs) |> pull(hcpcs_code) |> pluck(1))) |> 
#   select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
#   mutate(year = yqi$y, quarter = yqi$q, .before = 1)
# }

rvu_22.2 <- rvus$rvu22b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[1]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[1], quarter = yqi$q[1], .before = 1)

rvu_22.3 <- rvus$rvu22c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[2]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[2], quarter = yqi$q[2], .before = 1)

rvu_22.4 <- rvus$rvu22d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[3]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[3], quarter = yqi$q[3], .before = 1)

rvu_23.1 <- rvus$rvu23a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[4]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[4], quarter = yqi$q[4], .before = 1)

rvu_23.2 <- rvus$rvu23b_apr |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[5]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[5], quarter = yqi$q[5], .before = 1)

rvu_23.3 <- rvus$rvu23c_jul |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[6]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[6], quarter = yqi$q[6], .before = 1)

rvu_23.4 <- rvus$rvu23d_oct |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[7]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[7], quarter = yqi$q[7], .before = 1)

rvu_24.1 <- rvus$rvu24a_jan |> 
  filter(hcpcs %in% c(filter(yq, yq == yqs[8]) |> pull(hcpcs) |> pluck(1))) |> 
  select(hcpcs, work_rvu, facility_pe_rvu, non_fac_pe_rvu, mp_rvu, conv_factor) |> 
  mutate(year = yqi$y[8], quarter = yqi$q[8], .before = 1)

rvu_join <- vctrs::vec_rbind(
  rvu_22.2,
  rvu_22.3,
  rvu_22.4,
  rvu_23.1,
  rvu_23.2,
  rvu_23.3,
  rvu_24.1
  )

rvu_join |> 
  dplyr::mutate(
    tot_fac_rvu = work_rvu + facility_pe_rvu + mp_rvu,
    tot_non_rvu = work_rvu + non_fac_pe_rvu + mp_rvu,
    par_non_amt = tot_non_rvu * conv_factor,
    par_fac_amt = tot_fac_rvu * conv_factor,
    nonpar_non_amt = par_non_amt * 1.15,
    nonpar_fac_amt = par_fac_amt * 1.15,
    limiting_non = nonpar_non_amt * 0.95,
    limiting_fac = nonpar_fac_amt * 0.95,
  ) |> 
  dplyr::filter(par_fac_amt > 0) |> 
  gt::gt(
    rowname_col = "year", 
    groupname_col = "hcpcs",
    row_group_as_column = TRUE
    ) |> 
  gt::opt_table_font(
    font = gt::google_font(name = "Atkinson Hyperlegible")) |> 
  gt::fmt_currency(
    columns = c("par_non_amt", 
                "par_fac_amt", 
                "nonpar_non_amt", 
                "nonpar_fac_amt", 
                "limiting_non", 
                "limiting_fac")
    ) |>
  gt::cols_label(
    quarter = gt::md("**Qtr**"),
    work_rvu = gt::md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    facility_pe_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    non_fac_pe_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = gt::md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    conv_factor = gt::md("<b>CF</b>"),
    tot_fac_rvu = gt::md("<i>f</i><b><small>RVU</small></b><i>s</i>"),
    tot_non_rvu = gt::md("<i>nf</i><b><small>RVU</small></b><i>s</i>"),
    par_non_amt = gt::md("<i>nf</i><b><small>PAR</small></b>"),
    par_fac_amt = gt::md("<i>f</i><b><small>PAR</small></b>"),
    nonpar_non_amt = gt::md("<i>nf</i><b><small>NPAR</small></b>"),
    nonpar_fac_amt = gt::md("<i>f</i><b><small>NPAR</small></b>"),
    limiting_non = gt::md("<i>nf</i><b><small>LC</small></b>"),
    limiting_fac = gt::md("<i>f</i><b><small>LC</small></b>")
  ) |> 
  gt::cols_align(align = "center") |>
  gt::tab_style(
      style = gt::cell_text(
        align = 'center',
        size = gt::px(16),
        font = gt::google_font(name = "Fira Code"),
        weight = "bold"),
      locations = gt::cells_row_groups()) |> 
  gt::tab_style(
      style = gt::cell_text(
      font = gt::google_font(name = "Fira Code")),
      locations = gt::cells_body()) |> 
  gt::tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```

```{r}
#| label: rvu_summary
#| echo: true
#| message: false
#| warning: false
rvu_join <- pprrvu |> 
  reframe(
    dos,
    pos,
    hcpcs, 
    wrvu = work_rvu, 
    prvu = pe_rvu, 
    mrvu = mp_rvu, 
    trvu = rvu_total,
    cf = conv_factor,
    all_un = trvu * cf,
    npar_un = all_un * 1.15,
    lim_un = npar_un * 0.95
    )

rvu_claims <- claims |> 
  select(
    dos, 
    id, 
    enc, 
    ren,
    ins_class,
    ins_prim, 
    ord,
    hcpcs,
    units,
    pos = pos_type,
    charges, 
    allowed, 
    payments, 
    adjustments
    ) |> 
  left_join(
    rvu_join, 
    by = join_by(dos, hcpcs, pos)) |> 
  filter(
    ins_class != "SELF", 
    !is.na(hcpcs),
    !is.na(wrvu),
    # !(wrvu == 0.0 & prvu == 0.0 & mrvu == 0.0),
    charges > 0) |> 
  arrange(dos, id, enc, ord) |> 
  mutate(across(c(all_un, npar_un, lim_un), ~ . * units))
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> 
  mutate(year = data.table::year(dos), .after = dos) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    all_un = sum(all_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, ins_prim))
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> filter(units > 1)
  mutate(
    year = data.table::year(dos),
    qtr = data.table::quarter(dos),
    mon = data.table::month(dos),
    .after = dos
  ) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    allow_un = sum(allow_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, 
            qtr, 
            mon, 
            id, 
            enc, 
            ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age)
  ) |> 
  summarise(
    # patients = n(),
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE))
```


{{< pagebreak >}}

```{r}
sessioninfo::session_info()
```
