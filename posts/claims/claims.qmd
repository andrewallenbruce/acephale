---
title: "Audit Workflow"
format:
  html:
    reference-location: block
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false
knitr::opts_chunk$set(
  dev = "ragg_png",
  dpi = 320,
  out.width = "100%",
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 2,
  fig.align = "center",
  fig.show = "hold"
)
options(scipen = 999, digits = 3)

library(tidyverse)
library(here)
library(gt)
library(arkrvu)
library(northstar)
library(fuimus)
library(marquee)

source(here("posts/claims/scripts", "load.R"))

claims <- claims |> 
  fuimus::combine(adj_codes, c("adj1", "adj2", "adj3"), sep = " | ") |>
  fuimus::combine(mods, c("mod1", "mod2"), sep = " = ") |>
  fuimus::combine(refer, c("ref", "ref_cred"), sep = " <|||") |>
  fuimus::combine(render, c("ren", "ren_cred"), sep = " <|||") |>
  reframe(
    ptid = id, 
    dos, 
    ptdob = dob, 
    ptage = age, 
    refer = as_factor(str_replace(str_to_upper(refer), "PH D", "PHD")), 
    render = as_factor(str_to_upper(render)), 
    .enc = enc, 
    .ord = ord, 
    icd10 = str_replace_all(icd, ",", " -> "),
    hcpcs, 
    desc, 
    units, 
    mods = as_factor(str_to_upper(mods)), 
    pos = as_factor(pos),
    pos_type, 
    location = as_factor(str_to_title(loc)), 
    inclass = ins_class,
    inprim = ins_prim, 
    insec = ins_sec, 
    charges, 
    allowed, 
    payments, 
    adjustments, 
    adj_codes = str_replace(adj_codes, " -45", " CO-45")) |> 
  arrange(dos, .enc, .ord, ptid)
```

# Findings

Between the dates of **2022-06-14** and **2024-03-12** *(approx 637 days)*,

   - 512 Dates of Service were recorded
   - 7158 Unique Patients were seen
   - Referred by 232 different Providers
   - Seen by 66 different Rendering Providers

# EDA

```{r}
#| label: appt
#| message: false
#| warning: false
appt <- claims |> 
  select(dos, ptid, .enc) |> 
  distinct() |> 
  mutate(year = year(dos), 
         month = month(dos, label = TRUE, abbr = TRUE), 
         year_month = data.table::yearmon(dos)) |>
  summarise(
    appointments = n(),
    patients = n_distinct(ptid),
    new_patients = sum(.enc == 1),
    .by = c(year, month, year_month))

md_title <- "# {.orange Appointments}, {.dodgerblue Patients}, & {.red New Patients}"

# "For _Dates of Service_: 2022-06-14 to 2024-03-12"

ggplot(appt, aes(x = year_month)) + 
  geom_hline(yintercept = 0, color = "grey60", alpha = 1/1.25) +
  geom_line(aes(y = appointments), colour = "orange", linewidth = 1.75, alpha = 1/1.25) +
  geom_line(aes(y = patients), colour = "dodgerblue", linewidth = 1.75, alpha = 1/1.25) +
  geom_line(aes(y = new_patients), colour = "red", linewidth = 1.75, alpha = 1/1.25) +
  geom_point(aes(y = appointments), color = "#E87800", shape = 21, fill = "grey80", size = 2.5, stroke = 1.2) +
  geom_point(aes(y = patients), color = "#E87800", shape = 21, fill = "grey80", size = 2.5, stroke = 1.2) +
  geom_point(aes(y = new_patients), color = "#E87800", shape = 21, fill = "grey80", size = 2.5, stroke = 1.2) +
  geom_rug(aes(y = appointments), colour = "orange", alpha = 1/3, outside = FALSE) +
  geom_rug(aes(y = patients), colour = "dodgerblue", alpha = 1/3, outside = FALSE) +
  geom_rug(aes(y = new_patients), colour = "red", alpha = 1/3, outside = FALSE) +
  gg_theme() +
  ggtitle(md_title) +
  theme(plot.title = element_marquee(size = 9, width = 1),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid = element_blank())
```


```{r}
claims |> 
  select(dos, ptid) |> 
  distinct() |> 
  mutate(year = year(dos),
         month = month(dos, label = TRUE, abbr = TRUE),
         ymon = data.table::yearmon(dos)) |>
  group_by(year) |>
  dplyr::count(month, dos) |>
  ggplot(aes(dos, n)) + 
  geom_line(color = "grey70") +
  geom_hline(yintercept = 0, color = "grey40") +
  geom_point(color = "#E87800", shape = 21, fill = "grey80", size = 2.5, stroke = 1.2) +
  geom_rug(alpha = 1/2.5, color = "#E87800", outside = FALSE) +
  gg_theme() +
  labs(x = NULL, y = NULL) +
  facet_wrap(vars(year), 
             scales = "free_x", 
             dir = "h", 
             nrow = 3, 
             strip.position = "left",
             labeller = "label_both") +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid = element_blank())
```



```{r}
#| label: ggcal
claims |> 
  select(dos, ptid, pos_type, render) |> 
  distinct() |> 
  mutate(year = lubridate::year(dos),
         month = lubridate::month(dos, label = TRUE, abbr = TRUE),
         ymon = data.table::yearmon(dos)) |>
  dplyr::group_by(year) |>
  dplyr::count(dos) |>
  dplyr::ungroup() |> 
  ggTimeSeries::ggplot_calendar_heatmap("dos", "n",
  monthBorderLineEnd = "square",
  dayBorderColour = "white",
  monthBorderSize = 1,
  monthBorderColour = "white") +
  labs(x = NULL, y = NULL) +
  facet_wrap(~Year, ncol = 1, nrow = 3) +
  scale_fill_gradient(na.value = "grey95") +
  gg_theme() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid = element_blank())
```


```{r}
# claims
```

```{r}
library(ggdark)
library(hrbrthemes)

raw <- tibble::tribble(
    ~BEACON, ~DRAPER, ~FILMORE, ~LAKESIDE, ~MARE.VALLEY, ~NORTH, ~OAKLEY, ~ORLY, ~PIERCE, ~ROSEDALE, ~SEALY, ~SOUTHLAKE, ~WESTLAKE, ~WILDLAND, ~REGIONAL.AVG, 
    69L, 130L, 85L, 117L, 16L, 74L, 61L, 51L, 35L, 65L, 93L, 72L, 83L, 83L, 74L, 
    77L, 86L, 97L, 107L, 17L, 71L, 55L, 61L, 32L, 55L, 89L, 64L, 73L, 79L, 69L, 
    63L, 90L, 92L, 127L, 18L, 68L, 55L, 67L, 32L, 59L, 79L, 58L, 73L, 81L, 69L, 
    61L, 100L, 95L, 132L, 21L, 72L, 72L, 51L, 49L, 53L, 82L, 77L, 85L, 75L, 73L, 
    67L, 106L, 92L, 145L, 21L, 69L, 79L, 51L, 49L, 59L, 94L, 87L, 87L, 79L, 78L, 
    67L, 91L, 83L, 112L, 17L, 71L, 60L, 66L, 42L, 52L, 83L, 70L, 54L, 72L, 67L, 
    57L, 89L, 103L, 107L, 17L, 56L, 42L, 52L, 23L, 41L, 84L, 66L, 59L, 51L, 61L, 
    62L, 87L, 109L, 95L, 17L, 66L, 44L, 60L, 48L, 37L, 81L, 59L, 64L, 46L, 63L, 
    68L, 93L, 94L, 126L, 21L, 83L, 65L, 66L, 38L, 63L, 89L, 66L, 59L, 66L, 71L, 
    61L, 96L, 104L, 133L, 13L, 79L, 80L, 47L, 24L, 49L, 70L, 65L, 68L, 57L, 68L, 
    54L, 103L, 88L, 105L, 22L, 66L, 37L, 63L, 26L, 52L, 66L, 55L, 51L, 69L, 61L) |> 
    mutate(quart = c("2017 Q1", "2017 Q2", "2017 Q3", "2017 Q4", "2018 Q1", "2018 Q2", "2018 Q3", "2018 Q4", "2019 Q1", "2019 Q2", "2019 Q3"))

# separate out the regional average
df_reg <- raw |> transmute(quart, reg_avg = REGIONAL.AVG)

df <- raw |> 
    select(-REGIONAL.AVG) |> 
    pivot_longer(BEACON:WILDLAND, 
                 names_to = "dealer") |> 
    group_by(dealer) |> 
    mutate(avg_sales = mean(value)) |> 
    ungroup() |> 
    mutate(dealer = str_to_title(dealer) |> 
             str_replace(".v", " v") |> 
             as_factor() |> 
             fct_reorder(avg_sales) |> 
             fct_rev())

df_new <- df |> 
  mutate(new = dealer)

# minimal labels
quart_lab <- c("2017", "", "", "", "18", "", "", "", "19", "", "")

# plot
df_new |> 
    ggplot(aes(quart, value)) +
    geom_hline(yintercept = 0) +
    geom_path(
        data = select(df_new, -dealer),
        aes(group = new),
        color = "#ababab",
        linewidth = .5,
        alpha = .25) +
    geom_path(
        data = df_reg, 
        aes(y = reg_avg, group = 1),
        linewidth = .5, 
        color = "gold") +
    geom_path(aes(group = dealer), linewidth = 1) +
    facet_wrap(~ dealer, ncol = 5) +
    scale_x_discrete(labels = quart_lab, 
                     expand = c(0, 0)) +
    scale_y_continuous(sec.axis = dup_axis()) +
    labs(title = "Cars sold by dealership per quarter",
         caption = "@ikashnitsky",
         x = NULL, 
         y = NULL) +
    geom_text(
        data = df_new |> 
          filter(dealer == "Mare valley", quart == "2019 Q3") |> 
          transmute(dealer, quart, value = 90),
        label = "Regional average", 
        hjust = 1, 
        size = 3,
        color = "gold", 
        family = font_rc) +
    dark_theme_minimal(base_family = font_rc) +
    theme(
        plot.title = element_text(family = "Roboto Slab", size = 20),
        panel.spacing.x =  unit(1, "lines"), 
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_line(linewidth = .25, color = "#cdcdcd33"))
```



```{r}
#| label: claims_ratio
#| echo: false
#| eval: false
#| message: false
#| warning: false

## Ratio Analysis

# Revenue Per Visit
# : $RPV =$ Total Payments $\div$ Number of Patient Visits

claims_summary |>
  mutate(
    revenue_adjustments = revenue + adjustments, 
    .after = charges) |> 
  reframe(
    cpp = charges / procedures,
    alpp = allowed / procedures,
    rpp = revenue / procedures,
    adpp = adjustments / procedures,
    ppv = procedures / visits,
    cpv = charges / visits,
    alpv = allowed / visits,
    rpv = revenue / visits,
    adpv = adjustments / visits,
    cpr = charges / revenue_adjustments,
    alpr = allowed / revenue,
    adpr = adjustments / revenue,
    net_collect = revenue / (charges - adjustments),
    net_allow = revenue / allowed,
    net_adjust = revenue / adjustments,
    ) |> 
  set_names(
    c("Charge Per Procedure", 
      "Allowed Per Procedure", 
      "Payment Per Procedure", 
      "Adjustment Per Procedure", 
      "Procedures Per Visit", 
      "Charge Per Visit", 
      "Allowed Per Visit", 
      "Payment Per Visit", 
      "Adjustment Per Visit",
      "Charge To Payment + Adjustment",
      "Allowed Per Dollar", 
      "Adjustment Per Dollar",
      "Net Collection Ratio",
      "Net Allowable Ratio",
      "Net Adjustment Ratio"
      )) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value") |> 
  gt() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```

```{r}
#| label: insurance_ratios
#| echo: false
#| eval: false
#| message: false
#| warning: false
insurance_summary |> 
  reframe(
    ins_prim,
    pts = patients,
    vpp = visits / patients,
    ppp = procedures / patients,
    rpp = revenue / patients,
    ppv = procedures / visits,
    rpv = revenue / visits,
    rpp = revenue / procedures
  ) |> 
  arrange(desc(pts)) |>
  gt(rowname_col = "ins_prim") |> 
  opt_all_caps() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```


# Reimbursement

```{r}
pprrvu
```


```{r}
#| label: rvu_new
#| echo: false
#| eval: false
#| message: false
#| warning: false

# mult = 0: "No adjustment. If procedure is reported on 
# the same day as another procedure, base the payment on 
# the lower of (a) the actual charge, or (b) the fee 
# schedule amount for the procedure."

# glob = ZZZ: "Code related to another service and is 
# always included in Global period of other service."

pprrvu |> 
  reframe(
    # dos, 
    yr = data.table::year(dos),
    qtr = data.table::quarter(dos),
    # mon = data.table::month(dos),
    pos,
    hcpcs, 
    # description, 
    # glob_days,
    # mult_proc,
    work_rvu, 
    pe_rvu, 
    mp_rvu, 
    tot_rvu = rvu_total,
    cf = conv_factor,
    allow_unadj = tot_rvu * cf,
    nonpar_unadj = allow_unadj * 1.15,
    lim_unadj = nonpar_unadj * 0.95) |> 
  distinct() |> 
  arrange(hcpcs, yr, qtr) |>
  # head(n = 50) |>
  gt(rowname_col = "year", 
     groupname_col = "hcpcs",
     row_group_as_column = TRUE) |> 
  opt_table_font(
    font = google_font(name = "Roboto Condensed")) |> 
  fmt_currency(
    columns = c("nonpar_unadj", 
                "allow_unadj", 
                "lim_unadj", 
                "cf")) |>
  cols_label(
    yr = md("**YR**"),
    qtr = md("**QTR**"),
    work_rvu = md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    pe_rvu = md("<b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    cf = md("<b><small>Conversion<br>Factor</small></b>"),
    tot_rvu = md("<b><small>RVU</small></b><i><sub>total</sub></i>"),
    allow_unadj = md("<b><small>Allowed<br>Amount</small></b>"),
    nonpar_unadj = md("<b><small>Non-Participating<br>Amount</small></b>"),
    lim_unadj = md("<b><small>Limiting<br>Charge</small></b>")) |> 
  cols_align(align = "right") |>
  tab_style(
      style = cell_text(
        align = 'center',
        size = px(16),
        font = google_font(name = "Fira Code"),
        weight = "bold"),
      locations = cells_row_groups()) |> 
  tab_style(
      style = cell_text(
        align = 'right',
        font = google_font(name = "Fira Code")),
      locations = cells_body()) |> 
  tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```



```{r}
#| label: rvu_summary
#| echo: false
#| eval: false
#| message: false
#| warning: false
rvu_join <- pprrvu |> 
  reframe(
    dos,
    pos,
    hcpcs, 
    wrvu = work_rvu, 
    prvu = pe_rvu, 
    mrvu = mp_rvu, 
    trvu = rvu_total,
    cf = conv_factor,
    all_un = trvu * cf,
    npar_un = all_un * 1.15,
    lim_un = npar_un * 0.95
    )

rvu_claims <- claims |> 
  select(
    dos, 
    id, 
    enc, 
    ren,
    ins_class,
    ins_prim, 
    ord,
    hcpcs,
    units,
    pos = pos_type,
    charges, 
    allowed, 
    payments, 
    adjustments
    ) |> 
  left_join(
    rvu_join, 
    by = join_by(dos, hcpcs, pos)) |> 
  filter(
    ins_class != "SELF", 
    !is.na(hcpcs),
    !is.na(wrvu),
    # !(wrvu == 0.0 & prvu == 0.0 & mrvu == 0.0),
    charges > 0) |> 
  arrange(dos, id, enc, ord) |> 
  mutate(across(c(all_un, npar_un, lim_un), ~ . * units))

rvu_claims |>
  head(n = 10) |>
  gt() |> 
  opt_all_caps() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> 
  mutate(year = data.table::year(dos), .after = dos) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    all_un = sum(all_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, ins_prim))
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> filter(units > 1)
  mutate(
    year = data.table::year(dos),
    qtr = data.table::quarter(dos),
    mon = data.table::month(dos),
    .after = dos
  ) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    allow_un = sum(allow_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, 
            qtr, 
            mon, 
            id, 
            enc, 
            ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age)
  ) |> 
  summarise(
    # patients = n(),
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE))
```


{{< pagebreak >}}


## Session Information 

```{r}
#| echo: false
pander::pander(sessionInfo())
```
