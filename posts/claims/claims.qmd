---
title: "Post-Audit Development"
format:
  html:
    reference-location: block
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false
knitr::opts_chunk$set(
  dev = "ragg_png",
  dpi = 320,
  out.width = "100%",
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 2,
  fig.align = "center",
  fig.show = "hold"
)
options(scipen = 999, digits = 3)

library(tidyverse)
library(here)
library(gt)
library(rbrvs)
library(northstar)
library(fuimus)

source(here("posts/claims/scripts", "load.R"))

claims <- claims |> 
  fuimus::combine(adj_codes, c("adj1", "adj2", "adj3"), sep = " | ") |>
  fuimus::combine(mods, c("mod1", "mod2"), sep = " = ") |>
  fuimus::combine(refer, c("ref", "ref_cred"), sep = " <|||") |>
  fuimus::combine(render, c("ren", "ren_cred"), sep = " <|||") |>
  dplyr::reframe(
    ptid = id, 
    dos, 
    ptdob = dob, 
    ptage = age, 
    refer = as_factor(str_replace(str_to_upper(refer), "PH D", "PHD")), 
    render = as_factor(str_to_upper(render)), 
    .enc = enc, 
    .ord = ord, 
    icd10 = str_replace_all(icd, ",", " -> "),
    hcpcs, 
    desc, 
    units, 
    mods = as_factor(str_to_upper(mods)), 
    pos = as_factor(pos),
    pos_type, 
    location = as_factor(str_to_title(loc)), 
    inclass = ins_class,
    inprim = ins_prim, 
    insec = ins_sec, 
    charges, 
    allowed, 
    payments, 
    adjustments, 
    adj_codes = str_replace(adj_codes, " -45", " CO-45")) |> 
  dplyr::arrange(dos, .enc, .ord, ptid)
```

# Findings

Between the dates of **2022-06-14** and **2024-03-12** *(approx 637 days)*,

   - 512 Dates of Service were recorded
   - 7158 Unique Patients were seen
   - Referred by 232 different Providers
   - Seen by 66 different Rendering Providers

# EDA

```{r}
claims |> 
  select(dos, ptid) |> 
  distinct() |> 
  mutate(year = lubridate::year(dos),
         month = lubridate::month(dos, label = TRUE, abbr = TRUE),
         ymon = data.table::yearmon(dos)) |>
  dplyr::group_by(year) |>
  dplyr::count(dos) |>
  ggplot(aes(dos, n)) + 
  geom_line(color = "grey70") +
  geom_point(color = "#E87800") +
  geom_rug(alpha = 1/3, color = "#E87800", outside = TRUE) +
  coord_cartesian(clip = "off") +
  gg_theme()
```


```{r}
claims |> 
  select(dos, ptid, pos_type, render) |> 
  distinct() |> 
  mutate(year = lubridate::year(dos),
         month = lubridate::month(dos, label = TRUE, abbr = TRUE),
         ymon = data.table::yearmon(dos)) |>
  dplyr::group_by(year) |>
  dplyr::count(dos) |> 
  ggplot(aes(x = n, y = year, group = year)) + 
  ggridges::geom_density_ridges(scale = 0.9, rel_min_height = 0.03) +
  scale_x_continuous(limits = c(0, 160), expand = c(0, 0)) +
  scale_y_reverse(breaks = c(2022, 2023, 2024),
                  expand = c(0, 0)) +
  coord_cartesian(clip = "off") +
  gg_theme()
```

## Ratio Analysis

Revenue Per Visit
: $RPV =$ Total Payments $\div$ Number of Patient Visits


```{r}
#| label: claims_ratio
#| echo: false
#| eval: false
#| message: false
#| warning: false
claims_summary |>
  mutate(
    revenue_adjustments = revenue + adjustments, 
    .after = charges) |> 
  reframe(
    cpp = charges / procedures,
    alpp = allowed / procedures,
    rpp = revenue / procedures,
    adpp = adjustments / procedures,
    ppv = procedures / visits,
    cpv = charges / visits,
    alpv = allowed / visits,
    rpv = revenue / visits,
    adpv = adjustments / visits,
    cpr = charges / revenue_adjustments,
    alpr = allowed / revenue,
    adpr = adjustments / revenue,
    net_collect = revenue / (charges - adjustments),
    net_allow = revenue / allowed,
    net_adjust = revenue / adjustments,
    ) |> 
  set_names(
    c("Charge Per Procedure", 
      "Allowed Per Procedure", 
      "Payment Per Procedure", 
      "Adjustment Per Procedure", 
      "Procedures Per Visit", 
      "Charge Per Visit", 
      "Allowed Per Visit", 
      "Payment Per Visit", 
      "Adjustment Per Visit",
      "Charge To Payment + Adjustment",
      "Allowed Per Dollar", 
      "Adjustment Per Dollar",
      "Net Collection Ratio",
      "Net Allowable Ratio",
      "Net Adjustment Ratio"
      )) |> 
  pivot_longer(
    cols = everything(), 
    names_to = "Metric", 
    values_to = "Value") |> 
  gt() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```

```{r}
#| label: insurance_ratios
#| echo: true
#| eval: false
#| message: false
#| warning: false
insurance_summary |> 
  reframe(
    ins_prim,
    pts = patients,
    vpp = visits / patients,
    ppp = procedures / patients,
    rpp = revenue / patients,
    ppv = procedures / visits,
    rpv = revenue / visits,
    rpp = revenue / procedures
  ) |> 
  arrange(desc(pts)) |>
  gt(rowname_col = "ins_prim") |> 
  opt_all_caps() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```


# Reimbursement

```{r}
pprrvu
```


```{r}
#| label: rvu_new
#| echo: false
#| eval: false
#| message: false
#| warning: false

# mult = 0: "No adjustment. If procedure is reported on 
# the same day as another procedure, base the payment on 
# the lower of (a) the actual charge, or (b) the fee 
# schedule amount for the procedure."

# glob = ZZZ: "Code related to another service and is 
# always included in Global period of other service."

pprrvu |> 
  reframe(
    # dos, 
    yr = data.table::year(dos),
    qtr = data.table::quarter(dos),
    # mon = data.table::month(dos),
    pos,
    hcpcs, 
    # description, 
    # glob_days,
    # mult_proc,
    work_rvu, 
    pe_rvu, 
    mp_rvu, 
    tot_rvu = rvu_total,
    cf = conv_factor,
    allow_unadj = tot_rvu * cf,
    nonpar_unadj = allow_unadj * 1.15,
    lim_unadj = nonpar_unadj * 0.95) |> 
  distinct() |> 
  arrange(hcpcs, yr, qtr) |>
  # head(n = 50) |>
  gt(rowname_col = "year", 
     groupname_col = "hcpcs",
     row_group_as_column = TRUE) |> 
  opt_table_font(
    font = google_font(name = "Roboto Condensed")) |> 
  fmt_currency(
    columns = c("nonpar_unadj", 
                "allow_unadj", 
                "lim_unadj", 
                "cf")) |>
  cols_label(
    yr = md("**YR**"),
    qtr = md("**QTR**"),
    work_rvu = md("<b><small>RVU</small></b><i><sub>wk</sub></i>"),
    pe_rvu = md("<b><small>RVU</small></b><i><sub>pe</sub></i>"),
    mp_rvu = md("<b><small>RVU</small></b><i><sub>mp</sub></i>"),
    cf = md("<b><small>Conversion<br>Factor</small></b>"),
    tot_rvu = md("<b><small>RVU</small></b><i><sub>total</sub></i>"),
    allow_unadj = md("<b><small>Allowed<br>Amount</small></b>"),
    nonpar_unadj = md("<b><small>Non-Participating<br>Amount</small></b>"),
    lim_unadj = md("<b><small>Limiting<br>Charge</small></b>")) |> 
  cols_align(align = "right") |>
  tab_style(
      style = cell_text(
        align = 'center',
        size = px(16),
        font = google_font(name = "Fira Code"),
        weight = "bold"),
      locations = cells_row_groups()) |> 
  tab_style(
      style = cell_text(
        align = 'right',
        font = google_font(name = "Fira Code")),
      locations = cells_body()) |> 
  tab_options(
    quarto.disable_processing = TRUE,
    table.width = "100%"
  )
```



```{r}
#| label: rvu_summary
#| echo: false
#| eval: false
#| message: false
#| warning: false
rvu_join <- pprrvu |> 
  reframe(
    dos,
    pos,
    hcpcs, 
    wrvu = work_rvu, 
    prvu = pe_rvu, 
    mrvu = mp_rvu, 
    trvu = rvu_total,
    cf = conv_factor,
    all_un = trvu * cf,
    npar_un = all_un * 1.15,
    lim_un = npar_un * 0.95
    )

rvu_claims <- claims |> 
  select(
    dos, 
    id, 
    enc, 
    ren,
    ins_class,
    ins_prim, 
    ord,
    hcpcs,
    units,
    pos = pos_type,
    charges, 
    allowed, 
    payments, 
    adjustments
    ) |> 
  left_join(
    rvu_join, 
    by = join_by(dos, hcpcs, pos)) |> 
  filter(
    ins_class != "SELF", 
    !is.na(hcpcs),
    !is.na(wrvu),
    # !(wrvu == 0.0 & prvu == 0.0 & mrvu == 0.0),
    charges > 0) |> 
  arrange(dos, id, enc, ord) |> 
  mutate(across(c(all_un, npar_un, lim_un), ~ . * units))

rvu_claims |>
  head(n = 10) |>
  gt() |> 
  opt_all_caps() |> 
  opt_table_font(font = google_font(name = "Fira Code")) |> 
  tab_options(table.width = pct(100),
              quarto.disable_processing = TRUE)
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> 
  mutate(year = data.table::year(dos), .after = dos) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    all_un = sum(all_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, ins_prim))
```


```{r}
#| echo: false
#| eval: false
rvu_claims |> filter(units > 1)
  mutate(
    year = data.table::year(dos),
    qtr = data.table::quarter(dos),
    mon = data.table::month(dos),
    .after = dos
  ) |> 
  summarise(
    procedures = n(),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    units = sum(units, na.rm = TRUE),
    wrvu = sum(wrvu, na.rm = TRUE),
    prvu = sum(prvu, na.rm = TRUE),
    mrvu = sum(mrvu, na.rm = TRUE),
    trvu = sum(trvu, na.rm = TRUE),
    allow_un = sum(allow_un, na.rm = TRUE),
    npar_un = sum(npar_un, na.rm = TRUE),
    lim_un = sum(lim_un, na.rm = TRUE),
    .by = c(year, 
            qtr, 
            mon, 
            id, 
            enc, 
            ins_prim)) |>
  summarise(
    visits = n(),
    procedures = sum(procedures, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    payments = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE),
    .by = c(age)
  ) |> 
  summarise(
    # patients = n(),
    avg_age = mean(age, na.rm = TRUE),
    procedures = sum(procedures, na.rm = TRUE),
    visits = sum(visits, na.rm = TRUE),
    charges = sum(charges, na.rm = TRUE),
    allowed = sum(allowed, na.rm = TRUE),
    revenue = sum(payments, na.rm = TRUE),
    adjustments = sum(adjustments, na.rm = TRUE))
```


{{< pagebreak >}}


## Session Information 

```{r}
#| echo: false
pander::pander(sessionInfo())
```
