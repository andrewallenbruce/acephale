---
title: "NPPES NPI Archives"
format:
  html:
    reference-location: block
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

knitr::opts_chunk$set(
  dev = "ragg_png",
  dpi = 320,
  out.width = "100%",
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 2,
  fig.align = "center",
  fig.show = "hold"
)
options(scipen = 999, digits = 3)

library(tidyverse)
library(data.table)
library(collapse)
library(fuimus)
library(codex)
library(nppez)
library(arktax)
library(arknpi)
library(S7)

make_case <- function(x, y) {
  data.table::fcase(
    codex::not_na(x) & codex::not_na(y) & x == y, stringr::str_glue("{y}") |> as.character(), 
    codex::not_na(x) & codex::not_na(y) & x != y, stringr::str_glue("{x}, {y}") |> as.character(), 
    codex::not_na(x) & codex::na(y), stringr::str_glue("{x}") |> as.character(), 
    codex::na(x) & codex::not_na(y), stringr::str_glue("{y}") |> as.character(),
    default = NA_character_)
}

make_zip <- function(x) {
  ifelse(
    codex::not_na(x) & nchar(x) == 9, 
    stringr::str_glue("{substr(x, 1, 5)}-{substr(x, 6, 9)}") |> as.character(), 
    x)
}

make_phone <- function(x) {
  
  c1 <- "({substr(x, 1, 3)}) {substr(x, 4, 6)}-{substr(x, 7, 10)}"
  c2 <- ", ({substr(x, 13, 15)})-{substr(x, 16, 18)}-{substr(x, 19, 22)}"
  c3 <- codex::smush(c1, c2)
  
  data.table::fcase(
      codex::not_na(x) & nchar(x) == 10, stringr::str_glue(c1) |> as.character(), 
      codex::not_na(x) & nchar(x) > 10, stringr::str_glue(c3) |> as.character(),
      default = NA_character_)
}


wk_2024_01_01 <- arknpi::get_pin("wk_2024_01_01-07")

# wk_2024_01_01 <- nppez:::get_pin("wk20240101")
# wk_2024_01_22 <- nppez:::get_pin("wk20240122")
# wk_2024_02_05 <- nppez:::get_pin("wk_20240205")
```

# 2024-01-01

## Deactivated

```{r}
#| label: deactivated
wk_2024_01_01$deactivated |> 
  dplyr::count(deact_date)
```


## Base

```{r}
#| label: base
base <- wk_2024_01_01$base

# Split into individuals and organizations
base_grp <- collapse::GRP(base, ~ entity)

collapse::rsplit(base, base_grp) |> 
  purrr::map(fuimus::remove_quiet) |> 
  setNames(collapse::GRPnames(base_grp))
```

### Other Transformations to Keep in Mind

```{r}
# Credentials in Last Name
base |> 
  collapse::fsubset(codex::sf_detect(last_name, ", ")) |> 
  collapse::fsubset(codex::na(credential)) |> 
  dplyr::glimpse()
```


```{r}
base_split <- collapse::rsplit(base, base_grp) |> 
  purrr::map(fuimus::remove_quiet) |> 
  setNames(collapse::GRPnames(base_grp))

# Org NPIs that are org_subpart have org_parent names
collapse::rsplit(base_split$O, base_split$O$org_subpart)

# Individuals - Sole Proprietors
collapse::rsplit(base_split$I, base_split$I$sole_prop)
```

## Address

```{r}
#| label: address
address <- wk_2024_01_01$address

# Exact match on all address fields
exact <- address |> 
  dplyr::filter(
    mail_address == prac_address,
    mail_city == prac_city,
    mail_state == prac_state,
    mail_zip == prac_zip,
    mail_country == prac_country,
    mail_phone == prac_phone,
    mail_fax == prac_fax) |> 
  collapse::fcompute(
    npi = npi,
    entity = entity,
    purpose = "MP",
    address = prac_address,
    city = prac_city,
    state = prac_state,
    zip = make_zip(prac_zip),
    country = prac_country,
    phone = make_phone(prac_phone),
    fax = make_phone(prac_fax))

# Match on all except FAX
fax <- address |> 
  dplyr::filter(
    npi %!in% exact$npi,  
    mail_address == prac_address, 
    mail_city == prac_city,
    mail_state == prac_state,
    mail_country == prac_country,
    mail_zip == prac_zip,
    mail_phone == prac_phone) |> 
  collapse::fcompute(
    npi = npi,
    entity = entity,
    address = prac_address,
    city = prac_city,
    state = prac_state,
    zip = make_zip(prac_zip),
    country = prac_country,
    phone = make_phone(prac_phone),
    fax = make_case(mail_fax, prac_fax),
    purpose = data.table::fcase(
      codex::not_na(mail_fax) & codex::na(prac_fax), "M",
      codex::na(mail_fax) & codex::not_na(prac_fax), "P",
      default = "MP")) |> 
  collapse::fmutate(fax = make_phone(fax))

# Match on all except ZIP, PHONE, and FAX
phone <- address |> 
  dplyr::filter(npi %!in% c(exact$npi, fax$npi),      
    mail_address == prac_address,
    mail_city == prac_city,
    mail_state == prac_state,
    mail_country == prac_country) |>
  collapse::fcompute(
    npi = npi,
    entity = entity,
    purpose = data.table::fcase(
      codex::not_na(mail_phone) & codex::na(prac_phone), "M",
      codex::na(mail_phone) & codex::not_na(prac_phone), "P",
      default = "MP"),
    address = prac_address,
    city = prac_city,
    state = prac_state,
    zip = make_case(mail_zip, prac_zip),
    country = prac_country,
    phone = make_case(mail_phone, prac_phone),
    fax = make_case(mail_fax, prac_fax)) |> 
  collapse::fmutate(
    zip = make_zip(zip),
    phone = make_phone(phone),
    fax = make_phone(fax))

# Pivot remaining addresses
piv <- address |> 
  dplyr::filter(npi %!in% c(exact$npi, fax$npi, phone$npi)) |> 
  tidyr::pivot_longer(
    -c(npi, entity), 
    names_to = "type_part", 
    values_to = "value") |> 
  tidyr::separate_wider_delim(
    type_part, 
    delim = "_", 
    names = c("type", "part")) |> 
  collapse::fmutate(
    purpose = dplyr::case_when(
      type == "mail" ~ "M",
      type == "prac" ~ "P",
    .default = type),
    type = NULL) |>
  tidyr::pivot_wider(
    names_from = part, 
    values_from = value) |> 
  collapse::fmutate(
    zip = make_zip(zip),
    phone = make_phone(phone),
    fax = make_phone(fax))

address <- collapse::rowbind(exact, fax, phone, piv)

add_grp <- collapse::GRP(address, ~ entity)

collapse::rsplit(address, add_grp) |> 
  purrr::map(remove_quiet) |> 
  setNames(collapse::GRPnames(add_grp))
```

## Taxonomy

```{r}
#| label: taxonomy
taxonomy <- wk_2024_01_01$taxonomy |> 
  dplyr::select(npi, entity, dplyr::starts_with("taxonomy")) |> 
  collapse::fmutate(
    taxonomy_level = data.table::fcase(
      taxonomy_primary == "Y", "P",
      taxonomy_primary == "N", "O",
      taxonomy_primary == "X", "X"),
    taxonomy_primary = NULL)

taxonomy <- collapse::rowbind(
  taxonomy |> 
    collapse::fsubset(codex::na(taxonomy_group)) |> 
    collapse::fselect(-taxonomy_group) |> 
    dplyr::distinct(),
  taxonomy |> 
    collapse::fsubset(codex::not_na(taxonomy_group)) |> 
    collapse::fselect(-taxonomy_code, -taxonomy_level) |> 
    dplyr::distinct() |> 
    collapse::frename(taxonomy_code = taxonomy_group) |> 
    collapse::fmutate(taxonomy_level = "G")
  )

# taxonomy <- collapse::join(
#   license, 
#   taxonomy, 
#   on = c("npi"), 
#   how = "full") |> 
#   dplyr::distinct()

tax_grp <- collapse::GRP(taxonomy, ~ entity)

taxonomy <- collapse::rsplit(taxonomy, tax_grp) |> 
  purrr::map(remove_quiet) |> 
  setNames(collapse::GRPnames(tax_grp))

taxonomy
```

#### Duplicates

```{r}
taxonomy$O |> 
  dplyr::mutate(N = dplyr::n(), .by = npi) |> 
  dplyr::filter(N == 2) |> 
  dplyr::mutate(eq = taxonomy_code == collapse::flag(taxonomy_code), .by = npi) |> 
  dplyr::filter(eq)

taxonomy$I |> 
  dplyr::mutate(N = dplyr::n(), .by = npi) |> 
  dplyr::filter(N == 2) |> 
  dplyr::mutate(eq = taxonomy_code == collapse::flag(taxonomy_code), .by = npi) |> 
  dplyr::filter(eq)
```

## License

```{r}
#| label: license
license <- collapse::fselect(
  wk_2024_01_01$taxonomy, 
  npi, 
  entity, 
  license_no, 
  license_state)

license_grp <- collapse::GRP(license, ~ entity)

license <- collapse::rsplit(license, license_grp) |> 
  purrr::map(
    \(df) 
    fuimus::remove_quiet(df) |> 
      dplyr::filter(codex::not_na(license_no))) |> 
  setNames(collapse::GRPnames(license_grp))

license
```

## Identifiers

```{r}
#| label: identifier
identifier <- wk_2024_01_01$identifier |> 
  # Remove Taxonomy Codes
  collapse::fsubset(codex::sf_ndetect(otid, "^[A-Z0-9]{9}X$"))

id_grp <- collapse::GRP(identifier, ~ entity)

collapse::rsplit(identifier, id_grp) |> 
  purrr::map(remove_quiet) |> 
  setNames(collapse::GRPnames(id_grp))
```

## Other Names

```{r}
#| label: other
other <- wk_2024_01_01$other

oth_grp <- collapse::GRP(other, ~ entity)

other <- collapse::rsplit(other, oth_grp) |> 
  purrr::map(remove_quiet) |> 
  setNames(collapse::GRPnames(oth_grp))

other$I <- vctrs::vec_slice(other$I, cheapr::row_na_counts(other$I) < 6)

other
```

## Authorized Official

```{r}
#| label: ao
wk_2024_01_01$ao |> 
  collapse::fmutate(ao_phone = make_phone(ao_phone))
```

<hr>

{{< pagebreak >}}


## Session Information 

```{r}
#| echo: false
pander::pander(sessionInfo())
```
