---
title: "Tips & Tricks: R Package Creation/Maintenance"
---

```{r}
#| label: setup
#| message: false
#| warning: false
#| echo: false
#| cache: false
knitr::opts_chunk$set(
  collapse  = FALSE,
  echo      = TRUE, 
  message   = FALSE, 
  warning   = FALSE,
  error     = TRUE,
  comment   = "",
  dpi       = 300, 
  dev       = "ragg_png",
  out.width = "100%",
  fig.align = "center",
  fig.width = 8
)
options(scipen = 999, digits = 2)
```

# Initialize New Package

```{r filename="initialize_package.R"}
#| label: initialize_package
#| eval: false
initialize_package <- \(pkgname,
                        local = "C:/Users/Andrew/Desktop/Repositories/",
                        github = "https://github.com/andrewallenbruce/") {
  
  usethis::create_package(
    path          = glue::glue("{local}{pkgname}"),
    fields        = list(
    Package       = glue::glue("{pkgname}"),
    "Authors@R"   = utils::person(
    given         = c("Andrew", "Allen"), 
    family        = "Bruce", 
    email         = "andrewallenbruce@gmail.com", 
    role          = c("aut", "cre", "cph")),
    Maintainer    = "Andrew Allen Bruce <andrewallenbruce@gmail.com>",
    URL           = glue::glue("{github}{pkgname}"),
    BugReports    = glue::glue("{github}{pkgname}/issues"))
  )
}
```

## Connect to Git

> _Will ask you to commit files to Git. Say **YES**._

```{r}
#| label: use_git
#| eval: false
use_git()
```

> _Will ask you to commit files to GitHub. Say **YES**._

## Create GitHub Repository

```{r}
#| label: use_github
#| eval: false
use_github()
```

## Add License

```{r}
#| label: use_mit_license
#| eval: false
use_mit_license("Andrew Allen Bruce")
```

## Add Code of Conduct

```{r}
#| label: use_code_of_conduct
#| eval: false
use_code_of_conduct(contact = "andrewallenbruce@gmail.com")
```

## Add package-document

```{r}
#| label: use_package_doc
#| eval: false
use_package_doc()
```

## Add News/Changelog

```{r}
#| label: use_news_md
#| eval: false
use_news_md()
```

## Set Up __{roxyglobals}__

```{r}
#| label: use_roxyglobals
#| eval: false
roxyglobals::use_roxyglobals()
```

In the `DESCRIPTION` file, make sure the following two fields are filled out:

```{.yaml}
Config/roxyglobals/filename: generated-globals.R
Config/roxyglobals/unique: TRUE
```

## Set Up __{testthat}__

```{r}
#| label: use_testthat
#| eval: false
use_testthat(parallel = TRUE)
```

### Add Example Test

```{r}
#| label: use_test
#| eval: false
use_test("add-test")
```

## Create __{pkgdown}__ Site

```{r}
#| label: use_pkgdown_github_pages
#| eval: false
use_pkgdown_github_pages()
```

### Use `_pkgdown.yml`

```{.yaml filename="_pkgdown.yml"}
url: https://andrewallenbruce.github.io/pkgname/

template:
  bootstrap: 5
  light-switch: true
  bslib:
    base_font: {google: "Roboto"}
    heading_font: {google: "Roboto Slab"}
    code_font: {google: "Source Code Pro"}

navbar:
  structure:
    left:
    - intro
    - reference
    - articles
    - tutorials
    - news
    right:
    - search
    - github
    - lightswitch
  components:
    reference:
      text: Reference
      href: reference/index.html
    search:
      search: []
    lightswitch:
      icon: fa-sun
      aria-label: Light switch
      id: lightswitch
      menu:
      - text: Light
        theme: light
        icon: fa-sun
      - text: Dark
        theme: dark
        icon: fa-moon
      - text: Auto
        theme: auto
        icon: fa-adjust
    news:
      text: Changelog
      href: news/index.html
    github:
      icon: fab fa-github fa-lg
      href: https://github.com/andrewallenbruce/pkgname/
      aria-label: GitHub
```

### Reference Example

```{.yaml filename="_pkgdown.yml"}
reference:

- title: Classifications
  desc: >
    Classification systems for added context and dimensionality reduction.
  contents:
  - betos
  - ndc_lookup
  - taxonomies
  - taxonomy_codes
  - taxonomy_crosswalk

- title: Utilities
  desc: >
    Various helper functions.
  contents:
  - change
  - geomean
  - years_df
  - duration_vec
  - summary_stats
  - add_counties
```

### Optional: Vignette

```{r}
#| label: use_vignette
#| eval: false
use_vignette("getting-started", "Getting Started")
```

## Add `README.Rmd`

```{r}
#| label: use-rmd
#| eval: false
use_readme_rmd()
```

### Add Badges to README

```{r}
#| label: badges-rmd
glue::glue('
<!-- badges: start -->

![GitHub R package version](https://img.shields.io/github/r-package/v/andrewallenbruce/{PACKAGE}?style=flat-square&logo=R&label=Package&color=%23192a38)
[![Code size](https://img.shields.io/github/languages/code-size/andrewallenbruce/{PACKAGE}.svg)](https://github.com/andrewallenbruce/{PACKAGE})
[![Last commit](https://img.shields.io/github/last-commit/andrewallenbruce/{PACKAGE}.svg)](https://github.com/andrewallenbruce/{PACKAGE}/commits/master)
[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://choosealicense.com/licenses/mit/)

<!-- badges: end -->
', 
PACKAGE = "pkgname", 
sep = "\n")
```

### Build `README.Rmd`

```{r}
build_rmd("README.Rmd")
```


## Run RCMDCHK

```{r}
#| label: rcmdcheck
#| eval: false
devtools::check()
```

### Correct All Errors, Warnings, Notes

```{r}
#| label: use_tidy_description
#| eval: false
use_tidy_description()
```

<hr>

# Add a {pin}

Call:

```{r}
#| label: use-data-raw
#| eval: false
use_data_raw("dataset")
use_data_raw("pins_internal")
```

Create `pins_internal.R` file in `data-raw` directory, the copy and paste into file:

```{r filename="pins_internal.R"}
#| label: pins_internal
#| eval: false
pin_update <- function(x, name, title, description) {

  board <- pins::board_folder(
    here::here("inst/extdata/pins"))

  board |>
    pins::pin_write(
      x,
      name        = name,
      title       = title,
      description = description,
      type        = "qs")

  board |> pins::write_board_manifest()
}

delete_pins <- function(pin_names) {

  board <- pins::board_folder(
    here::here("inst/extdata/pins"))

  pins::pin_delete(board, names = pin_names)
}
```

Create a new pin:

```{r filename="dataset.R"}
#| label: data_raw
#| eval: false
source(here::here("data-raw", "pins_internal.R"))

# -- Data wrangling code here -- #

pin_update(
  object_name,
  name        = "object_name",
  title       = "Short Description",
  description = "Long Description"
)
```

Call:

```{r}
#| label: pins_r
#| eval: false
use_r("pins")
```

> Soon to be split off into it's own package

```{r filename="pins.R"}
use_standalone("andrewallenbruce/fuimus", "helpers")
```

<hr>

# Bump Package Version

> <major>.<minor>.<patch>.<dev>
> usethis::use_version("patch")

```{r}
#| label: bump-version
#| eval: false
fledge::bump_version()
fledge::finalize_version(push = TRUE)
```

# Use {covr}

```{r}
#| label: use-covr
#| eval: false
use_coverage("codecov")
use_github_action("test-coverage")
```

<hr>

# Troubleshooting

## Use {gert} to Force Commit/Push

> When RStudio won't let you commit files & push them to GitHub.

```{r}
#| label: gert
#| eval: true
fuimus::git_commit
```

# Update Personal Packages

```{r}
#| label: update_packages
#| eval: false
fuimus::update_personal_packages()
```

<hr>

<br>

## Session Information 

```{r}
#| echo: false
pander::pander(sessionInfo())
```
