Andrew Bruce <https://andrewbrucehimni.netlify.app/>

Home <https://andrewbrucehimni.netlify.app/> Projects ▾ EHR UX/UI Mockup
<https://andrewbrucehimni.netlify.app/flex_example/flexexample> Days in
AR Shiny App <https://himni.shinyapps.io/darguide/> The Art of DAR
<https://artofdar.netlify.app/> HIM & I <https://himni.info/>
About <https://andrewbrucehimni.netlify.app/about> // <https://
www.linkedin.com/in/andybruce1> // <https://twitter.com/aabrucehimni> //
<https://www.behance.net/andybruce1> // <https://
andrewbrucehimni.netlify.app/index.xml> // <https://github.com/
andrewallenbruce> ☰ <javascript:void(0);>


  R Cookbook: Healthcare Revenue Cycle

healthcare <https://andrewbrucehimni.netlify.app/#category:healthcare>
revenue-cycle <https://andrewbrucehimni.netlify.app/#category:revenue-
cycle> data-analytics <https://andrewbrucehimni.netlify.app/
#category:data-analytics> rstats <https://andrewbrucehimni.netlify.app/
#category:rstats> r-bloggers <https://andrewbrucehimni.netlify.app/
#category:r-bloggers>

Personal R code cookbook for common Revenue Cycle Management analysis.


      Author


      Affiliation

Andrew Bruce <https://andrewbruce.netlify.app/> ORCID ID <https://
orcid.org/0000-0001-5040-4327>

 


      Published

March 27, 2022


      Citation

Bruce, 2022 <#citation>


      Contents

  * Introduction <#introduction>
      o Packages <#packages>
      o Dataframe <#dataframe>
      o DAR Monthly Function <#dar-monthly-function>
      o DAR Quarterly Function <#dar-quarterly-function>
      o Line Charts <#line-charts>
      o Absolute & Relative Change <#absolute-relative-change>
          + Relative (or Percentage) Change <#relative-or-percentage-change>
          + Waterfall Charts <#waterfall-charts>
      o Accounts Receivable Metrics <#accounts-receivable-metrics>
      o Collections & Adjustments Ratios <#collections-adjustments-ratios>
      o Patient Volume Metrics <#patient-volume-metrics>
      o Work Measure Average Metrics <#work-measure-average-metrics>
  * Quarterly Analysis <#quarterly-analysis>
  * Yearly Analysis <#yearly-analysis>
  * {reactable} Drill-Down Table <#reactable-drill-down-table>
      o Monthly Dataframe <#monthly-dataframe>
      o Quarterly Dataframe <#quarterly-dataframe>
      o Monthly Calculations Code <#monthly-calculations-code>
      o Quarterly Calculations Code <#quarterly-calculations-code>
      o Drill-down Table Creation <#drill-down-table-creation>
          + Select Rows Needed <#select-rows-needed>
      o Create Drill-Down Table <#create-drill-down-table>
      o {reactable} Stacked Bar Chart <#reactable-stacked-bar-chart>
      o {compareBars} Bar Chart <#comparebars-bar-chart>
      o {highcharter} Stacked Area Chart <#highcharter-stacked-area-chart>
      o {highcharter} Stacked Bar Chart <#highcharter-stacked-bar-chart>
      o DAR Functions <#dar-functions>
          + Basic DAR Function <#basic-dar-function>
          + DAR Monthly Function <#dar-monthly-function-1>
          + DAR Quarterly Function <#dar-quarterly-function-1>
  * Visualizing Aging of Accounts <#visualizing-aging-of-accounts>
      o Sunburst Charts with {sunburstR} <#sunburst-charts-with-sunburstr>
      o Drilldown Piechart with {echarts4r} <#drilldown-piechart-with-
        echarts4r>
      o Sankey Diagram in {echarts4r} <#sankey-diagram-in-echarts4r>


  Introduction

This is intended to be a step-by-step guide for data analysis of
healthcare reimbursement data reported annually; one of a series of
posts I’ll be working on with the goal of turning the code into
functions in the interest of speeding up repetitive analyses.


    <#packages>Packages

|library <https://rdrr.io/r/base/library.html>(tidyverse <https://tidyverse.tidyverse.org/>)
library <https://rdrr.io/r/base/library.html>(tidyr <https://tidyr.tidyverse.org/>)
library <https://rdrr.io/r/base/library.html>(rmarkdown <https://github.com/rstudio/rmarkdown>)
library <https://rdrr.io/r/base/library.html>(lubridate <https://lubridate.tidyverse.org/>)
library <https://rdrr.io/r/base/library.html>(highcharter <https://jkunst.com/highcharter/>)
library <https://rdrr.io/r/base/library.html>(apexcharter <https://github.com/dreamRs/apexcharter>)
library <https://rdrr.io/r/base/library.html>(htmltools <https://github.com/rstudio/htmltools>)
library <https://rdrr.io/r/base/library.html>(reactable <https://glin.github.io/reactable/>)
library <https://rdrr.io/r/base/library.html>(reactablefmtr <https://kcuilla.github.io/reactablefmtr/>)
library <https://rdrr.io/r/base/library.html>(sunburstR <https://github.com/timelyportfolio/sunburstR>)
library <https://rdrr.io/r/base/library.html>(d3r <https://github.com/timelyportfolio/d3r>)
library <https://rdrr.io/r/base/library.html>(echarts4r <https://echarts4r.john-coene.com/>)
library <https://rdrr.io/r/base/library.html>(ggsci <https://nanx.me/ggsci/>)
|//


    <#dataframe>Dataframe

I’ll create a data frame with mock data typical of a yearly revenue
cycle report for a medical practice:

|rcmann <- data.frame <https://rdrr.io/r/base/data.frame.html>(
  date = (c <https://rdrr.io/r/base/c.html>(seq <https://rdrr.io/r/base/seq.html>(
    as.Date <https://rdrr.io/r/base/as.Date.html>("2022-01-01"),
    by = "month",
    length.out = 12
  ))
  ),
  gct = c <https://rdrr.io/r/base/c.html>(
    325982, 297731.74, 198655.14,
    186047, 123654, 131440.28,
    153991, 156975, 146878.12,
    163799.44, 151410.74, 169094.46
  ),
  earb = c <https://rdrr.io/r/base/c.html>(
    288432.52, 307871.08, 253976.56,
    183684.90, 204227.59, 203460.47,
    182771.32, 169633.64, 179347.72,
    178051.11, 162757.49, 199849.30
  ),
  adj = c <https://rdrr.io/r/base/c.html>(
    170173.76, 153744.3, 133104.13,
    84582.48, 52999.08, 66491.99,
    89434.24, 102057.43, 63494.83,
    83673.68, 88268.09, 62971.82
  ),
  pmt = c <https://rdrr.io/r/base/c.html>(
    104181.64, 124548.88, 119445.53,
    71756.18, 50112.23, 65715.41,
    85245.91, 68055.25, 73669.21,
    81422.37, 78436.27, 69030.83
  ),
  pos = c <https://rdrr.io/r/base/c.html>(
    16012.80, 16304.75, 10844.50,
    1824.07, 6240.95, 7376.63,
    9155.36, 9740.75, 8602.64,
    8599.35, 7348.15, 10461.59
  ),
  provlag = c <https://rdrr.io/r/base/c.html>(
    5.33, 8.08, 6.07,
    3.76, 2.61, 2.77,
    3.43, 3.36, 2.54,
    2.63, 3.26, 3.4
  ),
  visit = c <https://rdrr.io/r/base/c.html>(
    1568, 1473, 1031,
    553, 713, 723,
    813, 798, 787,
    851, 762, 834
  ),
  pt = c <https://rdrr.io/r/base/c.html>(
    1204, 1162, 758,
    428, 609, 578,
    636, 658, 624,
    702, 565, 670
  ),
  new = c <https://rdrr.io/r/base/c.html>(
    129, 120, 61,
    32, 123, 77,
    93, 76, 65,
    61, 61, 95
  ),
  em = c <https://rdrr.io/r/base/c.html>(
    1184, 1130, 813,
    427, 550, 572,
    599, 615, 597,
    617, 487, 662
  ),
  rvu = c <https://rdrr.io/r/base/c.html>(
    1564.5, 1474.35, 995.6,
    517.34, 739.5, 754.64,
    863.41, 835.53, 826.4,
    875.49, 814.78, 911.65
  )
)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcmann)
|//

ABCDEFGHIJ0123456789

date
<date>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
pmt
<dbl>
	
pos
<dbl>
	
provlag
<dbl>
	
visit
<dbl>
	
pt
<dbl>
	
new
<dbl>
	
2022-01-01	325982.0	288432.5	170173.76	104181.64	16012.80	5.33	1568	
1204	129	
2022-02-01	297731.7	307871.1	153744.30	124548.88	16304.75	8.08	1473	
1162	120	
2022-03-01	198655.1	253976.6	133104.13	119445.53	10844.50	6.07	1031	758	61	
2022-04-01	186047.0	183684.9	84582.48	71756.18	1824.07	3.76	553	428	32	
2022-05-01	123654.0	204227.6	52999.08	50112.23	6240.95	2.61	713	609	123	
2022-06-01	131440.3	203460.5	66491.99	65715.41	7376.63	2.77	723	578	77	
2022-07-01	153991.0	182771.3	89434.24	85245.91	9155.36	3.43	813	636	93	
2022-08-01	156975.0	169633.6	102057.43	68055.25	9740.75	3.36	798	658	76	
2022-09-01	146878.1	179347.7	63494.83	73669.21	8602.64	2.54	787	624	65	
2022-10-01	163799.4	178051.1	83673.68	81422.37	8599.35	2.63	851	702	61	

Next
12
Previous
1-10 of 12 rows | 1-10 of 12 columns


    <#dar-monthly-function>DAR Monthly Function

|# DAR Monthly Function
dar_month <- function(df,
                      gct_col = gct,
                      date_col = date,
                      earb_col = earb,
                      dart = 35) {
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(inherits <https://rdrr.io/r/base/class.html>(df, "data.frame"))
  dplyr::mutate <https://dplyr.tidyverse.org/reference/mutate.html>(df,
    ndip = lubridate::days_in_month <https://lubridate.tidyverse.org/reference/days_in_month.html>({{ date_col }}),
    nmon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = FALSE),
    month = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = FALSE),
    mon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = TRUE),
    year = lubridate::year <https://lubridate.tidyverse.org/reference/year.html>({{ date_col }}),
    nqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dqtr = paste0 <https://rdrr.io/r/base/paste.html>(lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "Q", format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")),
    ymon = as.numeric <https://rdrr.io/r/base/numeric.html>(format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%Y.%m")),
    mmon = format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%b %Y"),
    nhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dhalf = paste0 <https://rdrr.io/r/base/paste.html>(lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "H", format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")),
    adc = round <https://rdrr.io/r/base/Round.html>({{ gct_col }} / ndip, digits = 2),
    dar = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} / adc, digits = 2),
    actual = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} / {{ gct_col }}, digits = 2),
    ideal = round <https://rdrr.io/r/base/Round.html>({{ dart }} / ndip, digits = 2),
    ratio_diff = round <https://rdrr.io/r/base/Round.html>(actual - ideal, digits = 2),
    dar_diff = round <https://rdrr.io/r/base/Round.html>(dar - {{ dart }}, digits = 2),
    earb_target = round <https://rdrr.io/r/base/Round.html>(({{ gct_col }} * {{ dart }} / ndip), digits = 2),
    earb_decrease_need = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} - earb_target, digits = 2),
    earb_decrease_pct = (earb_decrease_need / {{ earb_col }}),
    earb_gct_diff = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} - {{ gct_col }}, digits = 2),
    status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < {{ dart }} ~ "Pass", TRUE ~ "Fail")
  )
}


# Call Function
rcmann_month <- dar_month(rcmann)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcmann_month)
|//

ABCDEFGHIJ0123456789

date
<date>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
pmt
<dbl>
	
pos
<dbl>
	
provlag
<dbl>
	
visit
<dbl>
	
pt
<dbl>
	
new
<dbl>
	
2022-01-01	325982.0	288432.5	170173.76	104181.64	16012.80	5.33	1568	
1204	129	
2022-02-01	297731.7	307871.1	153744.30	124548.88	16304.75	8.08	1473	
1162	120	
2022-03-01	198655.1	253976.6	133104.13	119445.53	10844.50	6.07	1031	758	61	
2022-04-01	186047.0	183684.9	84582.48	71756.18	1824.07	3.76	553	428	32	
2022-05-01	123654.0	204227.6	52999.08	50112.23	6240.95	2.61	713	609	123	
2022-06-01	131440.3	203460.5	66491.99	65715.41	7376.63	2.77	723	578	77	
2022-07-01	153991.0	182771.3	89434.24	85245.91	9155.36	3.43	813	636	93	
2022-08-01	156975.0	169633.6	102057.43	68055.25	9740.75	3.36	798	658	76	
2022-09-01	146878.1	179347.7	63494.83	73669.21	8602.64	2.54	787	624	65	
2022-10-01	163799.4	178051.1	83673.68	81422.37	8599.35	2.63	851	702	61	

Next
12
Previous
1-10 of 12 rows | 1-10 of 36 columns


    <#dar-quarterly-function>DAR Quarterly Function

|# DAR Quarterly Function
dar_qtr <- function(df,
                    nmon_col = nmon,
                    nqtr_col = nqtr,
                    dqtr_col = dqtr,
                    earb_col = earb,
                    gct_col = gct,
                    ndip_col = ndip,
                    date_col = date,
                    dart = 35) {
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(inherits <https://rdrr.io/r/base/class.html>(df, "data.frame"))

  earb_qtr <- dplyr::filter <https://dplyr.tidyverse.org/reference/filter.html>(
    df,
    {{ nmon_col }} == 3 |
      {{ nmon_col }} == 6 |
      {{ nmon_col }} == 9 |
      {{ nmon_col }} == 12
  ) |>
    dplyr::select <https://dplyr.tidyverse.org/reference/select.html>({{ nqtr_col }}, {{ earb_col }})

  gct_qtr <- dplyr::group_by <https://dplyr.tidyverse.org/reference/group_by.html>(
    df,
    {{ nqtr_col }},
    {{ dqtr_col }}
  ) |>
    dplyr::summarise <https://dplyr.tidyverse.org/reference/summarise.html>(
      gct = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>({{ gct_col }}), 2),
      ndip = sum <https://rdrr.io/r/base/sum.html>({{ ndip_col }}),
      .groups = "drop"
    )

  quarters <- merge <https://rdrr.io/r/base/merge.html>(earb_qtr, gct_qtr)

  dplyr::mutate <https://dplyr.tidyverse.org/reference/mutate.html>(quarters,
    adc = round <https://rdrr.io/r/base/Round.html>(gct / ndip, digits = 2),
    dar = round <https://rdrr.io/r/base/Round.html>(earb / adc, digits = 2),
    actual = round <https://rdrr.io/r/base/Round.html>(earb / gct, digits = 2),
    ideal = round <https://rdrr.io/r/base/Round.html>({{ dart }} / ndip, digits = 2),
    ratio_diff = round <https://rdrr.io/r/base/Round.html>(actual - ideal, digits = 2),
    dar_diff = round <https://rdrr.io/r/base/Round.html>(dar - {{ dart }}, digits = 2),
    earb_target = round <https://rdrr.io/r/base/Round.html>((gct * {{ dart }} / ndip), digits = 2),
    earb_decrease_need = round <https://rdrr.io/r/base/Round.html>(earb - earb_target, digits = 2),
    earb_decrease_pct = (earb_decrease_need / earb),
    earb_gct_diff = round <https://rdrr.io/r/base/Round.html>(earb - gct, digits = 2),
    status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < {{ dart }} ~ "Pass", TRUE ~ "Fail")
  )
}

# Call Function
rcmann_qtr <- dar_qtr(df = rcmann_month)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcmann_qtr)
|//

ABCDEFGHIJ0123456789

nqtr
<int>
	
earb
<dbl>
	
dqtr
<chr>
	
gct
<dbl>
	
ndip
<int>
	
adc
<dbl>
	
dar
<dbl>
	
actual
<dbl>
	
ideal
<dbl>
	
ratio_diff
<dbl>
	
1	253976.6	1Q22	822368.9	90	9137.43	27.80	0.31	0.39	-0.08	
2	203460.5	2Q22	441141.3	91	4847.71	41.97	0.46	0.38	0.08	
3	179347.7	3Q22	457844.1	92	4976.57	36.04	0.39	0.38	0.01	
4	199849.3	4Q22	484304.6	92	5264.18	37.96	0.41	0.38	0.03	

4 rows | 1-10 of 16 columns

Let’s take a look at a tidied-up table of our data so far:

Show code

|rcm_tb1 <- rcmann_month |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nmon) |>
  reactable <https://glin.github.io/reactable/reference/reactable.html>(
    pagination = FALSE,
    highlight = TRUE,
    bordered = TRUE,
    defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      headerClass = "col-header",
      align = "left"
    ),
    columns = list <https://rdrr.io/r/base/list.html>(
      nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = " ",
        width = 50
      ),
      month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Month"
      ),
      gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Gross Charges",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Ending AR",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Adjustments",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      pmt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Payments",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      pos = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "POS Payments",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      provlag = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Provider Lag",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      visit = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Visits",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 0
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      pt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Patients",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 0
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      new = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "New Patients",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 0
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      em = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "E/M Visits",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 0
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      rvu = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "RVUs",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          separators = TRUE,
          digits = 0
        ),
        defaultSortOrder = "desc",
        align = "left"
      ),
      html = TRUE
    ),
    compact = TRUE,
    class = "rcm-tbl"
  )

div <https://rdrr.io/pkg/htmltools/man/builder.html>(
  class = "rcm-analysis",
  rcm_tb1
)
|//

date
Gross Charges
Ending AR
Adjustments
Payments
POS Payments
Provider Lag
Visits
Patients
New Patients
E/M Visits
RVUs
ndip
Month
mon
year
nqtr
yqtr
dqtr
ymon
mmon
nhalf
yhalf
dhalf
adc
dar
actual
ideal
ratio_diff
dar_diff
earb_target
earb_decrease_need
earb_decrease_pct
earb_gct_diff
status
2022-01-01
$325,982.00
$288,432.52
$170,173.76
$104,181.64
$16,012.80
5.33
1,568
1,204
129
1,184
1,565
31
1
January
Jan
2022
1
2022.1
1Q22
2022.01
Jan 2022
1
2022.1
1H22
10515.55
27.43
0.88
1.13
-0.25
-7.57
368044.19
-79611.67
-0.276014889028463
-37549.48
Pass
2022-02-01
$297,731.74
$307,871.08
$153,744.30
$124,548.88
$16,304.75
8.08
1,473
1,162
120
1,130
1,474
28
2
February
Feb
2022
1
2022.1
1Q22
2022.02
Feb 2022
1
2022.1
1H22
10633.28
28.95
1.03
1.25
-0.22
-6.05
372164.68
-64293.6
-0.208832866016516
10139.34
Pass
2022-03-01
$198,655.14
$253,976.56
$133,104.13
$119,445.53
$10,844.50
6.07
1,031
758
61
813
996
31
3
March
Mar
2022
1
2022.1
1Q22
2022.03
Mar 2022
1
2022.1
1H22
6408.23
39.63
1.28
1.13
0.15
4.63
224288.06
29688.5
0.116894645710612
55321.42
Fail
2022-04-01
$186,047.00
$183,684.90
$84,582.48
$71,756.18
$1,824.07
3.76
553
428
32
427
517
30
4
April
Apr
2022
2
2022.2
2Q22
2022.04
Apr 2022
1
2022.1
1H22
6201.57
29.62
0.99
1.17
-0.18
-5.38
217054.83
-33369.93
-0.181669424106173
-2362.1
Pass
2022-05-01
$123,654.00
$204,227.59
$52,999.08
$50,112.23
$6,240.95
2.61
713
609
123
550
740
31
5
May
May
2022
2
2022.2
2Q22
2022.05
May 2022
1
2022.1
1H22
3988.84
51.2
1.65
1.13
0.52
16.2
139609.35
64618.24
0.316403087359548
80573.59
Fail
2022-06-01
$131,440.28
$203,460.47
$66,491.99
$65,715.41
$7,376.63
2.77
723
578
77
572
755
30
6
June
Jun
2022
2
2022.2
2Q22
2022.06
Jun 2022
1
2022.1
1H22
4381.34
46.44
1.55
1.17
0.38
11.44
153346.99
50113.48
0.246305732017625
72020.19
Fail
2022-07-01
$153,991.00
$182,771.32
$89,434.24
$85,245.91
$9,155.36
3.43
813
636
93
599
863
31
7
July
Jul
2022
3
2022.3
3Q22
2022.07
Jul 2022
2
2022.2
2H22
4967.45
36.79
1.19
1.13
0.06
1.79
173860.81
8910.51
0.0487522331184127
28780.32
Fail
2022-08-01
$156,975.00
$169,633.64
$102,057.43
$68,055.25
$9,740.75
3.36
798
658
76
615
836
31
8
August
Aug
2022
3
2022.3
3Q22
2022.08
Aug 2022
2
2022.2
2H22
5063.71
33.5
1.08
1.13
-0.05
-1.5
177229.84
-7596.2
-0.044780033017036
12658.64
Pass
2022-09-01
$146,878.12
$179,347.72
$63,494.83
$73,669.21
$8,602.64
2.54
787
624
65
597
826
30
9
September
Sep
2022
3
2022.3
3Q22
2022.09
Sep 2022
2
2022.2
2H22
4895.94
36.63
1.22
1.17
0.05
1.63
171357.81
7989.91
0.0445498275640192
32469.6
Fail
2022-10-01
$163,799.44
$178,051.11
$83,673.68
$81,422.37
$8,599.35
2.63
851
702
61
617
875
31
10
October
Oct
2022
4
2022.4
4Q22
2022.1
Oct 2022
2
2022.2
2H22
5283.85
33.7
1.09
1.13
-0.04
-1.3
184934.85
-6883.74
-0.0386615955384945
14251.67
Pass
2022-11-01
$151,410.74
$162,757.49
$88,268.09
$78,436.27
$7,348.15
3.26
762
565
61
487
815
30
11
November
Nov
2022
4
2022.4
4Q22
2022.11
Nov 2022
2
2022.2
2H22
5047.02
32.25
1.07
1.17
-0.1
-2.75
176645.86
-13888.37
-0.085331679666478
11346.75
Pass
2022-12-01
$169,094.46
$199,849.30
$62,971.82
$69,030.83
$10,461.59
3.40
834
670
95
662
912
31
12
December
Dec
2022
4
2022.4
4Q22
2022.12
Dec 2022
2
2022.2
2H22
5454.66
36.64
1.18
1.13
0.05
1.64
190913.1
8936.2
0.0447146925208144
30754.84
Fail


    <#line-charts>Line Charts

|# Dollar Amounts Pivot
rcmann_long1 <- rcmann_month |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    gct,
    earb,
    adj,
    pmt
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Gross Charges" = gct,
    "Ending AR Balance" = earb,
    "Adjustments" = adj,
    "Payments" = pmt
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  )

head <https://rdrr.io/r/utils/head.html>(rcmann_long1)
|//

|# A tibble: 6 × 3
  mon   measures           values
  <ord> <chr>               <dbl>
1 Jan   Gross Charges     325982 
2 Jan   Ending AR Balance 288433.
3 Jan   Adjustments       170174.
4 Jan   Payments          104182.
5 Feb   Gross Charges     297732.
6 Feb   Ending AR Balance 307871.|//

|# Counts Pivot
rcmann_long2 <- rcmann_month |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    visit,
    pt,
    em,
    rvu
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Encounters" = visit,
    "Patients" = pt,
    "E/M Visits" = em,
    "RVUs" = rvu
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  )

head <https://rdrr.io/r/utils/head.html>(rcmann_long2)
|//

|# A tibble: 6 × 3
  mon   measures   values
  <ord> <chr>       <dbl>
1 Jan   Encounters  1568 
2 Jan   Patients    1204 
3 Jan   E/M Visits  1184 
4 Jan   RVUs        1564.
5 Feb   Encounters  1473 
6 Feb   Patients    1162 |//

Show code

|hc_theme_aab <- hc_theme <https://jkunst.com/highcharter/reference/hc_theme.html>(
  colors = c <https://rdrr.io/r/base/c.html>(
    "#0C2340", # Navy
    "#C8102E", # Red
    "wheat",
    "salmon",
    "honeydew"
  ),
  chart = list <https://rdrr.io/r/base/list.html>(
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "16",
      color = "#000000",
      fontWeight = "normal",
      fontFamily = "Karla"
    )
  ),
  title = list <https://rdrr.io/r/base/list.html>(
    align = "left",
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "20",
      color = "#0C2340",
      fontWeight = "bold",
      fontFamily = "Karla"
    )
  ),
  subtitle = list <https://rdrr.io/r/base/list.html>(
    align = "left",
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "16",
      color = "#C8102E",
      fontWeight = "normal",
      fontFamily = "Karla"
    )
  ),
  plotOptions = list <https://rdrr.io/r/base/list.html>(
    line = list <https://rdrr.io/r/base/list.html>(
      marker = list <https://rdrr.io/r/base/list.html>(
        symbol = "circle",
        lineWidth = 2,
        radius = 5
      )
    )
  )
)

# Dollar Amounts
high1 <- hchart <https://jkunst.com/highcharter/reference/hchart.html>(
  rcmann_long1, "line",
  hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)
) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    title = list <https://rdrr.io/r/base/list.html>(text = " "),
    labels = list <https://rdrr.io/r/base/list.html>(format = "{value}"),
    crosshair = list <https://rdrr.io/r/base/list.html>(
      snap = TRUE,
      width = 2,
      zIndex = 0
    )
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    title = list <https://rdrr.io/r/base/list.html>(text = NULL),
    labels = list <https://rdrr.io/r/base/list.html>(format = "{value}"),
    crosshair = list <https://rdrr.io/r/base/list.html>(
      snap = TRUE,
      width = 2,
      zIndex = 0
    )
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 Yearly RCM Analysis: Dollar Amounts") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Monthly Charges, AR Balance, Adjustments & Payments") |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    line = list <https://rdrr.io/r/base/list.html>(
      marker = list <https://rdrr.io/r/base/list.html>(
        symbol = "circle",
        lineWidth = 3,
        radius = 5
      )
    )
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_size <https://jkunst.com/highcharter/reference/hc_size.html>(height = 500)

# Counts
high2 <- hchart <https://jkunst.com/highcharter/reference/hchart.html>(
  rcmann_long2, "line",
  hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)
) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    title = list <https://rdrr.io/r/base/list.html>(text = " "),
    labels = list <https://rdrr.io/r/base/list.html>(format = "{value}"),
    crosshair = list <https://rdrr.io/r/base/list.html>(
      snap = TRUE,
      width = 2,
      zIndex = 0
    )
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    title = list <https://rdrr.io/r/base/list.html>(text = NULL),
    labels = list <https://rdrr.io/r/base/list.html>(format = "{value}"),
    crosshair = list <https://rdrr.io/r/base/list.html>(
      snap = TRUE,
      width = 2,
      zIndex = 0
    )
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 Yearly RCM Analysis: Counts") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Monthly Encounters, Patients, E/M Visits & RVUs") |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    line = list <https://rdrr.io/r/base/list.html>(
      marker = list <https://rdrr.io/r/base/list.html>(
        symbol = "circle",
        lineWidth = 3,
        radius = 5
      )
    )
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_size <https://jkunst.com/highcharter/reference/hc_size.html>(height = 500)

high1
|//

Created with Highcharts 9.3.12021 Yearly RCM Analysis: Dollar
AmountsMonthly Charges, AR Balance, Adjustments &
PaymentsAdjustmentsEnding AR BalanceGross
ChargesPaymentsJanFebMarAprMayJunJulAugSepOctNovDec050000100000150000200000250000300000350000
Created with Highcharts 9.3.12021 Yearly RCM Analysis: CountsMonthly
Encounters, Patients, E/M Visits & RVUsE/M
VisitsEncountersPatientsRVUsJanFebMarAprMayJunJulAugSepOctNovDec2505007501000125015001750


    <#absolute-relative-change>Absolute & Relative Change

An alternative way to communicate change over time is through the use of
absolute and relative change. *Absolute change* is simply the difference
between a number’s initial amount and it’s current amount. *Relative
change* expresses the absolute change as a percentage of the number in
the initial period. When choosing between reporting relative change or
absolute change, the best practice is to provide both. There are many
good reasons for this:

  * Relative changes on /small/ numbers look BIG.
  * Relative changes on BIG numbers look /small/.
  * Absolute changes on /small/ numbers look /small/.
  * Absolute changes on BIG numbers look BIG.

Another thing to keep in mind is that, given the /same/ absolute change,
the relative change is /larger/ if the initial value is at a lower level
than if it is higher.


      <#relative-or-percentage-change>Relative (or Percentage) Change

Relative change equals the change in value divided by the absolute value
of the original value, multiplied by 100:

Percentage Change=(V2−V1)|V1|×100
Percentage Change=(V2−V1)|V1|×100

A positive change is expressed as an increase amount of the percentage
value while a negative change is expressed as a decrease amount of the
absolute value of the percentage value. For instance, a -25% change is
equivalent to stating a 25% decrease. A 200% change is equivalent to
stating a 200% increase.

I’ll code four examples, the dollar amounts:

|# Ending AR Change
rcmann <- rcmann_month |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgab = earb - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(earb)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgrel = (archgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(earb))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    archgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(archgab, 0),
    archgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(archgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgrel = round <https://rdrr.io/r/base/Round.html>(archgrel, digits = 5))

# Gross Charges Change
rcmann <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgab = gct - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(gct)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgrel = (gcchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(gct))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    gcchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(gcchgab, 0),
    gcchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(gcchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgrel = round <https://rdrr.io/r/base/Round.html>(gcchgrel, digits = 5))

# Adjustments Change
rcmann <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgab = adj - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(adj)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgrel = (adjchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(adj))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    adjchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(adjchgab, 0),
    adjchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(adjchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgrel = round <https://rdrr.io/r/base/Round.html>(adjchgrel, digits = 5))

# Payments Change
rcmann <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgab = pmt - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(pmt)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgrel = (pmtchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(pmt))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    pmtchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(pmtchgab, 0),
    pmtchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(pmtchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgrel = round <https://rdrr.io/r/base/Round.html>(pmtchgrel, digits = 5))
|//

Show code

|pct_tbl <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nmon,
    month,
    gct,
    gcchgab,
    gcchgrel,
    earb,
    archgab,
    archgrel,
    adj,
    adjchgab,
    adjchgrel,
    pmt,
    pmtchgab,
    pmtchgrel
  ) |>
  reactable <https://glin.github.io/reactable/reference/reactable.html>(
    pagination = FALSE,
    bordered = TRUE,
    highlight = TRUE,
    defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      headerClass = "col-header",
      align = "left"
    ),
    columns = list <https://rdrr.io/r/base/list.html>(
      nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = " ",
        show = TRUE,
        width = 60
      ),
      month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Month",
        show = TRUE
      ),
      gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Gross Charges",
        cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmann,
          fill_color = "red",
          fill_gradient = FALSE,
          align_bars = "left",
          text_position = "above",
          number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
            accuracy = 0.01,
            big.mark = ",",
            trim = "FALSE"
          ),
          round_edges = FALSE
        ),
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left",
        style = list <https://rdrr.io/r/base/list.html>(
          whiteSpace = "pre"
        )
      ),
      gcchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Absolute",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("--")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "black"
          } else if (value < 0) {
            "red"
          }
          list <https://rdrr.io/r/base/list.html>(
            fontWeight = 600,
            color = color
          )
        }
      ),
      gcchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Relative",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          digits = 2,
          percent = TRUE
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(
            value * 100,
            nsmall = 2
          ), "%")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("--")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "black"
          } else if (value < 0) {
            "red"
          }
          list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
        }
      ),
      earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Ending A/R",
        cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmann,
          fill_color = "red",
          fill_gradient = FALSE,
          align_bars = "left",
          text_position = "above",
          number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
            accuracy = 0.01,
            big.mark = ",",
            trim = "FALSE"
          ),
          round_edges = FALSE
        ),
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left",
        style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
      ),
      archgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Absolute",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("--")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "#ef4035"
          } else if (value < 0) {
            "black"
          }
          list <https://rdrr.io/r/base/list.html>(
            fontWeight = 600,
            color = color
          )
        }
      ),
      archgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Relative",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          digits = 2,
          percent = TRUE
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- paste0 <https://rdrr.io/r/base/paste.html>(
            format <https://rdrr.io/r/base/format.html>(
              value * 100,
              nsmall = 2
            ),
            "%"
          )
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("-")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "#ef4035"
          } else if (value < 0) {
            "black"
          }
          list <https://rdrr.io/r/base/list.html>(
            fontWeight = 600,
            color = color
          )
        }
      ),
      adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Adjustments",
        cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmann,
          fill_color = "red",
          fill_gradient = FALSE,
          align_bars = "left",
          text_position = "above",
          number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
            accuracy = 0.01,
            big.mark = ",",
            trim = "FALSE"
          ),
          round_edges = FALSE
        ),
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left",
        style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
      ),
      adjchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Absolute",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("--")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "#ef4035"
          } else if (value < 0) {
            "black"
          }
          list <https://rdrr.io/r/base/list.html>(
            fontWeight = 600,
            color = color
          )
        }
      ),
      adjchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Relative",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          digits = 2,
          percent = TRUE
        ),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(value * 100, nsmall = 2), "%")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("-")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "#ef4035"
          } else if (value < 0) {
            "black"
          }
          list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
        }
      ),
      pmt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Payments",
        cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmann,
          fill_color = "red",
          fill_gradient = FALSE,
          align_bars = "left",
          text_position = "above",
          number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
            accuracy = 0.01,
            big.mark = ",",
            trim = "FALSE"
          ),
          round_edges = FALSE
        ),
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
          prefix = "$",
          separators = TRUE,
          digits = 2
        ),
        defaultSortOrder = "desc",
        align = "left",
        style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
      ),
      pmtchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Absolute",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(prefix = "$", separators = TRUE, digits = 2),
        show = TRUE,
        align = "right",
        cell = function(value) {
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("--")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "black"
          } else if (value < 0) {
            "#ef4035"
          }
          list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
        }
      ),
      pmtchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        name = "Relative",
        format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(digits = 2, percent = TRUE),
        show = TRUE,
        align = "right",
        cell = function(value) {
          value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(value * 100, nsmall = 2), "%")
          if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
          if (value == 0) {
            paste0 <https://rdrr.io/r/base/paste.html>("-")
          } else {
            value
          }
        },
        style = function(value) {
          color <- if (value > 0) {
            "black"
          } else if (value < 0) {
            "#ef4035"
          }
          list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
        }
      ),
      html = TRUE
    ),
    compact = TRUE,
    class = "rcm-tbl"
  )

div <https://rdrr.io/pkg/htmltools/man/builder.html>(
  class = "rcm-analysis",
  div <https://rdrr.io/pkg/htmltools/man/builder.html>(
    class = "rcm-header",
    div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-title", "2021 Yearly RCM Analysis: Dollar Amounts"),
    "Month-to-Month Absolute & Relative Change"
  ),
  pct_tbl
)
|//

2021 Yearly RCM Analysis: Dollar Amounts
Month-to-Month Absolute & Relative Change
Month
Gross Charges
Absolute
Relative
Ending A/R
Absolute
Relative
Adjustments
Absolute
Relative
Payments
Absolute
Relative
1
January
325,982.00
--
0.00%
288,432.52
--
0.00%
170,173.76
--
0.00%
104,181.64
--
0.00%
2
February
297,731.74
-28,250.26
-8.666%
307,871.08
19,438.56
6.739%
153,744.30
-16,429.46
-9.655%
124,548.88
20367.24
19.55%
3
March
198,655.14
-99,076.6
-33.277%
253,976.56
-53,894.52
-17.506%
133,104.13
-20,640.17
-13.425%
119,445.53
-5103.35
-4.097%
4
April
186,047.00
-12,608.14
-6.347%
183,684.90
-70,291.66
-27.676%
84,582.48
-48,521.65
-36.454%
71,756.18
-47689.35
-39.926%
5
May
123,654.00
-62,393
-33.536%
204,227.59
20,542.69
11.184%
52,999.08
-31,583.4
-37.34%
50,112.23
-21643.95
-30.163%
6
June
131,440.28
7,786.28
6.297%
203,460.47
-767.12
-0.376%
66,491.99
13,492.91
25.459%
65,715.41
15603.18
31.136%
7
July
153,991.00
22,550.72
17.157%
182,771.32
-20,689.15
-10.169%
89,434.24
22,942.25
34.504%
85,245.91
19530.5
29.72%
8
August
156,975.00
2,984
1.938%
169,633.64
-13,137.68
-7.188%
102,057.43
12,623.19
14.114%
68,055.25
-17190.66
-20.166%
9
September
146,878.12
-10,096.88
-6.432%
179,347.72
9,714.08
5.727%
63,494.83
-38,562.6
-37.785%
73,669.21
5613.96
8.249%
10
October
163,799.44
16,921.32
11.521%
178,051.11
-1,296.61
-0.723%
83,673.68
20,178.85
31.78%
81,422.37
7753.16
10.524%
11
November
151,410.74
-12,388.7
-7.563%
162,757.49
-15,293.62
-8.589%
88,268.09
4,594.41
5.491%
78,436.27
-2986.1
-3.667%
12
December
169,094.46
17,683.72
11.679%
199,849.30
37,091.81
22.79%
62,971.82
-25,296.27
-28.658%
69,030.83
-9405.44
-11.991%


      <#waterfall-charts>Waterfall Charts

A waterfall chart is an effective way to visualize change, month-over-
month. {highcharter} has a great waterfall chart option. First I’ll need
to do some data wrangling to get the data ready for visualization:

|# Subset January
rcm_jan <- rcmann |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(mon == "Jan") |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    gct,
    earb,
    adj,
    pmt
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    gcchgab = gct,
    archgab = earb,
    adjchgab = adj,
    pmtchgab = pmt
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "figures",
    values_to = "amount"
  )

# Pivot data
rcmann_ab <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    gcchgab,
    archgab,
    adjchgab,
    pmtchgab,
  ) |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    mon != "Jan"
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "figures",
    values_to = "amount"
  )

# Bind January rows to data frame
rcmann_ab <- rbind <https://rdrr.io/r/base/cbind.html>(rcm_jan, rcmann_ab)

# Rename columns
rcmann_ab <- rcmann_ab |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(measure = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(
    rcmann_ab$figures == "gcchgab" ~ "Gross Charges",
    rcmann_ab$figures == "archgab" ~ "AR Balance",
    rcmann_ab$figures == "adjchgab" ~ "Adjustments",
    rcmann_ab$figures == "pmtchgab" ~ "Payments",
    TRUE ~ "NA"
  ))
|//

Show code

|# Ending AR Waterfall
hc_ar_water <- rcmann_ab |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    measure == "AR Balance"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("waterfall",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = amount),
    name = "AR Balance"
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 RCM Analysis: AR Balance") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Absolute Change, Month-over-Month") |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    valueDecimals = 2,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab)

# Gross Charges Waterfall
hc_gc_water <- rcmann_ab |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    measure == "Gross Charges"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("waterfall",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = amount),
    name = "Gross Charges",
    color = "#C8102E"
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 RCM Analysis: Gross Charges") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Absolute Change, Month-over-Month") |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    valueDecimals = 2,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab)

# Payments Waterfall
hc_pmt_water <- rcmann_ab |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    measure == "Payments"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("waterfall",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = amount),
    name = "Payments",
    color = "wheat"
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 RCM Analysis: Payments") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Absolute Change, Month-over-Month") |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    valueDecimals = 2,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab)

# Adjustments Waterfall
hc_adj_water <- rcmann_ab |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    measure == "Adjustments"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("waterfall",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = amount),
    name = "Adjustments",
    color = "salmon"
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 RCM Analysis: Adjustments") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "Absolute Change, Month-over-Month") |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    valueDecimals = 2,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab)

crosstalk::bscols <https://rdrr.io/pkg/crosstalk/man/bscols.html>(
  widths = NA,
  hc_ar_water,
  hc_gc_water
)
|//

Created with Highcharts 9.3.12021 RCM Analysis: AR BalanceAbsolute
Change, Month-over-
MonthJanFebMarAprMayJunJulAugSepOctNovDec050k100k150k200k250k300k350k
Created with Highcharts 9.3.12021 RCM Analysis: Gross ChargesAbsolute
Change, Month-over-
MonthJanFebMarAprMayJunJulAugSepOctNovDec050k100k150k200k250k300k350k
Created with Highcharts 9.3.12021 RCM Analysis: PaymentsAbsolute Change,
Month-over-MonthJanFebMarAprMayJunJulAugSepOctNovDec025k50k75k100k125k150k
Created with Highcharts 9.3.12021 RCM Analysis: AdjustmentsAbsolute
Change, Month-over-
MonthJanFebMarAprMayJunJulAugSepOctNovDec025k50k75k100k125k150k175k200k


    <#accounts-receivable-metrics>Accounts Receivable Metrics

*Days in Accounts Receivable* (also known as /DAR/ or /Days in AR/) is a
common financial metric belonging to a group of ratios called /
efficiency ratios/. It measures the average amount of time it takes for
a business to collect money owed from the responsible party for services
rendered and billed. As its name implies, the unit of measurement
employed by this particular metric is days, or rather the average number
of days from the moment a physician provides a service until the patient
or guarantor pays for that service.

DAR is calculated by first dividing the /total Gross Charges/ (|gct|) by the /Number of Days in the Period/ (|ndip|) that you are measuring. This gives you the /Average Daily Charge/ (|adc|). Next, divide the /Ending AR Balance/ (|earb|) for that period by the Average Daily Charge. This will give you the
Average Days in AR. An organization will usually have an internal
benchmark for Days in AR, also known as the /target Days in AR/ (|dart|), to compare against the actual Days in AR.

The *Ideal Ratio* is the ratio of the target Days in AR (|dart|) to the Number of Days in the Period (|ndip|). The *Actual Ratio* is the ratio of the ending AR balance (|earb|) to the total gross charges (|gct|). The *Ratio Difference* (|radif|) is the Ideal Ratio minus the Actual Ratio. Calculating these allows
you to calculate the *AR Target* (|artrg|), which is the ending AR balance required to achieve the target Days
in AR. The *AR Difference* (|ardif|) is the AR Target minus the AR balance. A negative difference let’s
the client know how much more needed to be removed from AR, dollar-wise,
to reach the DAR target. If Days in AR is failing, both the Ratio
Difference and the AR Difference will be negative.

*Provider Lag* (|provlag|) is the average time it takes for the supervising provider to sign an
encounter’s chart (thus, making it billable) after charges have been
added to the encounter. This delay negatively affects Days in AR so I’ll
include it for reference.

|# declare dart
dart <- 35

rcmann <- rcmann |>
  # average daily charge
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adc = round <https://rdrr.io/r/base/Round.html>(gct / ndip, digits = 2)) |>
  # days in ar
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(dar = round <https://rdrr.io/r/base/Round.html>(earb / adc, digits = 2)) |>
  # ideal ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ideal = round <https://rdrr.io/r/base/Round.html>(dart / ndip, digits = 2)) |>
  # actual ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(act = round <https://rdrr.io/r/base/Round.html>(earb / gct, digits = 2)) |>
  # ratio difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(radif = round <https://rdrr.io/r/base/Round.html>(ideal - act, digits = 2)) |>
  # ar target
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(artrg = round <https://rdrr.io/r/base/Round.html>(gct * ideal, digits = 2)) |>
  # ar difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ardif = round <https://rdrr.io/r/base/Round.html>(artrg - earb, digits = 2))

# add 'Pass' column
rcmann <- rcmann |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pass = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(
    rcmann$dar < dart ~ "Yes",
    TRUE ~ "No"
  ))
|//

Show code

|dar_rcmann <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nmon,
    month,
    pass,
    dar,
    provlag,
    gct,
    earb,
    artrg,
    ardif
  )

dar_tbl <- reactable <https://glin.github.io/reactable/reference/reactable.html>(dar_rcmann,
  pagination = FALSE,
  outlined = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    footerStyle = list <https://rdrr.io/r/base/list.html>(fontWeight = "bold"),
    headerClass = "col-header",
    footerClass = "col-footer",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = " ",
      width = 60
    ),
    month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Month"
    ),
    dar = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Days in AR",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(dar_rcmann,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    provlag = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Provider Lag",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(dar_rcmann,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pass = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Pass",
      footer = "Averages",
      cell =
        function(value) {
          class <- paste0 <https://rdrr.io/r/base/paste.html>("tag pass-", tolower <https://rdrr.io/r/base/chartr.html>(value))
          div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = class, value)
        }
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Gross Charges",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(dar_rcmann,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Ending AR",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(dar_rcmann,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    artrg = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "AR Target",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(dar_rcmann,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    ardif = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Difference",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- format <https://rdrr.io/r/base/format.html>(
          value,
          big.mark = ","
        )
        if (value > 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "#ef4035"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Days in Accounts Receivable & Related Measurements", align = "left", font_color = "black", font_size = 24)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", dar_tbl)
|//


  Days in Accounts Receivable & Related Measurements

Month
Pass
Days in AR
Provider Lag
Gross Charges
Ending AR
AR Target
Difference
1
January
Yes
27.43
5.33
325982.00
288432.52
368359.66
+79,927.14
2
February
Yes
28.95
8.08
297731.74
307871.08
372164.68
+64,293.6
3
March
No
39.63
6.07
198655.14
253976.56
224480.31
-29,496.25
4
April
Yes
29.62
3.76
186047.00
183684.90
217674.99
+33,990.09
5
May
No
51.20
2.61
123654.00
204227.59
139729.02
-64,498.57
6
June
No
46.44
2.77
131440.28
203460.47
153785.13
-49,675.34
7
July
No
36.79
3.43
153991.00
182771.32
174009.83
-8,761.49
8
August
Yes
33.50
3.36
156975.00
169633.64
177381.75
+7,748.11
9
September
No
36.63
2.54
146878.12
179347.72
171847.40
-7,500.32
10
October
Yes
33.70
2.63
163799.44
178051.11
185093.37
+7,042.26
11
November
Yes
32.25
3.26
151410.74
162757.49
177150.57
+14,393.08
12
December
No
36.64
3.40
169094.46
199849.30
191076.74
-8,772.56
​
​
Averages
36.06
3.94
183804.91
209505.31
212729.45
​


    <#collections-adjustments-ratios>Collections & Adjustments Ratios

The *Net Collections Ratio* measures how well a practice collects on
Allowable Charges. It it the total payments received divided by the
total charges, minus all write-offs and adjustments. Month-to-month,
this percentage rate may change due to differences in timing between
when charges are posted and when collections are received. For this
reason, it is most beneficial to look at net collections rates over a
3-6-9-12 month rolling average. A collection ratio of 90% is not
optimal, as this essentially means that for every dime coming in, only
nine cents is actually collected. This means that AR is increasing and,
as such, net working capital is decreasing.

The *Adjustments to Collections Ratio* is a tool used to monitor the
effect that adjustments are having on the Net Collections Rate and Days
in AR. Adjustments should be monitored by category (i.e., contractual
adjustments, bad-debt write offs, small balance write-offs, etc.) to
verify that money is not being written off unnecessarily. We don’t have
that level of detail with this dataset, so we’ll just have to calculate
and infer as best we can.

|rcmann <- rcmann |>
  # net collections ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ncr = round <https://rdrr.io/r/base/Round.html>((pmt / (gct - adj) * 100), digits = 2)) |>
  # adjustments to collections ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(atc = round <https://rdrr.io/r/base/Round.html>(adj / pmt, digits = 2))
|//

Show code

|## reactable
color <- "red"

rcmann_ncr <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nmon,
    month,
    gct,
    adj,
    pmt,
    ncr,
    atc
  )

rcm_ncr_tb <- reactable <https://glin.github.io/reactable/reference/reactable.html>(rcmann_ncr,
  pagination = FALSE,
  outlined = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    footerStyle = list <https://rdrr.io/r/base/list.html>(fontWeight = "bold"),
    headerClass = "col-header",
    footerClass = "col-footer",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = " ",
      width = 50
    ),
    month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Month",
      footer = "Averages"
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Gross Charges",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_ncr,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Adjustments",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_ncr,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pmt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Payments",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_ncr,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    ncr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Net Collections Rate",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_ncr,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    atc = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Adjustments to Collections Ratio",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_ncr,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Net Collections Rate & Adjustments to Collections Ratio", align = "left", font_color = "black", font_size = 24)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", rcm_ncr_tb)
|//


  Net Collections Rate & Adjustments to Collections Ratio

Month
Gross Charges
Adjustments
Payments
Net Collections Rate
Adjustments to Collections Ratio
1
January
325982.00
170173.76
104181.64
66.87
1.63
2
February
297731.74
153744.30
124548.88
86.50
1.23
3
March
198655.14
133104.13
119445.53
182.22
1.11
4
April
186047.00
84582.48
71756.18
70.72
1.18
5
May
123654.00
52999.08
50112.23
70.93
1.06
6
June
131440.28
66491.99
65715.41
101.18
1.01
7
July
153991.00
89434.24
85245.91
132.05
1.05
8
August
156975.00
102057.43
68055.25
123.92
1.50
9
September
146878.12
63494.83
73669.21
88.35
0.86
10
October
163799.44
83673.68
81422.37
101.62
1.03
11
November
151410.74
88268.09
78436.27
124.22
1.13
12
December
169094.46
62971.82
69030.83
65.05
0.91
​
Averages
183804.91
95916.32
82634.98
101.14
1.14
Show code

|## higcharter
hchart <https://jkunst.com/highcharter/reference/hchart.html>(rcmann_ncr,
  "area",
  hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
    x = month,
    y = gct
  ),
  name = "Gross Charges",
  yAxis = 0
) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    title = list <https://rdrr.io/r/base/list.html>(text = NULL),
    crosshair = list <https://rdrr.io/r/base/list.html>(
      snap = TRUE,
      width = 2,
      zIndex = 0
    )
  ) |>
  hc_yAxis_multiples <https://jkunst.com/highcharter/reference/hc_add_yAxis.html>(
    list <https://rdrr.io/r/base/list.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Gross Charges"), top = "0%", height = "20%"),
    list <https://rdrr.io/r/base/list.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Adjustments"), top = "25%", height = "20%", opposite = TRUE),
    list <https://rdrr.io/r/base/list.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Payments"), top = "50%", height = "20%"),
    list <https://rdrr.io/r/base/list.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Net Collections Rate"), top = "75%", height = "20%", opposite = TRUE)
  ) |>
  hc_add_series <https://jkunst.com/highcharter/reference/hc_add_series.html>(rcmann_ncr,
    "area",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
      x = month,
      y = adj
    ),
    name = "Adjustments",
    yAxis = 1
  ) |>
  hc_add_series <https://jkunst.com/highcharter/reference/hc_add_series.html>(rcmann_ncr,
    "area",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
      x = month,
      y = pmt
    ),
    name = "Payments",
    yAxis = 2
  ) |>
  hc_add_series <https://jkunst.com/highcharter/reference/hc_add_series.html>(rcmann_ncr,
    "area",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
      x = month,
      y = ncr
    ),
    name = "Net Collections Rate",
    yAxis = 3
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "2021 RCM Analysis: Gross Charges, Adjustments, Payments, Net Collections Rate") |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    valueDecimals = 2,
    table = TRUE,
    shared = TRUE,
    borderWidth = 1,
    sort = FALSE
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_size <https://jkunst.com/highcharter/reference/hc_size.html>(height = 1000)
|//

Created with Highcharts 9.3.1Gross ChargesAdjustmentsPaymentsNet
Collections Rate2021 RCM Analysis: Gross Charges, Adjustments, Payments,
Net Collections
RateJanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember0100k200k300k400k050k100k150k200k050k100k150k010020050150


    <#patient-volume-metrics>Patient Volume Metrics

This dataset has three columns explicitly concerned with patient volume: |visit| (the number of visits/encounters the provider had each month), |uniqpt| (the number of unique patients the provider saw, i.e. |visit| includes encounters/visits by the same patient in the same month) and |newpt| (the number of new patients seen by the provider).

We can calculate the number of Established Patients seen by subtracting
the number of New Patients from the number of Unique Patients. We can
calculate the number of patients seen multiple times in a month by
subtracting the number of unique patients seen from the number of visits
in a month.

Monitoring the number of encounters with the same patient in a short
time frame is important because it could mean that those additional
encounters are for diagnostics or procedures that generally pay less. A
higher than usual number of these encounters could explain a dip in
charges and payments. Note: This is not a hard and fast rule. Depending
on the provider’s specialty or a patient’s medical circumstances the
opposite could be true. This is simply a good number to be aware of.

|rcmann <- rcmann |>
  # established patients
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(est = pt - new) |>
  # patients with multiple visits
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(mult = visit - pt)
|//

Show code

|## reactable
color <- "red"

rcmann_pt <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nmon,
    month,
    visit,
    pt,
    new,
    est,
    mult
  )

rcm_pt_tb <- reactable <https://glin.github.io/reactable/reference/reactable.html>(rcmann_pt,
  pagination = FALSE,
  highlight = TRUE,
  bordered = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    footerStyle = list <https://rdrr.io/r/base/list.html>(fontWeight = "bold"),
    headerClass = "col-header",
    footerClass = "col-footer",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = " ",
      width = 50
    ),
    month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Month",
      footer = "Averages"
    ),
    visit = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Visits",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_pt,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Patients",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_pt,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    new = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "New Patients",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_pt,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    est = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Established Patients",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_pt,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    mult = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Patients Seen Multiple Times",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_pt,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Patient Volume Metrics", align = "left", font_color = "black", font_size = 24)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", rcm_pt_tb)
|//


  Patient Volume Metrics

Month
Visits
Patients
New Patients
Established Patients
Patients Seen Multiple Times
1
January
1568
1204
129
1075
364
2
February
1473
1162
120
1042
311
3
March
1031
758
61
697
273
4
April
553
428
32
396
125
5
May
713
609
123
486
104
6
June
723
578
77
501
145
7
July
813
636
93
543
177
8
August
798
658
76
582
140
9
September
787
624
65
559
163
10
October
851
702
61
641
149
11
November
762
565
61
504
197
12
December
834
670
95
575
164
​
Averages
908.83
716.17
82.75
633.42
192.67
Show code

|## highcharter
# Monthly Encounters Chart
hc_visits <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    visit,
    pt,
    new,
    est,
    mult
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("column", hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = visit), name = "Visits") |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Monthly Encounters") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Feedback") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      # color = "#4BBD85",
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        valueDecimals = 2,
        valueSuffix = "%",
        enabled = TRUE
      )
    )
  )

# Monthly Patient Types - Visit Frequency
hc_mult <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    pt,
    mult
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Seen Once" = pt,
    "More Than Once" = mult
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    "column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Single vs. Multiple Visit Patients") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      # color = "#4BBD85",
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

# Monthly Patient Types - New / Established
hc_newest <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    new,
    est,
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "New" = new,
    "Established" = est
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    "column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "New vs. Established Patients") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      # color = "#4BBD85",
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

crosstalk::bscols <https://rdrr.io/pkg/crosstalk/man/bscols.html>(
  widths = NA,
  hc_mult,
  hc_newest
)
|//

Created with Highcharts 9.3.1Single vs. Multiple Visit Patients2021
Yearly RCM Analysis364​364311​311273​273125​125104​104145​145177​177140​
140163​163149​149197​197164​1641 204​1 2041 162​1 162758​758428​428609​
609578​578636​636658​658624​624702​702565​565670​670More Than OnceSeen
OnceJanFebMarAprMayJunJulAugSepOctNovDec0250500750100012501500
Created with Highcharts 9.3.1New vs. Established Patients2021 Yearly RCM
Analysis1 075​1 0751 042​1 042697​697396​396486​486501​501543​543582​
582559​559641​641504​504575​575129​129120​12061​6132​32123​12377​7793​
9376​7665​6561​6161​6195​
95EstablishedNewJanFebMarAprMayJunJulAugSepOctNovDec020040060080010001200


    <#work-measure-average-metrics>Work Measure Average Metrics

RVUs and Gross Charges submitted are essentially measures of a
provider’s work. As such, a common group of metrics calculated involve
several averages per visit/encounter and per RVU to compare against the
average payment received per visit and RVU:

|rcmann <- rcmann |>
  # RVUs per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(rvu_vis = round <https://rdrr.io/r/base/Round.html>(rvu / visit, digits = 2)) |>
  # Gross Charge per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gct_vis = round <https://rdrr.io/r/base/Round.html>(gct / pt, digits = 2)) |>
  # Payment per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmt_vis = round <https://rdrr.io/r/base/Round.html>(pmt / pt, digits = 2)) |>
  # Gross Charge per RVU
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gct_rvu = round <https://rdrr.io/r/base/Round.html>(gct / rvu, digits = 2)) |>
  # Payment per RVU
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmt_rvu = round <https://rdrr.io/r/base/Round.html>(pmt / rvu, digits = 2))
|//

Show code

|rcmann_wrk <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nmon,
    month,
    visit,
    rvu,
    rvu_vis,
    gct,
    gct_vis,
    gct_rvu,
    pmt,
    pmt_vis,
    pmt_rvu
  )

rcm_wrk_tb <- reactable <https://glin.github.io/reactable/reference/reactable.html>(rcmann_wrk,
  pagination = FALSE,
  highlight = TRUE,
  bordered = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    footerStyle = list <https://rdrr.io/r/base/list.html>(fontWeight = "bold"),
    headerClass = "col-header",
    footerClass = "col-footer",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    nmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = " ",
      width = 50
    ),
    month = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Month",
      footer = "Averages"
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Gross Charges",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    visit = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Visits",
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    rvu = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "RVUs",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    rvu_vis = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "RVUs Per Visit",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    gct_vis = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Charges Per Visit",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pmt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Payments",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pmt_vis = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Payment Per Visit",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    gct_rvu = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Charges Per RVU",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pmt_rvu = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Payment Per RVU",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmann_wrk,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          color,
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Work Measure Average Metrics", align = "left", font_color = "black", font_size = 24)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", rcm_wrk_tb)
|//


  Work Measure Average Metrics

Month
Visits
RVUs
RVUs Per Visit
Gross Charges
Charges Per Visit
Charges Per RVU
Payments
Payment Per Visit
Payment Per RVU
1
January
1568
1,564.50
1.00
$325,982.00
$270.75
$208.36
$104,181.64
$86.53
$66.59
2
February
1473
1,474.35
1.00
$297,731.74
$256.22
$201.94
$124,548.88
$107.18
$84.48
3
March
1031
995.60
0.97
$198,655.14
$262.08
$199.53
$119,445.53
$157.58
$119.97
4
April
553
517.34
0.94
$186,047.00
$434.69
$359.62
$71,756.18
$167.65
$138.70
5
May
713
739.50
1.04
$123,654.00
$203.04
$167.21
$50,112.23
$82.29
$67.77
6
June
723
754.64
1.04
$131,440.28
$227.41
$174.18
$65,715.41
$113.69
$87.08
7
July
813
863.41
1.06
$153,991.00
$242.12
$178.35
$85,245.91
$134.03
$98.73
8
August
798
835.53
1.05
$156,975.00
$238.56
$187.87
$68,055.25
$103.43
$81.45
9
September
787
826.40
1.05
$146,878.12
$235.38
$177.73
$73,669.21
$118.06
$89.14
10
October
851
875.49
1.03
$163,799.44
$233.33
$187.09
$81,422.37
$115.99
$93.00
11
November
762
814.78
1.07
$151,410.74
$267.98
$185.83
$78,436.27
$138.83
$96.27
12
December
834
911.65
1.09
$169,094.46
$252.38
$185.48
$69,030.83
$103.03
$75.72
​
Averages
908.83
931.10
1.03
183804.91
260.33
201.10
82634.98
119.02
91.58
Show code

|## highcharter
# Average Charge vs. Payment Per Visit
hc_avgvis <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    gct_vis,
    pmt_vis
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Average Charge" = gct_vis,
    "Average Payment" = pmt_vis
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    "column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Averages Per Visit: Gross Charge vs. Net Payment") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

# Average Charge vs. Payment Per RVU
hc_avgrvu <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    mon,
    gct_rvu,
    pmt_rvu
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Average Charge" = gct_rvu,
    "Average Payment" = pmt_rvu
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mon,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("column", hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = mon, y = values, group = measures)) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Averages Per RVU: Gross Charge vs. Net Payment") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

crosstalk::bscols <https://rdrr.io/pkg/crosstalk/man/bscols.html>(
  widths = NA,
  hc_avgvis,
  hc_avgrvu
)
|//

Created with Highcharts 9.3.1Averages Per Visit: Gross Charge vs. Net
Payment2021 Yearly RCM Analysis270.75​270.75256.22​256.22262.08​
262.08434.69​434.69203.04​203.04227.41​227.41242.12​242.12238.56​
238.56235.38​235.38233.33​233.33267.98​267.98252.38​252.3886.53​
86.53107.18​107.18157.58​157.58167.65​167.6582.29​82.29113.69​
113.69134.03​134.03103.43​103.43118.06​118.06115.99​115.99138.83​
138.83103.03​103.03Average ChargeAverage
PaymentJanFebMarAprMayJunJulAugSepOctNovDec0100200300400500
Created with Highcharts 9.3.1Averages Per RVU: Gross Charge vs. Net
Payment2021 Yearly RCM Analysis208.36​208.36201.94​201.94199.53​
199.53359.62​359.62167.21​167.21174.18​174.18178.35​178.35187.87​
187.87177.73​177.73187.09​187.09185.83​185.83185.48​185.4866.59​
66.5984.48​84.48119.97​119.97138.7​138.767.77​67.7787.08​87.0898.73​
98.7381.45​81.4589.14​89.1493​9396.27​96.2775.72​75.72Average
ChargeAverage
PaymentJanFebMarAprMayJunJulAugSepOctNovDec050100150200250300350400


  Quarterly Analysis

Because of the unique characteristics of the American healthcare
reimbursement model, some clients prefer to analyze their reimbursement
data on a quarterly basis. This doesn’t mean that monthly analysis isn’t
important – it is an absolute necessity. However, the chaotic nature of
the provider-payer reimbursement process can sometimes be more easily
understood when viewed from a quarterly perspective.

I’ll use the original data frame and perform some wrangling to calculate
the summary statistics needed. The one problem is the Ending AR Balance.
Since it’s static (i.e., rather than sum the AR balances per quarter,
you would instead use the AR balance from the last month of each quarter
as the quarterly figure), I’ll need to create a subset of the original
data frame with just the AR balance from each of those months, then join
it to the summary frame:

|# Copy original data frame
rcmqtr <- rcmann

# Subset every third month's AR Balance
rcmq_earb <- rcmqtr |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    nmon == 3 |
      nmon == 6 |
      nmon == 9 |
      nmon == 12
  ) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    nqtr,
    dqtr,
    earb
  )

# Summarize quarterly data
rcmqtr <- rcmqtr |>
  group_by <https://dplyr.tidyverse.org/reference/group_by.html>(nqtr, dqtr) |>
  summarise <https://dplyr.tidyverse.org/reference/summarise.html>(
    gct = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>(gct), digits = 2),
    adj = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>(adj), digits = 2),
    pmt = sum <https://rdrr.io/r/base/sum.html>(pmt),
    pos = sum <https://rdrr.io/r/base/sum.html>(pos),
    provlag = mean <https://rdrr.io/r/base/mean.html>(provlag),
    visit = sum <https://rdrr.io/r/base/sum.html>(visit),
    pt = sum <https://rdrr.io/r/base/sum.html>(pt),
    new = sum <https://rdrr.io/r/base/sum.html>(new),
    em = sum <https://rdrr.io/r/base/sum.html>(em),
    rvu = sum <https://rdrr.io/r/base/sum.html>(rvu),
    ndip = sum <https://rdrr.io/r/base/sum.html>(ndip)
  )

# Merge the data frames
rcmqtr <- merge <https://rdrr.io/r/base/merge.html>(rcmq_earb, rcmqtr, by = "nqtr")

rcmqtr <- rcmqtr |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    dqtr = dqtr.x
  ) |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(!(dqtr.y))

rcmqtr
|//

|  nqtr dqtr     earb      gct      adj      pmt      pos  provlag visit   pt new   em     rvu ndip
1    1 1Q22 253976.6 822368.9 457022.2 348176.0 43162.05 6.493333  4072 3124 310 3127 4034.45   90
2    2 2Q22 203460.5 441141.3 204073.5 187583.8 15441.65 3.046667  1989 1615 232 1549 2011.48   91
3    3 3Q22 179347.7 457844.1 254986.5 226970.4 27498.75 3.110000  2398 1918 234 1811 2525.34   92
4    4 4Q22 199849.3 484304.6 234913.6 228889.5 26409.09 3.096667  2447 1937 217 1766 2601.92   92|//

Now I can take all of the code I’ve written for the monthly calculations
and apply it to my quarterly data frame:

|# declare dart
dart <- 35

# calculate adc and dar
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adc = gct / ndip) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(dar = earb / adc)

# calculate ideal and actual ratios
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ideal = dart / ndip) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(act = earb / gct)

# calculate ar target and difference
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(artrg = gct * ideal) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ardif = artrg - earb)

# Add 'Pass' Column
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pass = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(
    rcmqtr$dar < dart ~ "Yes",
    TRUE ~ "No"
  ))

# Net Collections Ratio / Adjustments to Collections Ratio
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ncr = pmt / (gct - adj)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(atc = adj / pmt)

# Ending AR Change
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgab = earb - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(earb)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgrel = (archgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(earb))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    archgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(archgab, 0),
    archgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(archgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(archgrel = round <https://rdrr.io/r/base/Round.html>(archgrel, digits = 5))

# Gross Charges Change
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgab = gct - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(gct)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgrel = (gcchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(gct))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    gcchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(gcchgab, 0),
    gcchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(gcchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gcchgrel = round <https://rdrr.io/r/base/Round.html>(gcchgrel, digits = 5))

# Adjustments Change
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgab = adj - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(adj)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgrel = (adjchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(adj))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    adjchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(adjchgab, 0),
    adjchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(adjchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adjchgrel = round <https://rdrr.io/r/base/Round.html>(adjchgrel, digits = 5))

# Payments Change
rcmqtr <- rcmqtr |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgab = pmt - lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(pmt)) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgrel = (pmtchgab / lag <https://dplyr.tidyverse.org/reference/lead-lag.html>(pmt))) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    pmtchgab = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(pmtchgab, 0),
    pmtchgrel = coalesce <https://dplyr.tidyverse.org/reference/coalesce.html>(pmtchgrel, 0)
  ) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmtchgrel = round <https://rdrr.io/r/base/Round.html>(pmtchgrel, digits = 5))

rcmqtr <- rcmqtr |>
  # established patients
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(est = pt - new) |>
  # patients with multiple visits
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(mult = visit - pt)

rcmqtr <- rcmqtr |>
  # RVUs per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(rvu_vis = round <https://rdrr.io/r/base/Round.html>(rvu / visit, digits = 2)) |>
  # Gross Charge per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gct_vis = round <https://rdrr.io/r/base/Round.html>(gct / pt, digits = 2)) |>
  # Payment per Visit
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmt_vis = round <https://rdrr.io/r/base/Round.html>(pmt / pt, digits = 2)) |>
  # Gross Charge per RVU
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(gct_rvu = round <https://rdrr.io/r/base/Round.html>(gct / rvu, digits = 2)) |>
  # Payment per RVU
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(pmt_rvu = round <https://rdrr.io/r/base/Round.html>(pmt / rvu, digits = 2))
|//

Show code

|## reactable
# absolute / relative change
rcmqtr_chng <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    gct,
    gcchgab,
    gcchgrel,
    earb,
    archgab,
    archgrel,
    adj,
    adjchgab,
    adjchgrel,
    pmt,
    pmtchgab,
    pmtchgrel
  )

Qpct_tbl <- reactable <https://glin.github.io/reactable/reference/reactable.html>(rcmqtr_chng,
  pagination = FALSE,
  bordered = TRUE,
  highlight = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    headerClass = "col-header",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    nqtr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = " ",
      show = TRUE
    ),
    dqtr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Quarter",
      show = TRUE
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Gross Charges",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmqtr_chng,
        fill_color = "red",
        fill_gradient = FALSE,
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        ),
        round_edges = FALSE
      ),
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = list <https://rdrr.io/r/base/list.html>(
        whiteSpace = "pre"
      )
    ),
    gcchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Absolute",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("--")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "red"
        }
        list <https://rdrr.io/r/base/list.html>(
          fontWeight = 600,
          color = color
        )
      }
    ),
    gcchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Relative",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2,
        percent = TRUE
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(
          value * 100,
          nsmall = 2
        ), "%")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("--")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "red"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Ending A/R",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmqtr_chng,
        fill_color = "red",
        fill_gradient = FALSE,
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        ),
        round_edges = FALSE
      ),
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
    ),
    archgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Absolute",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("--")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "#ef4035"
        } else if (value < 0) {
          "black"
        }
        list <https://rdrr.io/r/base/list.html>(
          fontWeight = 600,
          color = color
        )
      }
    ),
    archgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Relative",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2,
        percent = TRUE
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- paste0 <https://rdrr.io/r/base/paste.html>(
          format <https://rdrr.io/r/base/format.html>(
            value * 100,
            nsmall = 2
          ),
          "%"
        )
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("-")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "#ef4035"
        } else if (value < 0) {
          "black"
        }
        list <https://rdrr.io/r/base/list.html>(
          fontWeight = 600,
          color = color
        )
      }
    ),
    adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Adjustments",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmqtr_chng,
        fill_color = "red",
        fill_gradient = FALSE,
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        ),
        round_edges = FALSE
      ),
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
    ),
    adjchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Absolute",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- format <https://rdrr.io/r/base/format.html>(value, big.mark = ",")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("--")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "#ef4035"
        } else if (value < 0) {
          "black"
        }
        list <https://rdrr.io/r/base/list.html>(
          fontWeight = 600,
          color = color
        )
      }
    ),
    adjchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Relative",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2,
        percent = TRUE
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(value * 100, nsmall = 2), "%")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("-")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "#ef4035"
        } else if (value < 0) {
          "black"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    pmt = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Payments",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcmqtr_chng,
        fill_color = "red",
        fill_gradient = FALSE,
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        ),
        round_edges = FALSE
      ),
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        prefix = "$",
        separators = TRUE,
        digits = 2
      ),
      defaultSortOrder = "desc",
      align = "left",
      style = list <https://rdrr.io/r/base/list.html>(whiteSpace = "pre")
    ),
    pmtchgab = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Absolute",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(prefix = "$", separators = TRUE, digits = 2),
      show = TRUE,
      align = "right",
      cell = function(value) {
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("--")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "#ef4035"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    pmtchgrel = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Relative",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(digits = 2, percent = TRUE),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- paste0 <https://rdrr.io/r/base/paste.html>(format <https://rdrr.io/r/base/format.html>(value * 100, nsmall = 2), "%")
        if (value > 0) paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        if (value == 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("-")
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "#ef4035"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Quarterly RCM Analysis", align = "left", font_color = "black", font_size = 24) |>
  add_subtitle <https://kcuilla.github.io/reactablefmtr/reference/add_subtitle.html>("Absolute / Relative Change & Days in Accounts Receivable", align = "left", font_color = "black", font_size = 18, font_weight = "normal")

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", Qpct_tbl)
|//


  Quarterly RCM Analysis


    Absolute / Relative Change & Days in Accounts Receivable

Quarter
Gross Charges
Absolute
Relative
Ending A/R
Absolute
Relative
Adjustments
Absolute
Relative
Payments
Absolute
Relative
1Q22
822,368.88
--
0.00%
253,976.56
--
0.00%
457,022.19
--
0.00%
348,176.05
--
0.00%
2Q22
441,141.28
-381,227.6
-46.357%
203,460.47
-50,516.09
-19.89%
204,073.55
-252,948.6
-55.347%
187,583.82
-160592.2
-46.124%
3Q22
457,844.12
16,702.84
3.786%
179,347.72
-24,112.75
-11.851%
254,986.50
50,912.95
24.948%
226,970.37
39386.55
20.997%
4Q22
484,304.64
26,460.52
5.779%
199,849.30
20,501.58
11.431%
234,913.59
-20,072.91
-7.872%
228,889.47
1919.1
0.846%
Show code

|# Days in AR reactable
rcmqtr_dar <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    pass,
    dar,
    gct,
    earb,
    artrg,
    ardif
  )

Qdar_tbl <- reactable <https://glin.github.io/reactable/reference/reactable.html>(rcmqtr_dar,
  pagination = FALSE,
  outlined = TRUE,
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    footerStyle = list <https://rdrr.io/r/base/list.html>(fontWeight = "bold"),
    headerClass = "col-header",
    footerClass = "col-footer",
    align = "left"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    dqtr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Quarter"
    ),
    dar = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Days in AR",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmqtr_dar,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    pass = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Pass",
      footer = "Averages",
      cell =
        function(value) {
          class <- paste0 <https://rdrr.io/r/base/paste.html>("tag pass-", tolower <https://rdrr.io/r/base/chartr.html>(value))
          div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = class, value)
        }
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Gross Charges",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmqtr_dar,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Ending AR Balance",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmqtr_dar,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    artrg = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Ending AR Target",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      style = color_scales <https://kcuilla.github.io/reactablefmtr/reference/color_scales.html>(rcmqtr_dar,
        colors = pal_material <https://nanx.me/ggsci/reference/pal_material.html>(
          "red",
          n = 6,
          alpha = 1.0,
          reverse = FALSE
        )(6)
      )
    ),
    ardif = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Difference",
      format = colFormat <https://glin.github.io/reactable/reference/colFormat.html>(
        digits = 2
      ),
      show = TRUE,
      align = "right",
      cell = function(value) {
        value <- format <https://rdrr.io/r/base/format.html>(
          value,
          big.mark = ","
        )
        if (value > 0) {
          paste0 <https://rdrr.io/r/base/paste.html>("+", value)
        } else {
          value
        }
      },
      style = function(value) {
        color <- if (value > 0) {
          "black"
        } else if (value < 0) {
          "#ef4035"
        }
        list <https://rdrr.io/r/base/list.html>(fontWeight = 600, color = color)
      }
    ),
    html = TRUE
  ),
  compact = TRUE,
  class = "rcm-tbl"
)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", Qdar_tbl)
|//

Quarter
Pass
Days in AR
Gross Charges
Ending AR Balance
Ending AR Target
Difference
1Q22
Yes
27.80
822368.88
253976.56
319810.12
+65,833.56
2Q22
No
41.97
441141.28
203460.47
169669.72
-33,790.75
3Q22
No
36.04
457844.12
179347.72
174179.83
-5,167.892
4Q22
No
37.96
484304.64
199849.30
184246.33
-15,602.97
​
Averages
35.94
551414.73
209158.51
211976.50
​
Show code

|# Quarterly Encounters Chart
hc_visitsQ <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    visit
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = dqtr, y = visit),
    name = "Visits"
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Quarterly Encounters") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        valueDecimals = 2,
        valueSuffix = "%",
        enabled = TRUE
      )
    )
  )

# Quarterly Patient Types - Visit Frequency
hc_multQ <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    pt,
    mult
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Seen Once" = pt,
    "More Than Once" = mult
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !dqtr,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("column", hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = dqtr, y = values, group = measures)) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Single vs. Multiple Visit Patients") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

# Quarterly Patient Types - New / Established
hc_newestQ <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    new,
    est,
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "New" = new,
    "Established" = est
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !dqtr,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    "column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = dqtr, y = values, group = measures)
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "New vs. Established Patients") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

# Average Charge vs. Payment Per Visit
hc_avgvisQ <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    gct_vis,
    pmt_vis
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Average Charge" = gct_vis,
    "Average Payment" = pmt_vis
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !dqtr,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>("column", hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = dqtr, y = values, group = measures)) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Averages Per Visit: Gross Charge vs. Net Payment") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

# Average Charge vs. Payment Per RVU
hc_avgrvuQ <- rcmqtr |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(nqtr) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    dqtr,
    gct_rvu,
    pmt_rvu
  ) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    "Average Charge" = gct_rvu,
    "Average Payment" = pmt_rvu
  ) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !dqtr,
    names_to = "measures",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    "column",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(x = dqtr, y = values, group = measures)
  ) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(
    gridLineWidth = 0,
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = "", style = list <https://rdrr.io/r/base/list.html>(color = "#000000"))
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(
    labels = list <https://rdrr.io/r/base/list.html>(style = list <https://rdrr.io/r/base/list.html>(color = "#000000")),
    title = list <https://rdrr.io/r/base/list.html>(text = ""),
    lineWidth = 0,
    tickWidth = 0
  ) |>
  hc_title <https://jkunst.com/highcharter/reference/hc_title.html>(text = "Averages Per RVU: Gross Charge vs. Net Payment") |>
  hc_subtitle <https://jkunst.com/highcharter/reference/hc_subtitle.html>(text = "2021 Yearly RCM Analysis") |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal",
    x = 0,
    y = 10
  ) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(
    useHTML = TRUE,
    crosshairs = TRUE,
    borderWidth = 1,
    sort = TRUE
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    column = list <https://rdrr.io/r/base/list.html>(
      dataLabels = list <https://rdrr.io/r/base/list.html>(
        enabled = TRUE
      )
    )
  )

crosstalk::bscols <https://rdrr.io/pkg/crosstalk/man/bscols.html>(
  widths = NA,
  hc_multQ,
  hc_newestQ
)
|//

Created with Highcharts 9.3.1Single vs. Multiple Visit Patients2021
Yearly RCM Analysis948​948374​374480​480510​5103 124​3 1241 615​1 6151
918​1 9181 937​1 937More Than OnceSeen
Once1Q222Q223Q224Q220500100015002000250030003500
Created with Highcharts 9.3.1New vs. Established Patients2021 Yearly RCM
Analysis2 814​2 8141 383​1 3831 684​1 6841 720​1 720310​310232​232234​
234217​217EstablishedNew1Q222Q223Q224Q22050010001500200025003000
Created with Highcharts 9.3.1Averages Per Visit: Gross Charge vs. Net
Payment2021 Yearly RCM Analysis263.24​263.24273.15​273.15238.71​
238.71250.03​250.03111.45​111.45116.15​116.15118.34​118.34118.17​
118.17Average ChargeAverage Payment1Q222Q223Q224Q22050100150200250300
Created with Highcharts 9.3.1Averages Per RVU: Gross Charge vs. Net
Payment2021 Yearly RCM Analysis203.84​203.84219.31​219.31181.3​
181.3186.13​186.1386.3​86.393.26​93.2689.88​89.8887.97​87.97Average
ChargeAverage Payment1Q222Q223Q224Q22050100150200250


  Yearly Analysis

Yearly analysis generally consists of presentation of averages of all of
monthly metrics, as well as minimums/maximums, any significant variances
and a handful of year-end calculations:

The *A/R Turnover Ratio* (also known as /the Debtor’s Turnover Ratio/)
is an efficiency ratio that measures how efficiently a company is
collecting revenue. It measures the number of times over a given period
that a company collects its average accounts receivable balance.

*A/R Turnover in Days* (also known as /Days in Sales Receivables/) is a
measure that shows the average number of days that it takes a customer
to pay the company for sales on credit.

|# AR Turnover Ratio
ar_turnover <- sum <https://rdrr.io/r/base/sum.html>(rcmann$gct) / ((as.numeric <https://rdrr.io/r/base/numeric.html>(rcmann[1, 4]) + as.numeric <https://rdrr.io/r/base/numeric.html>(rcmann[12, 4])) / 2)

# Days in Sales Receivable
days_in_sales_receive <- 365 / ar_turnover

# Net Collections Ratio - Annual
ncrann <- sum <https://rdrr.io/r/base/sum.html>(rcmann$pmt) / (sum <https://rdrr.io/r/base/sum.html>(rcmann$gct) - sum <https://rdrr.io/r/base/sum.html>(rcmann$adj))

# Adjustments to Collections Ratio - Annual
atcann <- sum <https://rdrr.io/r/base/sum.html>(rcmann$adj) / sum <https://rdrr.io/r/base/sum.html>(rcmann$pmt)

# Average Charges Per Month
avggct <- sum <https://rdrr.io/r/base/sum.html>(rcmann$gct) / 12

# Average Encounters Per Month
avgenc <- sum <https://rdrr.io/r/base/sum.html>(rcmann$visit) / 12

# Average RVUs Per Month
avgrvu <- sum <https://rdrr.io/r/base/sum.html>(rcmann$rvu) / 12

# Average New Patients Per Month
avgnew <- sum <https://rdrr.io/r/base/sum.html>(rcmann$new) / 12
|//

I’ll use {apexcharter}’s sparkline function to create a series of
interactive value boxes to present these:

Show code

|# AR Turnover Ratio
# with Monthly AR Balance
spark_arto <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    earb
  )

box_arto <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_arto,
  title = round <https://rdrr.io/r/base/Round.html>(ar_turnover, digits = 2),
  subtitle = "A/R Turnover Ratio",
  type = "area",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx,
  synchronize = FALSE
)

# Days in Sales Receivable
# with Monthly Days in AR
spark_disr <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    dar
  )

box_disr <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_disr,
  title = round <https://rdrr.io/r/base/Round.html>(days_in_sales_receive, digits = 2),
  subtitle = "Days in Sales Receivable",
  type = "column",
  color = "#FFFFFF",
  background = color,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx,
  synchronize = FALSE
)

# Adjustments to Collections Ratio - Annual
# with Monthly Adjustments
spark_adj <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    adj
  )

box_adj <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_adj,
  title = round <https://rdrr.io/r/base/Round.html>(atcann, digits = 2),
  subtitle = "Adjustments to Collections",
  type = "column",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx,
  synchronize = FALSE
)

# Net Collections Ratio - Annual
spark_ncr <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    ncr
  )

box_ncr <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_ncr,
  title = round <https://rdrr.io/r/base/Round.html>(ncrann * 100, digits = 2),
  subtitle = "Net Collections Ratio",
  type = "area",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx,
  synchronize = FALSE
)

# Average Charges Per Month
spark_gct <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    gct
  )

box_gct <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_gct,
  title = round <https://rdrr.io/r/base/Round.html>(avggct, digits = 2),
  subtitle = "Average Gross Charges",
  type = "column",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx2,
  synchronize = FALSE
)

# Average Encounters Per Month
spark_enc <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    visit
  )

box_enc <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_enc,
  title = round <https://rdrr.io/r/base/Round.html>(avgenc, digits = 2),
  subtitle = "Average Encounters",
  type = "area",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx2,
  synchronize = FALSE
)

# Average RVUs Per Month
spark_rvu <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    rvu
  )

box_rvu <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_rvu,
  title = round <https://rdrr.io/r/base/Round.html>(avgrvu, digits = 2),
  subtitle = "Average RVUs",
  type = "column",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx2,
  synchronize = FALSE
)

# Average New Patients Per Month
spark_new <- rcmann |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(date) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    date,
    new
  )

box_new <- spark_box <https://dreamrs.github.io/apexcharter/reference/spark_box.html>(
  data = spark_new,
  title = round <https://rdrr.io/r/base/Round.html>(avgnew, digits = 2),
  subtitle = "Average New Patients",
  type = "area",
  color = "#FFFFFF",
  background = color,
  height = 200,
  title_style = list <https://rdrr.io/r/base/list.html>(fontSize = 24, color = "white"),
  subtitle_style = list <https://rdrr.io/r/base/list.html>(fontSize = 16, color = "white"),
  elementId = spkbx2,
  synchronize = FALSE
)

crosstalk::bscols <https://rdrr.io/pkg/crosstalk/man/bscols.html>(
  widths = NA,
  box_arto,
  box_disr,
  box_ncr,
  box_adj
)
|//

18.92A/R Turnover Ratio
19.29Days in Sales Receivable
94.02Net Collections Ratio
1.16Adjustments to Collections
183804.91Average Gross Charges
908.83Average Encounters
931.1Average RVUs
82.75Average New Patients


  {reactable} Drill-Down Table


    <#monthly-dataframe>Monthly Dataframe

|# Create data frame
rcm_df <- data.frame <https://rdrr.io/r/base/data.frame.html>(
  date = c <https://rdrr.io/r/base/c.html>(
    "2021-01-01", "2021-02-01", "2021-03-01",
    "2021-04-01", "2021-05-01", "2021-06-01",
    "2021-07-01", "2021-08-01", "2021-09-01",
    "2021-10-01", "2021-11-01", "2021-12-01",
    "2022-01-01", "2022-02-01", "2022-03-01",
    "2022-04-01"
  ),
  gct = c <https://rdrr.io/r/base/c.html>(
    372026.23, 488189.83, 486557.14,
    372933.37, 407866.75, 418267.28,
    349662.24, 381510.05, 412980.16,
    343056.21, 443048.52, 395482.44,
    489675.16, 360452.15, 495234.24,
    384729.38
  ),
  earb = c <https://rdrr.io/r/base/c.html>(
    558039.35, 562992.85, 558149.85,
    563850.21, 563097.33, 569884.91,
    573488.55, 576993.27, 577998.93,
    585281.47, 589676.47, 594984.65,
    611679.13, 621725.17, 614629.40,
    624732.06
  ),
  adj = c <https://rdrr.io/r/base/c.html>(
    139546.20, 215187.32, 198306.23,
    145408.77, 144358.11, 159506.74,
    129276.26, 131911.88, 141539.78,
    126171.62, 181177.84, 130005.34,
    179666.94, 132363.44, 179199.89,
    142708.35
  ),
  col = c <https://rdrr.io/r/base/c.html>(
    227526.53, 277845.51, 282550.55,
    228277.48, 256721.06, 255156.90,
    216881.26, 248592.51, 264157.84,
    212489.59, 256562.50, 248782.62,
    299962.18, 235184.48, 305931.69,
    230923.03
  )
)

# Convert Date column to date object
rcm_df$date <- as.Date <https://rdrr.io/r/base/as.Date.html>(rcm_df$date)

# function to create different date types
rcm_ymq <- function(df, date_col) {
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(
    inherits <https://rdrr.io/r/base/class.html>(df, "data.frame")
  )
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(
    class <https://rdrr.io/r/base/class.html>(
      df |>
        dplyr::pull <https://dplyr.tidyverse.org/reference/pull.html>({{ date_col }})
    ) == "Date"
  )
  dplyr::mutate <https://dplyr.tidyverse.org/reference/mutate.html>(df,
    nmon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = FALSE),
    ndip = lubridate::days_in_month <https://lubridate.tidyverse.org/reference/days_in_month.html>({{ date_col }}),
    month = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = FALSE),
    mon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = TRUE),
    year = lubridate::year <https://lubridate.tidyverse.org/reference/year.html>({{ date_col }}),
    nqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dqtr = paste0 <https://rdrr.io/r/base/paste.html>(
      lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "Q",
      format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")
    ),
    ymon = as.numeric <https://rdrr.io/r/base/numeric.html>(
      format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%Y.%m")
    ),
    mmon = format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%b %Y"),
    nhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dhalf = paste0 <https://rdrr.io/r/base/paste.html>(
      lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "H",
      format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")
    )
  )
}

# call function
rcm_df <- rcm_ymq(
  df = rcm_df,
  date_col = date
)

rcm_df <- rownames_to_column <https://tibble.tidyverse.org/reference/rownames.html>(rcm_df, "id")

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcm_df)
|//

ABCDEFGHIJ0123456789

id
<chr>
	
date
<date>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
	
nmon
<dbl>
	
ndip
<int>
	
month
<ord>
	
mon
<ord>
	
1	2021-01-01	372026.2	558039.3	139546.2	227526.5	1	31	January	Jan	
2	2021-02-01	488189.8	562992.8	215187.3	277845.5	2	28	February	Feb	
3	2021-03-01	486557.1	558149.8	198306.2	282550.5	3	31	March	Mar	
4	2021-04-01	372933.4	563850.2	145408.8	228277.5	4	30	April	Apr	
5	2021-05-01	407866.8	563097.3	144358.1	256721.1	5	31	May	May	
6	2021-06-01	418267.3	569884.9	159506.7	255156.9	6	30	June	Jun	
7	2021-07-01	349662.2	573488.6	129276.3	216881.3	7	31	July	Jul	
8	2021-08-01	381510.0	576993.3	131911.9	248592.5	8	31	August	Aug	
9	2021-09-01	412980.2	577998.9	141539.8	264157.8	9	30	September	Sep	
10	2021-10-01	343056.2	585281.5	126171.6	212489.6	10	31	October	Oct	

Next
12
Previous
1-10 of 16 rows | 1-10 of 19 columns


    <#quarterly-dataframe>Quarterly Dataframe

|# Subset every third month's AR Balance
rcmq_earb <- rcm_df |>
  filter <https://dplyr.tidyverse.org/reference/filter.html>(
    id == 3 |
      id == 6 |
      id == 9 |
      id == 12 |
      id == 15 |
      id == 16
  ) |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    yqtr,
    earb
  )

# Summarize quarterly data
rcmq_df <- rcm_df |>
  group_by <https://dplyr.tidyverse.org/reference/group_by.html>(yqtr, dqtr) |>
  summarise <https://dplyr.tidyverse.org/reference/summarise.html>(
    gct = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>(gct), digits = 2),
    adj = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>(adj), digits = 2),
    col = sum <https://rdrr.io/r/base/sum.html>(col),
    ndip = sum <https://rdrr.io/r/base/sum.html>(ndip),
    .groups = "drop"
  ) |>
  arrange <https://dplyr.tidyverse.org/reference/arrange.html>(yqtr)

# Merge the data frames
rcmq_df <- merge <https://rdrr.io/r/base/merge.html>(rcmq_earb, rcmq_df, by = "yqtr") |>
  select <https://dplyr.tidyverse.org/reference/select.html>(yqtr, dqtr, ndip, gct, earb, adj, col)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcmq_df)
|//

ABCDEFGHIJ0123456789

yqtr
<dbl>
	
dqtr
<chr>
	
ndip
<int>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
2021.1	1Q21	90	1346773.2	558149.8	553039.8	787922.6
2021.2	2Q21	91	1199067.4	569884.9	449273.6	740155.4
2021.3	3Q21	92	1144152.4	577998.9	402727.9	729631.6
2021.4	4Q21	92	1181587.2	594984.7	437354.8	717834.7
2022.1	1Q22	90	1345361.6	614629.4	491230.3	841078.3
2022.2	2Q22	30	384729.4	624732.1	142708.4	230923.0

6 rows


    <#monthly-calculations-code>Monthly Calculations Code

|# declare dart
dart <- 40

rcm_df <- rcm_df |>
  # average daily charge
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adc = round <https://rdrr.io/r/base/Round.html>(gct / ndip, digits = 2)) |>
  # days in ar
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(dar = round <https://rdrr.io/r/base/Round.html>(earb / adc, digits = 2)) |>
  # ideal ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ideal = round <https://rdrr.io/r/base/Round.html>(dart / ndip, digits = 2)) |>
  # actual ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(act = round <https://rdrr.io/r/base/Round.html>(earb / gct, digits = 2)) |>
  # ratio difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(radif = round <https://rdrr.io/r/base/Round.html>(ideal - act, digits = 2)) |>
  # earb target
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(earb_n = round <https://rdrr.io/r/base/Round.html>(gct * ideal, digits = 2)) |>
  # ar difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ardif = round <https://rdrr.io/r/base/Round.html>(earb_n - earb, digits = 2)) |>
  # add 'Status' column
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < dart ~ "Pass", TRUE ~ "Fail")) |>
  # net collections rate
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ncr = (col / (gct - adj) * 100)) |>
  # adjustments to collections ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(atcr = adj / col)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcm_df)
|//

ABCDEFGHIJ0123456789

id
<chr>
	
date
<date>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
	
nmon
<dbl>
	
ndip
<int>
	
month
<ord>
	
mon
<ord>
	
1	2021-01-01	372026.2	558039.3	139546.2	227526.5	1	31	January	Jan	
2	2021-02-01	488189.8	562992.8	215187.3	277845.5	2	28	February	Feb	
3	2021-03-01	486557.1	558149.8	198306.2	282550.5	3	31	March	Mar	
4	2021-04-01	372933.4	563850.2	145408.8	228277.5	4	30	April	Apr	
5	2021-05-01	407866.8	563097.3	144358.1	256721.1	5	31	May	May	
6	2021-06-01	418267.3	569884.9	159506.7	255156.9	6	30	June	Jun	
7	2021-07-01	349662.2	573488.6	129276.3	216881.3	7	31	July	Jul	
8	2021-08-01	381510.0	576993.3	131911.9	248592.5	8	31	August	Aug	
9	2021-09-01	412980.2	577998.9	141539.8	264157.8	9	30	September	Sep	
10	2021-10-01	343056.2	585281.5	126171.6	212489.6	10	31	October	Oct	

Next
12
Previous
1-10 of 16 rows | 1-10 of 29 columns


    <#quarterly-calculations-code>Quarterly Calculations Code

|rcmq_df <- rcmq_df |>
  # average daily charge
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(adc = round <https://rdrr.io/r/base/Round.html>(gct / ndip, digits = 2)) |>
  # days in ar
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(dar = round <https://rdrr.io/r/base/Round.html>(earb / adc, digits = 2)) |>
  # ideal ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ideal = round <https://rdrr.io/r/base/Round.html>(dart / ndip, digits = 2)) |>
  # actual ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(act = round <https://rdrr.io/r/base/Round.html>(earb / gct, digits = 2)) |>
  # ratio difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(radif = round <https://rdrr.io/r/base/Round.html>(ideal - act, digits = 2)) |>
  # earb target
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(earb_n = round <https://rdrr.io/r/base/Round.html>(gct * ideal, digits = 2)) |>
  # ar difference
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ardif = round <https://rdrr.io/r/base/Round.html>(earb_n - earb, digits = 2)) |>
  # add 'Status' column
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < dart ~ "Pass", TRUE ~ "Fail")) |>
  # net collections rate
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(ncr = (col / (gct - adj) * 100)) |>
  # adjustments to collections ratio
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(atcr = adj / col) |>
  # conditionally assign colors to dar based on status
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(color_assign = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(
    status == "Fail" ~ "red",
    TRUE ~ "grey"
  ))

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcmq_df)
|//

ABCDEFGHIJ0123456789

yqtr
<dbl>
	
dqtr
<chr>
	
ndip
<int>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
	
adc
<dbl>
	
dar
<dbl>
	
ideal
<dbl>
	
2021.1	1Q21	90	1346773.2	558149.8	553039.8	787922.6	14964.15	37.30	0.44	
2021.2	2Q21	91	1199067.4	569884.9	449273.6	740155.4	13176.56	43.25	0.44	
2021.3	3Q21	92	1144152.4	577998.9	402727.9	729631.6	12436.44	46.48	0.43	
2021.4	4Q21	92	1181587.2	594984.7	437354.8	717834.7	12843.34	46.33	0.43	
2022.1	1Q22	90	1345361.6	614629.4	491230.3	841078.3	14948.46	41.12	0.44	
2022.2	2Q22	30	384729.4	624732.1	142708.4	230923.0	12824.31	48.71	1.33	

6 rows | 1-10 of 18 columns


    <#drill-down-table-creation>Drill-down Table Creation


      <#select-rows-needed>Select Rows Needed


        <#top-level-table>Top-Level Table

|rcm_top <- rcmq_df |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    yqtr, gct, earb, adj, col, adc, dar, status, color_assign,
    ideal, act, radif, earb_n, ardif, ncr, atcr
  )

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcm_top)
|//

ABCDEFGHIJ0123456789

yqtr
<dbl>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
	
adc
<dbl>
	
dar
<dbl>
	
status
<chr>
	
color_assign
<chr>
	
ideal
<dbl>
	
2021.1	1346773.2	558149.8	553039.8	787922.6	14964.15	37.30	Pass	grey	0.44	
2021.2	1199067.4	569884.9	449273.6	740155.4	13176.56	43.25	Fail	red	0.44	
2021.3	1144152.4	577998.9	402727.9	729631.6	12436.44	46.48	Fail	red	0.43	
2021.4	1181587.2	594984.7	437354.8	717834.7	12843.34	46.33	Fail	red	0.43	
2022.1	1345361.6	614629.4	491230.3	841078.3	14948.46	41.12	Fail	red	0.44	
2022.2	384729.4	624732.1	142708.4	230923.0	12824.31	48.71	Fail	red	1.33	

6 rows | 1-10 of 16 columns


        <#second-level-table>Second-Level Table

|rcm_sec <- rcm_df |>
  select <https://dplyr.tidyverse.org/reference/select.html>(
    yqtr, id, month, mon, mmon, gct, earb, adj,
    col, adc, dar, status, ideal, act,
    radif, earb_n, ardif, ncr, atcr
  )

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(rcm_sec)
|//

ABCDEFGHIJ0123456789

yqtr
<dbl>
	
id
<chr>
	
month
<ord>
	
mon
<ord>
	
mmon
<chr>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
col
<dbl>
	
adc
<dbl>
	
2021.1	1	January	Jan	Jan 2021	372026.2	558039.3	139546.2	227526.5	12000.85	
2021.1	2	February	Feb	Feb 2021	488189.8	562992.8	215187.3	277845.5	17435.35	
2021.1	3	March	Mar	Mar 2021	486557.1	558149.8	198306.2	282550.5	15695.39	
2021.2	4	April	Apr	Apr 2021	372933.4	563850.2	145408.8	228277.5	12431.11	
2021.2	5	May	May	May 2021	407866.8	563097.3	144358.1	256721.1	13156.99	
2021.2	6	June	Jun	Jun 2021	418267.3	569884.9	159506.7	255156.9	13942.24	
2021.3	7	July	Jul	Jul 2021	349662.2	573488.6	129276.3	216881.3	11279.43	
2021.3	8	August	Aug	Aug 2021	381510.0	576993.3	131911.9	248592.5	12306.78	
2021.3	9	September	Sep	Sep 2021	412980.2	577998.9	141539.8	264157.8	
13766.01	
2021.4	10	October	Oct	Oct 2021	343056.2	585281.5	126171.6	212489.6	11066.33	

Next
12
Previous
1-10 of 16 rows | 1-10 of 19 columns


    <#create-drill-down-table>Create Drill-Down Table

Show code

|drilldown_tbl <- reactable <https://glin.github.io/reactable/reference/reactable.html>(
  data = rcm_top,
  elementId = "rcm-drilldown-table",
  pagination = F,
  highlight = TRUE,
  striped = F,
  filterable = F,
  compact = TRUE,
  showPageSizeOptions = F,
  onClick = "expand",
  class = "packages-table",
  rowStyle = list <https://rdrr.io/r/base/list.html>(cursor = "pointer"),
  theme = nytimes <https://kcuilla.github.io/reactablefmtr/reference/nytimes.html>(),
  defaultSorted = "yqtr",
  defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
    headerClass = "col-header",
    footerClass = "col-footer"
  ),
  columns = list <https://rdrr.io/r/base/list.html>(
    yqtr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Quarter",
      width = 80,
      align = "left",
      footer = "Averages"
    ),
    gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Gross Charges",
      cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(rcm_top,
        box_shadow = TRUE,
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        )
      )
    ),
    earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Ending AR",
      cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(rcm_top,
        box_shadow = TRUE,
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        )
      )
    ),
    adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Adjustments",
      cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(rcm_top,
        box_shadow = TRUE,
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        )
      )
    ),
    col = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Collections",
      cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(rcm_top,
        box_shadow = TRUE,
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        )
      )
    ),
    adc = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Avg. Daily Charge",
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(rcm_top,
        box_shadow = TRUE,
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        )
      )
    ),
    # dar = colDef(
    #   name = "Days in AR",
    #   footer = function(values) sprintf("%.2f", mean(values)),
    #   cell = color_tiles(rcm_top,
    #                      box_shadow = TRUE,
    #                      number_fmt = scales::number_format(
    #                        accuracy      = 0.01,
    #                        trim          = "FALSE"))),

    dar = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Days in AR",
      width = 70,
      align = "left",
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      cell = gauge_chart <https://kcuilla.github.io/reactablefmtr/reference/gauge_chart.html>(rcm_top, tooltip = T, fill_color_ref = "color_assign")
    ),
    color_assign = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
    status = colDef <https://glin.github.io/reactable/reference/colDef.html>(name = "Status", width = 70, show = F),
    ideal = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
    act = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
    radif = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
    earb_n = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "AR Target",
      class = "number",
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcm_top,
        fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          prefix = "$",
          accuracy = 0.01,
          big.mark = ",",
          trim = "FALSE"
        ),
        round_edges = TRUE
      )
    ),
    ardif = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "AR Difference",
      class = "number",
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcm_top,
        fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy      = 0.01,
          big.mark      = ",",
          trim          = "FALSE"
        ),
        round_edges = TRUE
      )
    ),
    ncr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Net Collections Rate",
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      class = "number",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcm_top,
        fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy      = 0.01,
          big.mark      = ",",
          suffix        = "%",
          trim          = "FALSE"
        ),
        round_edges = TRUE
      )
    ),
    atcr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
      name = "Adjustments to Collections",
      class = "number",
      cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(rcm_top,
        fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
        align_bars = "left",
        text_position = "above",
        number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
          accuracy      = 0.01,
          big.mark      = ",",
          trim          = "FALSE"
        ),
        round_edges = TRUE
      )
    )
  ),
  details = function(index) {
    sec_lvl <- rcm_sec[rcm_sec$yqtr == rcm_top$yqtr[index], ]
    reactable <https://glin.github.io/reactable/reference/reactable.html>(
      data = sec_lvl,
      pagination = F,
      highlight = TRUE,
      striped = F,
      outlined = TRUE,
      compact = F,
      showPageSizeOptions = F,
      theme = nytimes <https://kcuilla.github.io/reactablefmtr/reference/nytimes.html>(),
      defaultSorted = "id",
      defaultColDef = colDef <https://glin.github.io/reactable/reference/colDef.html>(
        headerClass = "col-header",
        footerClass = "col-footer",
        align = "left"
      ),
      columns = list <https://rdrr.io/r/base/list.html>(
        yqtr = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        id = colDef <https://glin.github.io/reactable/reference/colDef.html>(name = " ", width = 45),
        month = colDef <https://glin.github.io/reactable/reference/colDef.html>(name = "Month"),
        mon = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        mmon = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        gct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Gross Charges",
          class = "number"
        ),
        earb = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Ending AR",
          class = "number"
        ),
        adj = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Adjustments",
          class = "number"
        ),
        col = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Collections",
          class = "number"
        ),
        adc = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Avg. Daily Charge",
          footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
          cell = color_tiles <https://kcuilla.github.io/reactablefmtr/reference/color_tiles.html>(sec_lvl, number_fmt = scales::comma <https://scales.r-lib.org/reference/comma.html>)
        ),
        dar = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Days in AR",
          footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values))
        ),
        status = colDef <https://glin.github.io/reactable/reference/colDef.html>(name = "Status", width = 70),
        ideal = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        act = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        radif = colDef <https://glin.github.io/reactable/reference/colDef.html>(show = F),
        earb_n = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "AR Target",
          class = "number",
          footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
          cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(sec_lvl,
            fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
            align_bars = "left",
            text_position = "above",
            number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
              accuracy      = 0.01,
              big.mark      = ",",
              trim          = "FALSE"
            ),
            round_edges = TRUE
          )
        ),
        ardif = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "AR Difference",
          class = "number",
          footer = function(values) sprintf <https://rdrr.io/r/base/sprintf.html>("%.2f", mean <https://rdrr.io/r/base/mean.html>(values)),
          cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(sec_lvl,
            fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
            align_bars = "left",
            text_position = "above",
            number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
              accuracy      = 0.01,
              big.mark      = ",",
              trim          = "FALSE"
            ),
            round_edges = TRUE
          )
        ),
        ncr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Net Collections Rate",
          class = "number",
          cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(sec_lvl,
            fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
            align_bars = "left",
            text_position = "above",
            number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
              accuracy      = 0.01,
              big.mark      = ",",
              suffix        = "%",
              trim          = "FALSE"
            ),
            round_edges = TRUE
          )
        ),
        atcr = colDef <https://glin.github.io/reactable/reference/colDef.html>(
          name = "Adjustments to Collections",
          class = "number",
          cell = data_bars <https://kcuilla.github.io/reactablefmtr/reference/data_bars.html>(sec_lvl,
            fill_color = c <https://rdrr.io/r/base/c.html>("#15607A", "orange"),
            align_bars = "left",
            text_position = "above",
            number_fmt = scales::number_format <https://scales.r-lib.org/reference/comma.html>(
              accuracy      = 0.01,
              big.mark      = ",",
              trim          = "FALSE"
            ),
            round_edges = TRUE
          )
        )
      )
    )
  }
) |>
  add_title <https://kcuilla.github.io/reactablefmtr/reference/add_title.html>("Revenue Cycle Management Report", align = "left", font_color = "black", font_size = 24) |>
  add_subtitle <https://kcuilla.github.io/reactablefmtr/reference/add_subtitle.html>("January 2021 - April 2022", align = "left", font_color = "black", font_size = 18, font_weight = "normal")

div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", drilldown_tbl)
|//


  Revenue Cycle Management Report


    January 2021 - April 2022

Quarter
Gross Charges
Ending AR
Adjustments
Collections
Avg. Daily Charge
Days in AR
AR Target
AR Difference
Net Collections Rate
Adjustments to Collections
​​
2021.1
$1,346,773.20
$558,149.85
$553,039.75
$787,922.59
$14,964.15
37.3
$592,580.21
34,430.36
99.27%
0.70
​​
2021.2
$1,199,067.40
$569,884.91
$449,273.62
$740,155.44
$13,176.56
43.25
$527,589.66
-42,295.25
98.71%
0.61
​​
2021.3
$1,144,152.45
$577,998.93
$402,727.92
$729,631.61
$12,436.44
46.48
$491,985.55
-86,013.38
98.41%
0.55
​​
2021.4
$1,181,587.17
$594,984.65
$437,354.80
$717,834.71
$12,843.34
46.33
$508,082.48
-86,902.17
96.45%
0.61
​​
2022.1
$1,345,361.55
$614,629.40
$491,230.27
$841,078.35
$14,948.46
41.12
$591,959.08
-22,670.32
98.47%
0.58
​​
2022.2
$384,729.38
$624,732.06
$142,708.35
$230,923.03
$12,824.31
48.71
$511,690.08
-113,041.98
95.41%
0.62
​
Averages
1100278.52
590063.30
412722.45
674590.95
13532.21
43.86
537314.51
-52748.79
97.79
0.61


    <#reactable-stacked-bar-chart>{reactable} Stacked Bar Chart

This comes from a function I came across on Andrew Bates’ Github
<https://gist.github.com/asbates>. It’s actually a gist, located here
<https://gist.github.com/asbates/bbc382c2f2ae54b5c319d44d2450afe8>. He
based it on a chapter from Thomas Wilburn’s online book, /The Elegant
Selection/, Building stacked charts with flexbox <https://
thomaswilburn.github.io/viz-book/css-flex.html>.

Show code

|# reactable stacked bar chart function
bar_chart <-
  function(value,
           color_left = "salmon",
           color_right = "wheat",
           height = "30px",
           border_right = "3px solid white",
           border_color = "white",
           text_color = "white") {
    val_left <- paste0 <https://rdrr.io/r/base/paste.html>(round <https://rdrr.io/r/base/Round.html>(value * 100, 2), "%")
    val_right <- paste0 <https://rdrr.io/r/base/paste.html>(round <https://rdrr.io/r/base/Round.html>((1 - value) * 100, 2), "%")

    bar_left <- div <https://rdrr.io/pkg/htmltools/man/builder.html>(
      style = list <https://rdrr.io/r/base/list.html>(
        background = color_left,
        height = height,
        borderRight = border_right
      ),
      val_left
    )

    chart_left <- div <https://rdrr.io/pkg/htmltools/man/builder.html>(
      style = list <https://rdrr.io/r/base/list.html>(
        flexGrow = 1,
        textAlign = "center",
        flexBasis = val_left
      ),
      bar_left
    )

    bar_right <- div <https://rdrr.io/pkg/htmltools/man/builder.html>(
      style = list <https://rdrr.io/r/base/list.html>(
        background = color_right,
        height = height
      ),
      val_right
    )

    chart_right <- div <https://rdrr.io/pkg/htmltools/man/builder.html>(
      style = list <https://rdrr.io/r/base/list.html>(
        flexGrow = 1,
        textAlign = "center",
        flexBasis = val_right
      ),
      bar_right
    )

    div <https://rdrr.io/pkg/htmltools/man/builder.html>(
      style = list <https://rdrr.io/r/base/list.html>(
        display = "flex",
        alignItems = "stretch",
        justifyContent = "center"
      ),
      chart_left,
      chart_right
    )
  }
# data frame
dat <- rcm_top |>
  select <https://dplyr.tidyverse.org/reference/select.html>(yqtr, gct, earb, dar, status) |>
  mutate <https://dplyr.tidyverse.org/reference/mutate.html>(
    gct_pct = gct / (gct + earb)
  )

# reactable
drilldown_tbl2 <- reactable <https://glin.github.io/reactable/reference/reactable.html>(
  data = dat,
  columns = list <https://rdrr.io/r/base/list.html>(
    gct_pct = colDef <https://glin.github.io/reactable/reference/colDef.html>(
      name = "Percentages: GCt / EARB",
      class = "number",
      cell = function(value) {
        bar_chart(value)
      },
      align = "center"
    )
  ),
  theme = reactableTheme <https://glin.github.io/reactable/reference/reactableTheme.html>(
    # Vertically center cells
    cellStyle = list <https://rdrr.io/r/base/list.html>(display = "flex", flexDirection = "column", justifyContent = "center")
  )
)

# html output
div <https://rdrr.io/pkg/htmltools/man/builder.html>(class = "rcm-analysis", drilldown_tbl2)
|//

yqtr
gct
earb
dar
status
Percentages: GCt / EARB
2021.1
1346773.2
558149.85
37.3
Pass
70.7%
29.3%
2021.2
1199067.4
569884.91
43.25
Fail
67.78%
32.22%
2021.3
1144152.45
577998.93
46.48
Fail
66.44%
33.56%
2021.4
1181587.17
594984.65
46.33
Fail
66.51%
33.49%
2022.1
1345361.55
614629.4
41.12
Fail
68.64%
31.36%
2022.2
384729.38
624732.06
48.71
Fail
38.11%
61.89%


    <#comparebars-bar-chart>{compareBars} Bar Chart

Show code

|library <https://rdrr.io/r/base/library.html>(compareBars)
rcm_sec |>
  select <https://dplyr.tidyverse.org/reference/select.html>(mmon, gct, earb) |>
  rename <https://dplyr.tidyverse.org/reference/rename.html>(
    Month = mmon,
    "Gross Charges" = gct,
    "Ending AR" = earb
  ) |>
  compareBars <https://rdrr.io/pkg/compareBars/man/compareBars.html>(
    Month,
    "Gross Charges",
    "Ending AR",
    xLabel = NULL,
    yLabel = NULL,
    titleLabel = "2022 Comparing Monthly Gross Charges & Ending AR Balance",
    subtitleLabel = "The Color of the Bar Top Indicates Which is Larger, the Tooltip Displays the Difference",
    fontFamily = "Karla",
    compareVarFill1 = "#5FA0CB",
    compareVarFill2 = "#DE7F40",
    orientation = "horizontal",
    width = 800,
    height = 600,
    tooltipFormat = ".0s"
  )
|//

050k100k200k200k300k300k400k400k500k500k600k600k700k2022 Comparing
Monthly Gross Charges & Ending AR BalanceThe Color of the Bar Top
Indicates Which is Larger, the Tooltip Displays the DifferenceGross
Charges >Ending AR >Jan 2021Feb 2021Mar 2021Apr 2021May 2021Jun 2021Jul
2021Aug 2021Sep 2021Oct 2021Nov 2021Dec 2021Jan 2022Feb 2022Mar 2022Apr 2022


    <#highcharter-stacked-area-chart>{highcharter} Stacked Area Chart

Show code

|hc_theme_aab <- hc_theme <https://jkunst.com/highcharter/reference/hc_theme.html>(
  colors = c <https://rdrr.io/r/base/c.html>(
    "#0C2340", # Navy
    "#C8102E", # Red
    "#85714D" # Gold
  ),
  chart = list <https://rdrr.io/r/base/list.html>(
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "16",
      color = "#000000",
      fontWeight = "normal",
      fontFamily = "Karla"
    )
  ),
  title = list <https://rdrr.io/r/base/list.html>(
    align = "left",
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "20",
      color = "#0C2340",
      fontWeight = "bold",
      fontFamily = "Karla"
    )
  ),
  subtitle = list <https://rdrr.io/r/base/list.html>(
    align = "left",
    style = list <https://rdrr.io/r/base/list.html>(
      fontSize = "16",
      color = "#C8102E",
      fontWeight = "normal",
      fontFamily = "Karla"
    )
  ),
  plotOptions = list <https://rdrr.io/r/base/list.html>(
    line = list <https://rdrr.io/r/base/list.html>(
      marker = list <https://rdrr.io/r/base/list.html>(
        symbol = "circle",
        lineWidth = 2,
        radius = 5
      )
    )
  )
)

# stacked area chart
rcm_sec |>
  select <https://dplyr.tidyverse.org/reference/select.html>(mmon, gct, earb, col, adj) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mmon,
    names_to = "names",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    type = "area",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
      x = mmon,
      y = values,
      group = names
    )
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    series = list <https://rdrr.io/r/base/list.html>(
      stacking = "normal",
      marker = list <https://rdrr.io/r/base/list.html>(
        enabled = F,
        states = list <https://rdrr.io/r/base/list.html>(
          hover = list <https://rdrr.io/r/base/list.html>(
            enabled = F
          )
        )
      ),
      lineWidth = 0.8,
      lineColor = "white"
    )
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Month")) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(title = list <https://rdrr.io/r/base/list.html>(text = "Amount ($USD)")) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    align = "right", verticalAlign = "bottom",
    layout = "horizontal"
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_size <https://jkunst.com/highcharter/reference/hc_size.html>(width = 1000, height = 600) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(shared = TRUE)
|//

Created with Highcharts 9.3.1MonthAmount ($USD)adjcolearbgctJan 2021Feb
2021Mar 2021Apr 2021May 2021Jun 2021Jul 2021Aug 2021Sep 2021Oct 2021Nov
2021Dec 2021Jan 2022Feb 2022Mar 2022Apr 20220250k500k750k1 000k1 250k1
500k1 750k


    <#highcharter-stacked-bar-chart>{highcharter} Stacked Bar Chart

Show code

|# stacked bar chart
rcm_sec |>
  select <https://dplyr.tidyverse.org/reference/select.html>(mmon, gct, earb) |>
  tidyr::pivot_longer <https://tidyr.tidyverse.org/reference/pivot_longer.html>(
    !mmon,
    names_to = "names",
    values_to = "values"
  ) |>
  hchart <https://jkunst.com/highcharter/reference/hchart.html>(
    type = "bar",
    hcaes <https://jkunst.com/highcharter/reference/hcaes.html>(
      x = mmon,
      y = values,
      group = names
    )
  ) |>
  hc_plotOptions <https://jkunst.com/highcharter/reference/hc_plotOptions.html>(
    series = list <https://rdrr.io/r/base/list.html>(
      stacking = "percent",
      pointPadding = 0.2,
      pointWidth = 25,
      borderWidth = 2,
      marker = list <https://rdrr.io/r/base/list.html>(
        enabled = F,
        states = list <https://rdrr.io/r/base/list.html>(
          hover = list <https://rdrr.io/r/base/list.html>(
            enabled = F
          )
        )
      ),
      lineWidth = 2,
      lineColor = "white"
    )
  ) |>
  hc_xAxis <https://jkunst.com/highcharter/reference/hc_xAxis.html>(title = list <https://rdrr.io/r/base/list.html>(text = "")) |>
  hc_yAxis <https://jkunst.com/highcharter/reference/hc_yAxis.html>(title = list <https://rdrr.io/r/base/list.html>(text = "")) |>
  hc_legend <https://jkunst.com/highcharter/reference/hc_legend.html>(
    reversed = TRUE,
    align = "right",
    verticalAlign = "bottom",
    layout = "horizontal"
  ) |>
  hc_add_theme <https://jkunst.com/highcharter/reference/hc_add_theme.html>(hc_theme_aab) |>
  hc_size <https://jkunst.com/highcharter/reference/hc_size.html>(width = 1000, height = 600) |>
  hc_tooltip <https://jkunst.com/highcharter/reference/hc_tooltip.html>(shared = TRUE) |>
  hc_chart <https://jkunst.com/highcharter/reference/hc_chart.html>(zoomType = "xy")
|//

Created with Highcharts 9.3.1gctearbJan 2021Feb 2021Mar 2021Apr 2021May
2021Jun 2021Jul 2021Aug 2021Sep 2021Oct 2021Nov 2021Dec 2021Jan 2022Feb
2022Mar 2022Apr 202205101520253035404550556065707580859095100


    <#dar-functions>DAR Functions


      <#basic-dar-function>Basic DAR Function

|# DAR Function
dar <- function(gct = 1, ndip = 30, earb = 1.5, dart = 40) {
  earb / (gct / ndip)
}

dar()
|//

|[1] 45|//


      <#dar-monthly-function-1>DAR Monthly Function

|# Create data frame
dar_example <- data.frame <https://rdrr.io/r/base/data.frame.html>(
  date = (c <https://rdrr.io/r/base/c.html>(seq <https://rdrr.io/r/base/seq.html>(
    as.Date <https://rdrr.io/r/base/as.Date.html>("2022-01-01"),
    by = "month",
    length.out = 12
  ))
  ),
  gct = c <https://rdrr.io/r/base/c.html>(
    325982, 297731.74, 198655.14,
    186047, 123654, 131440.28,
    153991, 156975, 146878.12,
    163799.44, 151410.74, 169094.46
  ),
  earb = c <https://rdrr.io/r/base/c.html>(
    288432.52, 307871.08, 253976.56,
    183684.90, 204227.59, 203460.47,
    182771.32, 169633.64, 179347.72,
    178051.11, 162757.49, 199849.30
  ),
  adj = c <https://rdrr.io/r/base/c.html>(
    170173.76, 153744.3, 133104.13,
    84582.48, 52999.08, 66491.99,
    89434.24, 102057.43, 63494.83,
    83673.68, 88268.09, 62971.82
  ),
  pmt = c <https://rdrr.io/r/base/c.html>(
    104181.64, 124548.88, 119445.53,
    71756.18, 50112.23, 65715.41,
    85245.91, 68055.25, 73669.21,
    81422.37, 78436.27, 69030.83
  ),
  pos = c <https://rdrr.io/r/base/c.html>(
    16012.80, 16304.75, 10844.50,
    1824.07, 6240.95, 7376.63,
    9155.36, 9740.75, 8602.64,
    8599.35, 7348.15, 10461.59
  ),
  provlag = c <https://rdrr.io/r/base/c.html>(
    5.33, 8.08, 6.07,
    3.76, 2.61, 2.77,
    3.43, 3.36, 2.54,
    2.63, 3.26, 3.4
  ),
  visit = c <https://rdrr.io/r/base/c.html>(
    1568, 1473, 1031,
    553, 713, 723,
    813, 798, 787,
    851, 762, 834
  ),
  pt = c <https://rdrr.io/r/base/c.html>(
    1204, 1162, 758,
    428, 609, 578,
    636, 658, 624,
    702, 565, 670
  ),
  new = c <https://rdrr.io/r/base/c.html>(
    129, 120, 61,
    32, 123, 77,
    93, 76, 65,
    61, 61, 95
  ),
  em = c <https://rdrr.io/r/base/c.html>(
    1184, 1130, 813,
    427, 550, 572,
    599, 615, 597,
    617, 487, 662
  ),
  rvu = c <https://rdrr.io/r/base/c.html>(
    1564.5, 1474.35, 995.6,
    517.34, 739.5, 754.64,
    863.41, 835.53, 826.4,
    875.49, 814.78, 911.65
  )
)

# DAR Monthly Function
ager_dar_month <- function(df, gct_col, date_col, earb_col, dart = 35) {
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(inherits <https://rdrr.io/r/base/class.html>(df, "data.frame"))
  dplyr::mutate <https://dplyr.tidyverse.org/reference/mutate.html>(df,
    ndip = lubridate::days_in_month <https://lubridate.tidyverse.org/reference/days_in_month.html>({{ date_col }}),
    nmon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = FALSE),
    month = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = FALSE),
    mon = lubridate::month <https://lubridate.tidyverse.org/reference/month.html>({{ date_col }}, label = TRUE, abbr = TRUE),
    year = lubridate::year <https://lubridate.tidyverse.org/reference/year.html>({{ date_col }}),
    nqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yqtr = lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dqtr = paste0 <https://rdrr.io/r/base/paste.html>(lubridate::quarter <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "Q", format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")),
    ymon = as.numeric <https://rdrr.io/r/base/numeric.html>(format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%Y.%m")),
    mmon = format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%b %Y"),
    nhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}),
    yhalf = lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}, with_year = TRUE),
    dhalf = paste0 <https://rdrr.io/r/base/paste.html>(lubridate::semester <https://lubridate.tidyverse.org/reference/quarter.html>({{ date_col }}), "H", format <https://rdrr.io/r/base/format.html>({{ date_col }}, "%y")),
    adc = round <https://rdrr.io/r/base/Round.html>({{ gct_col }} / ndip, digits = 2),
    dar = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} / adc, digits = 2),
    actual = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} / {{ gct_col }}, digits = 2),
    ideal = round <https://rdrr.io/r/base/Round.html>({{ dart }} / ndip, digits = 2),
    ratio_diff = round <https://rdrr.io/r/base/Round.html>(actual - ideal, digits = 2),
    dar_diff = round <https://rdrr.io/r/base/Round.html>(dar - {{ dart }}, digits = 2),
    earb_target = round <https://rdrr.io/r/base/Round.html>(({{ gct_col }} * {{ dart }} / ndip), digits = 2),
    earb_decrease_need = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} - earb_target, digits = 2),
    earb_decrease_pct = (earb_decrease_need / {{ earb_col }}),
    earb_gct_diff = round <https://rdrr.io/r/base/Round.html>({{ earb_col }} - {{ gct_col }}, digits = 2),
    status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < {{ dart }} ~ "Pass", TRUE ~ "Fail")
  )
}


# Call Function
dar_example1 <- ager_dar_month(
  df = dar_example,
  gct_col = gct,
  date_col = date,
  earb_col = earb,
  dart = 35
)

paged_table <https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html>(dar_example1)
|//

ABCDEFGHIJ0123456789

date
<date>
	
gct
<dbl>
	
earb
<dbl>
	
adj
<dbl>
	
pmt
<dbl>
	
pos
<dbl>
	
provlag
<dbl>
	
visit
<dbl>
	
pt
<dbl>
	
new
<dbl>
	
2022-01-01	325982.0	288432.5	170173.76	104181.64	16012.80	5.33	1568	
1204	129	
2022-02-01	297731.7	307871.1	153744.30	124548.88	16304.75	8.08	1473	
1162	120	
2022-03-01	198655.1	253976.6	133104.13	119445.53	10844.50	6.07	1031	758	61	
2022-04-01	186047.0	183684.9	84582.48	71756.18	1824.07	3.76	553	428	32	
2022-05-01	123654.0	204227.6	52999.08	50112.23	6240.95	2.61	713	609	123	
2022-06-01	131440.3	203460.5	66491.99	65715.41	7376.63	2.77	723	578	77	
2022-07-01	153991.0	182771.3	89434.24	85245.91	9155.36	3.43	813	636	93	
2022-08-01	156975.0	169633.6	102057.43	68055.25	9740.75	3.36	798	658	76	
2022-09-01	146878.1	179347.7	63494.83	73669.21	8602.64	2.54	787	624	65	
2022-10-01	163799.4	178051.1	83673.68	81422.37	8599.35	2.63	851	702	61	

Next
12
Previous
1-10 of 12 rows | 1-10 of 36 columns


      <#dar-quarterly-function-1>DAR Quarterly Function

|ager_dar_qtr <- function(df,
                         nmon_col = nmon,
                         nqtr_col = nqtr,
                         dqtr_col = dqtr,
                         earb_col = earb,
                         gct_col = gct,
                         ndip_col = ndip,
                         date_col = date,
                         dart = 35) {
  stopifnot <https://rdrr.io/r/base/stopifnot.html>(inherits <https://rdrr.io/r/base/class.html>(df, "data.frame"))

  earb_qtr <- dplyr::filter <https://dplyr.tidyverse.org/reference/filter.html>(df, {{ nmon_col }} == 3 | {{ nmon_col }} == 6 | {{ nmon_col }} == 9 | {{ nmon_col }} == 12) |>
    dplyr::select <https://dplyr.tidyverse.org/reference/select.html>({{ nqtr_col }}, {{ earb_col }})

  gct_qtr <- dplyr::group_by <https://dplyr.tidyverse.org/reference/group_by.html>(df, {{ nqtr_col }}, {{ dqtr_col }}) |>
    dplyr::summarise <https://dplyr.tidyverse.org/reference/summarise.html>(
      gct = round <https://rdrr.io/r/base/Round.html>(sum <https://rdrr.io/r/base/sum.html>({{ gct_col }}), 2),
      ndip = sum <https://rdrr.io/r/base/sum.html>({{ ndip_col }}),
      .groups = "drop"
    )

  quarters <- merge <https://rdrr.io/r/base/merge.html>(earb_qtr, gct_qtr)

  dplyr::mutate <https://dplyr.tidyverse.org/reference/mutate.html>(quarters,
    adc = round <https://rdrr.io/r/base/Round.html>(gct / ndip, digits = 2),
    dar = round <https://rdrr.io/r/base/Round.html>(earb / adc, digits = 2),
    actual = round <https://rdrr.io/r/base/Round.html>(earb / gct, digits = 2),
    ideal = round <https://rdrr.io/r/base/Round.html>({{ dart }} / ndip, digits = 2),
    ratio_diff = round <https://rdrr.io/r/base/Round.html>(actual - ideal, digits = 2),
    dar_diff = round <https://rdrr.io/r/base/Round.html>(dar - {{ dart }}, digits = 2),
    earb_target = round <https://rdrr.io/r/base/Round.html>((gct * {{ dart }} / ndip), digits = 2),
    earb_decrease_need = round <https://rdrr.io/r/base/Round.html>(earb - earb_target, digits = 2),
    earb_decrease_pct = (earb_decrease_need / earb),
    earb_gct_diff = round <https://rdrr.io/r/base/Round.html>(earb - gct, digits = 2),
    status = case_when <https://dplyr.tidyverse.org/reference/case_when.html>(dar < {{ dart }} ~ "Pass", TRUE ~ "Fail")
  )
}

# Call Function
ager_dar_qtr(df = dar_example1)
|//

|  nqtr     earb dqtr      gct ndip     adc   dar actual ideal ratio_diff dar_diff earb_target
1    1 253976.6 1Q22 822368.9   90 9137.43 27.80   0.31  0.39      -0.08    -7.20    319810.1
2    2 203460.5 2Q22 441141.3   91 4847.71 41.97   0.46  0.38       0.08     6.97    169669.7
3    3 179347.7 3Q22 457844.1   92 4976.57 36.04   0.39  0.38       0.01     1.04    174179.8
4    4 199849.3 4Q22 484304.6   92 5264.18 37.96   0.41  0.38       0.03     2.96    184246.3
  earb_decrease_need earb_decrease_pct earb_gct_diff status
1          -65833.56       -0.25921116     -568392.3   Pass
2           33790.75        0.16608017     -237680.8   Fail
3            5167.89        0.02881492     -278496.4   Fail
4           15602.97        0.07807368     -284455.3   Fail|//


  Visualizing Aging of Accounts

An account is a billable episode of care. It begins to age once it is
billed to an insurance company or patient. These outstanding accounts
are monitored by age in 30-day increments (0 - 30, 31 - 60, 61 - 90, and
so forth.) AR departments monitor the number of accounts outstanding,
the dollar amount in each 30-day increment (sometimes called “bins” or
“buckets”), and the responsible parties. As well, aging should be broken
down by many metrics, such as Provider, Patient, Insurance Types
(Commercial, Primary, Secondary, Worker’s Compensation, Managed Care),
Facility, Diagnosis/Procedure code, Specialty, etc. The older the
account or the longer the account remains unpaid, the less likely it
will be reimbursed.

Most claims are originally billed to insurance and, until the insurance
makes a payment, the responsibility for the payment continues to be with
the insurance payer. After the payer makes or denies a payment (with no
just cause for an appeal), the responsibility for the balance of goes to
the patient (to be sent an invoice) or the physician (to be written off.)


    <#sunburst-charts-with-sunburstr>Sunburst Charts with {sunburstR}

|aging_df <- data.frame <https://rdrr.io/r/base/data.frame.html>(
  level1 = rep <https://rdrr.io/r/base/rep.html>(c <https://rdrr.io/r/base/c.html>("Primary", "Secondary"), each = 7),
  level2 = rep <https://rdrr.io/r/base/rep.html>(c <https://rdrr.io/r/base/c.html>(
    "Cigna",
    "BCBS",
    "Medicare",
    "Aetna",
    "Humana",
    "UHC",
    "Medicaid"
  ), 2),
  size = c <https://rdrr.io/r/base/c.html>(
    101586.44, 813932.10, 244682.06,
    315442.09, 338892.56, 692951.00,
    172394.44, 30869.21, 75555.29,
    12601.41, 39003.59, 27713.18,
    14384.15, 222480.09
  ),
  stringsAsFactors = FALSE
)

# http://timelyportfolio.github.io/sunburstR/reference/sunburst.html

tree <- d3_nest <https://rdrr.io/pkg/d3r/man/d3_nest.html>(aging_df, value_cols = "size")

sb1 <- sunburst <https://rdrr.io/pkg/sunburstR/man/sunburst.html>(tree, width = "100%", height = 600)

sb3 <- sund2b <https://rdrr.io/pkg/sunburstR/man/sund2b.html>(
  tree,
  width = "100%",
  height = 600,
  rootLabel = "Aging",
  showLabels = T,
  breadcrumbs = sund2bBreadcrumb <https://rdrr.io/pkg/sunburstR/man/sund2bBreadcrumb.html>(enabled = T),
  colors = list <https://rdrr.io/r/base/list.html>(range = RColorBrewer::brewer.pal <https://rdrr.io/pkg/RColorBrewer/man/ColorBrewer.html>(9, "Paired"))
)

div <https://rdrr.io/pkg/htmltools/man/builder.html>(
  style = "display: flex; align-items:center;",
  div <https://rdrr.io/pkg/htmltools/man/builder.html>(style = "width:50%; border:1px solid #ccc;", sb1),
  div <https://rdrr.io/pkg/htmltools/man/builder.html>(style = "width:50%; border:1px solid #ccc;", sb3)
)
|//

Legend
PrimarySecondaryCignaBCBSMedicareAetnaHumanaUHCMedicaid
root
3,102,488
100.0%
rootPrimaryCignaBCBSMedicareAetnaHumanaUHCMedicaidSecondaryCignaBCBSMedicareAetnaHumanaUHCMedicaid


    <#drilldown-piechart-with-echarts4r>Drilldown Piechart with {echarts4r}

|aging_df2 <- data.frame <https://rdrr.io/r/base/data.frame.html>(
  parents = c <https://rdrr.io/r/base/c.html>(
    "",
    "Primary", "Primary",
    "Primary", "Primary",
    "Primary", "Primary", "Primary",
    "Secondary", "Secondary",
    "Secondary", "Secondary",
    "Secondary", "Secondary", "Secondary",
    "Everything", "Everything"
  ),
  labels = c <https://rdrr.io/r/base/c.html>(
    "Everything",
    "Cigna", "BCBS", "Medicare",
    "Aetna", "Humana", "UHC",
    "Medicaid", "Cigna", "BCBS",
    "Medicare", "Aetna", "Humana",
    "UHC", "Medicaid",
    "Primary", "Secondary"
  ),
  value = c <https://rdrr.io/r/base/c.html>(
    0,
    101586.44, 813932.10, 244682.06,
    315442.09, 338892.56, 692951.00,
    172394.44, 30869.21, 75555.29,
    12601.41, 39003.59, 27713.18,
    14384.15, 222480.09, 2679880.7,
    422606.9
  )
)

# create a tree object
etree <- data.tree::FromDataFrameNetwork <https://rdrr.io/pkg/data.tree/man/as.Node.data.frame.html>(aging_df2)

# use it in echarts4r
etree |>
  e_charts <http://echarts4r.john-coene.com/reference/init.html>(
    width = "100%",
    height = 700
  ) |>
  e_sunburst <http://echarts4r.john-coene.com/reference/e_sunburst.html>() |>
  e_tooltip <http://echarts4r.john-coene.com/reference/e-tooltip.html>(style = "currency", locale = "US") |>
  e_title <http://echarts4r.john-coene.com/reference/e_title.html>("Primary & Secondary Aging") |>
  e_theme <http://echarts4r.john-coene.com/reference/theme.html>("dark")
|//


    <#sankey-diagram-in-echarts4r>Sankey Diagram in {echarts4r}

|aging_df |>
  e_charts <http://echarts4r.john-coene.com/reference/init.html>() |>
  e_sankey <http://echarts4r.john-coene.com/reference/e_sankey.html>(level1, level2, size) |>
  e_title <http://echarts4r.john-coene.com/reference/e_title.html>("Sankey Chart") |>
  e_theme <http://echarts4r.john-coene.com/reference/theme.html>("macarons2") |>
  e_tooltip <http://echarts4r.john-coene.com/reference/e-tooltip.html>()
|//


      Citations

Package 	Version 	Citation
apexcharter 	0.3.1 	Perrier and Meyer (2022 <#ref-apexcharter>)
base 	4.2.0 	R Core Team (2022 <#ref-base>)
compareBars 	0.0.1 	Ranzolin (2022 <#ref-compareBars>)
crosstalk 	1.2.0 	Cheng and Sievert (2021 <#ref-crosstalk>)
d3r 	1.0.0 	Bostock, Russell, et al. (2021 <#ref-d3r>)
data.tree 	1.0.0 	Glur (2020 <#ref-datatree>)
distill 	1.4 	Dervieux et al. (2022 <#ref-distill>)
echarts4r 	0.4.4 	Coene (2022 <#ref-echarts4r>)
ggsci 	2.9 	Xiao (2018 <#ref-ggsci>)
grateful 	0.1.11 	Rodríguez-Sánchez, Jackson, and Hutchins (2022 <#ref-
grateful>)
highcharter 	0.9.4 	Kunst (2022 <#ref-highcharter>)
htmltools 	0.5.2 	Cheng et al. (2021 <#ref-htmltools>)
knitr 	1.39 	Xie (2014 <#ref-knitr2014>); Xie (2015 <#ref-knitr2015>);
Xie (2022 <#ref-knitr2022>)
RColorBrewer 	1.1.3 	Neuwirth (2022 <#ref-RColorBrewer>)
reactable 	0.3.0 	Lin (2022 <#ref-reactable>)
reactablefmtr 	2.0.0 	Cuilla (2022 <#ref-reactablefmtr>)
rmarkdown 	2.14 	Xie, Allaire, and Grolemund (2018 <#ref-
rmarkdown2018>); Xie, Dervieux, and Riederer (2020 <#ref-
rmarkdown2020>); Allaire et al. (2022 <#ref-rmarkdown2022>)
scales 	1.2.0 	Wickham and Seidel (2022 <#ref-scales>)
sessioninfo 	1.2.2 	Wickham et al. (2021 <#ref-sessioninfo>)
sunburstR 	2.1.6 	Bostock, Rodden, et al. (2021 <#ref-sunburstR>)
tidyverse 	1.3.1 	Wickham et al. (2019 <#ref-tidyverse>)
xaringanExtra 	0.6.0 	Aden-Buie and Warkentin (2022 <#ref-xaringanExtra>)


      Last updated on

|[1] "2022-06-09 17:57:29 EDT"|//


      Session Info

|─ Session info ───────────────────────────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.2.0 (2022-04-22 ucrt)
 os       Windows 10 x64 (build 25131)
 system   x86_64, mingw32
 ui       RTerm
 language (EN)
 collate  English_United States.utf8
 ctype    English_United States.utf8
 tz       America/New_York
 date     2022-06-09
 pandoc   2.17.1.1 @ C:/Program Files/RStudio/bin/quarto/bin/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────────────────────────
 package       * version date (UTC) lib source
 apexcharter   * 0.3.1   2022-02-27 [1] CRAN (R 4.2.0)
 assertthat      0.2.1   2019-03-21 [1] CRAN (R 4.2.0)
 backports       1.4.1   2021-12-13 [1] CRAN (R 4.2.0)
 broom           0.8.0   2022-04-13 [1] CRAN (R 4.2.0)
 bslib           0.3.1   2021-10-06 [1] CRAN (R 4.2.0)
 cachem          1.0.6   2021-08-19 [1] CRAN (R 4.2.0)
 cellranger      1.1.0   2016-07-27 [1] CRAN (R 4.2.0)
 cli             3.3.0   2022-04-25 [1] CRAN (R 4.2.0)
 colorspace      2.0-3   2022-02-21 [1] CRAN (R 4.2.0)
 compareBars   * 0.0.1   2022-05-15 [1] Github (daranzolin/compareBars@3c56dae)
 crayon          1.5.1   2022-03-26 [1] CRAN (R 4.2.0)
 crosstalk       1.2.0   2021-11-04 [1] CRAN (R 4.2.0)
 curl            4.3.2   2021-06-23 [1] CRAN (R 4.2.0)
 d3r           * 1.0.0   2022-04-26 [1] Github (timelyportfolio/d3r@f77d0a0)
 data.table      1.14.2  2021-09-27 [1] CRAN (R 4.2.0)
 data.tree       1.0.0   2020-08-03 [1] CRAN (R 4.2.0)
 DBI             1.1.2   2021-12-20 [1] CRAN (R 4.2.0)
 dbplyr          2.2.0   2022-06-05 [1] CRAN (R 4.2.0)
 digest          0.6.29  2021-12-01 [1] CRAN (R 4.2.0)
 distill         1.4     2022-05-12 [1] CRAN (R 4.2.0)
 downlit         0.4.0   2021-10-29 [1] CRAN (R 4.2.0)
 dplyr         * 1.0.9   2022-04-28 [1] CRAN (R 4.2.0)
 echarts4r     * 0.4.4   2022-05-28 [1] CRAN (R 4.2.0)
 ellipsis        0.3.2   2021-04-29 [1] CRAN (R 4.2.0)
 evaluate        0.15    2022-02-18 [1] CRAN (R 4.2.0)
 fansi           1.0.3   2022-03-24 [1] CRAN (R 4.2.0)
 fastmap         1.1.0   2021-01-25 [1] CRAN (R 4.2.0)
 forcats       * 0.5.1   2021-01-27 [1] CRAN (R 4.2.0)
 fs              1.5.2   2021-12-08 [1] CRAN (R 4.2.0)
 generics        0.1.2   2022-01-31 [1] CRAN (R 4.2.0)
 ggplot2       * 3.3.6   2022-05-03 [1] CRAN (R 4.2.0)
 ggsci         * 2.9     2018-05-14 [1] CRAN (R 4.2.0)
 glue            1.6.2   2022-02-24 [1] CRAN (R 4.2.0)
 grateful      * 0.1.11  2022-05-07 [1] Github (Pakillo/grateful@ba9b003)
 gtable          0.3.0   2019-03-25 [1] CRAN (R 4.2.0)
 haven           2.5.0   2022-04-15 [1] CRAN (R 4.2.0)
 highcharter   * 0.9.4   2022-01-03 [1] CRAN (R 4.2.0)
 highr           0.9     2021-04-16 [1] CRAN (R 4.2.0)
 hms             1.1.1   2021-09-26 [1] CRAN (R 4.2.0)
 htmltools     * 0.5.2   2021-08-25 [1] CRAN (R 4.2.0)
 htmlwidgets     1.5.4   2021-09-08 [1] CRAN (R 4.2.0)
 httpuv          1.6.5   2022-01-05 [1] CRAN (R 4.2.0)
 httr            1.4.3   2022-05-04 [1] CRAN (R 4.2.0)
 igraph          1.3.1   2022-04-20 [1] CRAN (R 4.2.0)
 jquerylib       0.1.4   2021-04-26 [1] CRAN (R 4.2.0)
 jsonlite        1.8.0   2022-02-22 [1] CRAN (R 4.2.0)
 knitr         * 1.39    2022-04-26 [1] CRAN (R 4.2.0)
 later           1.3.0   2021-08-18 [1] CRAN (R 4.2.0)
 lattice         0.20-45 2021-09-22 [2] CRAN (R 4.2.0)
 lifecycle       1.0.1   2021-09-24 [1] CRAN (R 4.2.0)
 lubridate     * 1.8.0   2021-10-07 [1] CRAN (R 4.2.0)
 magrittr        2.0.3   2022-03-30 [1] CRAN (R 4.2.0)
 memoise         2.0.1   2021-11-26 [1] CRAN (R 4.2.0)
 mime            0.12    2021-09-28 [1] CRAN (R 4.2.0)
 modelr          0.1.8   2020-05-19 [1] CRAN (R 4.2.0)
 munsell         0.5.0   2018-06-12 [1] CRAN (R 4.2.0)
 pillar          1.7.0   2022-02-01 [1] CRAN (R 4.2.0)
 pkgconfig       2.0.3   2019-09-22 [1] CRAN (R 4.2.0)
 promises        1.2.0.1 2021-02-11 [1] CRAN (R 4.2.0)
 purrr         * 0.3.4   2020-04-17 [1] CRAN (R 4.2.0)
 quantmod        0.4.20  2022-04-29 [1] CRAN (R 4.2.0)
 R.cache         0.15.0  2021-04-30 [1] CRAN (R 4.2.0)
 R.methodsS3     1.8.1   2020-08-26 [1] CRAN (R 4.2.0)
 R.oo            1.24.0  2020-08-26 [1] CRAN (R 4.2.0)
 R.utils         2.11.0  2021-09-26 [1] CRAN (R 4.2.0)
 R6              2.5.1   2021-08-19 [1] CRAN (R 4.2.0)
 RColorBrewer    1.1-3   2022-04-03 [1] CRAN (R 4.2.0)
 Rcpp            1.0.8.3 2022-03-17 [1] CRAN (R 4.2.0)
 reactable     * 0.3.0   2022-05-26 [1] CRAN (R 4.2.0)
 reactablefmtr * 2.0.0   2022-03-16 [1] CRAN (R 4.2.0)
 reactR          0.4.4   2021-02-22 [1] CRAN (R 4.2.0)
 readr         * 2.1.2   2022-01-30 [1] CRAN (R 4.2.0)
 readxl          1.4.0   2022-03-28 [1] CRAN (R 4.2.0)
 rematch2        2.1.2   2020-05-01 [1] CRAN (R 4.2.0)
 renv            0.15.5  2022-05-26 [1] CRAN (R 4.2.0)
 reprex          2.0.1   2021-08-05 [1] CRAN (R 4.2.0)
 rlang           1.0.2   2022-03-04 [1] CRAN (R 4.2.0)
 rlist           0.4.6.2 2021-09-03 [1] CRAN (R 4.2.0)
 rmarkdown     * 2.14    2022-04-25 [1] CRAN (R 4.2.0)
 rstudioapi      0.13    2020-11-12 [1] CRAN (R 4.2.0)
 rvest           1.0.2   2021-10-16 [1] CRAN (R 4.2.0)
 sass            0.4.1   2022-03-23 [1] CRAN (R 4.2.0)
 scales          1.2.0   2022-04-13 [1] CRAN (R 4.2.0)
 sessioninfo     1.2.2   2021-12-06 [1] CRAN (R 4.2.0)
 shiny           1.7.1   2021-10-02 [1] CRAN (R 4.2.0)
 stringi         1.7.6   2021-11-29 [1] CRAN (R 4.2.0)
 stringr       * 1.4.0   2019-02-10 [1] CRAN (R 4.2.0)
 styler          1.7.0   2022-03-13 [1] CRAN (R 4.2.0)
 sunburstR     * 2.1.6   2022-04-26 [1] Github (timelyportfolio/sunburstR@9f47439)
 tibble        * 3.1.7   2022-05-03 [1] CRAN (R 4.2.0)
 tidyr         * 1.2.0   2022-02-01 [1] CRAN (R 4.2.0)
 tidyselect      1.1.2   2022-02-21 [1] CRAN (R 4.2.0)
 tidyverse     * 1.3.1   2021-04-15 [1] CRAN (R 4.2.0)
 tippy           0.1.0   2021-01-11 [1] CRAN (R 4.2.0)
 TTR             0.24.3  2021-12-12 [1] CRAN (R 4.2.0)
 tzdb            0.3.0   2022-03-28 [1] CRAN (R 4.2.0)
 utf8            1.2.2   2021-07-24 [1] CRAN (R 4.2.0)
 uuid            1.1-0   2022-04-19 [1] CRAN (R 4.2.0)
 vctrs           0.4.1   2022-04-13 [1] CRAN (R 4.2.0)
 withr           2.5.0   2022-03-03 [1] CRAN (R 4.2.0)
 xaringanExtra   0.6.0   2022-06-07 [1] CRAN (R 4.2.0)
 xfun            0.31    2022-05-10 [1] CRAN (R 4.2.0)
 xml2            1.3.3   2021-11-30 [1] CRAN (R 4.2.0)
 xtable          1.8-4   2019-04-21 [1] CRAN (R 4.2.0)
 xts             0.12.1  2020-09-09 [1] CRAN (R 4.2.0)
 yaml            2.3.5   2022-02-21 [1] CRAN (R 4.2.0)
 zoo             1.8-10  2022-04-15 [1] CRAN (R 4.2.0)

 [1] C:/Users/andyb/AppData/Local/R/win-library/4.2
 [2] C:/Program Files/R/R-4.2.0/library

──────────────────────────────────────────────────────────────────────────────────────────────────|//

//   0 Comments Share:   // <https://twitter.com/share?
text=R%20Cookbook%3A%20Healthcare%20Revenue%20Cycle&url=https%3A%2F%2Fandrewbruce.netlify.app%2Fposts%2Fr-cookbook-healthcare-rcm%2F> // <https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fandrewbruce.netlify.app%2Fposts%2Fr-cookbook-healthcare-rcm%2F&title=R%20Cookbook%3A%20Healthcare%20Revenue%20Cycle> // <https://www.facebook.com/sharer/sharer.php?s=100&p[url]=https%3A%2F%2Fandrewbruce.netlify.app%2Fposts%2Fr-cookbook-healthcare-rcm%2F> // <https://pinterest.com/pin/create/link/?url=https%3A%2F%2Fandrewbruce.netlify.app%2Fposts%2Fr-cookbook-healthcare-rcm%2F&description=R%20Cookbook%3A%20Healthcare%20Revenue%20Cycle>

Enjoy this blog? Get notified of new posts via email:


      Footnotes


      References

Aden-Buie, Garrick, and Matthew T. Warkentin. 2022. /xaringanExtra:
Extras and Extensions for ’Xaringan’ Slides/. https://CRAN.R-
project.org/package=xaringanExtra <https://cran.r-project.org/
package=xaringanExtra>.
Allaire, JJ, Yihui Xie, Jonathan McPherson, Javier Luraschi, Kevin
Ushey, Aron Atkins, Hadley Wickham, Joe Cheng, Winston Chang, and
Richard Iannone. 2022. /Rmarkdown: Dynamic Documents for r/. https://
github.com/rstudio/rmarkdown <https://github.com/rstudio/rmarkdown>.
Bostock, Mike, Kerry Rodden, Kevin Warne, and Kent Russell. 2021. /
sunburstR: Sunburst ’Htmlwidget’/. https://github.com/timelyportfolio/
sunburstR <https://github.com/timelyportfolio/sunburstR>.
Bostock, Mike, Kent Russell, Gregor Aisch, and Adam Pearce. 2021. /D3r:
’D3.js’ Utilities for r/. https://github.com/timelyportfolio/d3r
<https://github.com/timelyportfolio/d3r>.
Cheng, Joe, and Carson Sievert. 2021. /Crosstalk: Inter-Widget
Interactivity for HTML Widgets/. https://CRAN.R-project.org/
package=crosstalk <https://cran.r-project.org/package=crosstalk>.
Cheng, Joe, Carson Sievert, Barret Schloerke, Winston Chang, Yihui Xie,
and Jeff Allen. 2021. /Htmltools: Tools for HTML/. https://CRAN.R-
project.org/package=htmltools <https://cran.r-project.org/
package=htmltools>.
Coene, John. 2022. /Echarts4r: Create Interactive Graphs with ’Echarts
JavaScript’ Version 5/. https://CRAN.R-project.org/package=echarts4r
<https://cran.r-project.org/package=echarts4r>.
Cuilla, Kyle. 2022. /Reactablefmtr: Streamlined Table Styling and
Formatting for Reactable/. https://CRAN.R-project.org/
package=reactablefmtr <https://cran.r-project.org/package=reactablefmtr>.
Dervieux, Christophe, JJ Allaire, Rich Iannone, Alison Presmanes Hill,
and Yihui Xie. 2022. /Distill: ’R Markdown’ Format for Scientific and
Technical Writing/. https://CRAN.R-project.org/package=distill <https://
cran.r-project.org/package=distill>.
Glur, Christoph. 2020. /Data.tree: General Purpose Hierarchical Data
Structure/. https://CRAN.R-project.org/package=data.tree <https://
cran.r-project.org/package=data.tree>.
Kunst, Joshua. 2022. /Highcharter: A Wrapper for the ’Highcharts’
Library/. https://CRAN.R-project.org/package=highcharter <https://
cran.r-project.org/package=highcharter>.
Lin, Greg. 2022. /Reactable: Interactive Data Tables Based on ’React
Table’/. https://CRAN.R-project.org/package=reactable <https://cran.r-
project.org/package=reactable>.
Neuwirth, Erich. 2022. /RColorBrewer: ColorBrewer Palettes/. https://
CRAN.R-project.org/package=RColorBrewer <https://cran.r-project.org/
package=RColorBrewer>.
Perrier, Victor, and Fanny Meyer. 2022. /Apexcharter: Create Interactive
Chart with the JavaScript ’ApexCharts’ Library/. https://CRAN.R-
project.org/package=apexcharter <https://cran.r-project.org/
package=apexcharter>.
R Core Team. 2022. /R: A Language and Environment for Statistical
Computing/. Vienna, Austria: R Foundation for Statistical Computing.
https://www.R-project.org/ <https://www.r-project.org/>.
Ranzolin, David. 2022. /compareBars: Simplify Comparative Bar Charts
with D3.js/.
Rodríguez-Sánchez, Francisco, Connor P. Jackson, and Shaurita D.
Hutchins. 2022. /Grateful: Facilitate Citation of r Packages/. https://
github.com/Pakillo/grateful <https://github.com/Pakillo/grateful>.
Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy
D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019.
“Welcome to the tidyverse.” /Journal of Open Source Software/ 4 (43):
1686. https://doi.org/10.21105/joss.01686 <https://doi.org/10.21105/
joss.01686>.
Wickham, Hadley, Winston Chang, Robert Flight, Kirill Müller, and Jim
Hester. 2021. /Sessioninfo: R Session Information/. https://CRAN.R-
project.org/package=sessioninfo <https://cran.r-project.org/
package=sessioninfo>.
Wickham, Hadley, and Dana Seidel. 2022. /Scales: Scale Functions for
Visualization/. https://CRAN.R-project.org/package=scales <https://
cran.r-project.org/package=scales>.
Xiao, Nan. 2018. /Ggsci: Scientific Journal and Sci-Fi Themed Color
Palettes for ’Ggplot2’/. https://CRAN.R-project.org/package=ggsci
<https://cran.r-project.org/package=ggsci>.
Xie, Yihui. 2014. “Knitr: A Comprehensive Tool for Reproducible Research
in R.” In /Implementing Reproducible Computational Research/, edited by
Victoria Stodden, Friedrich Leisch, and Roger D. Peng. Chapman; Hall/
CRC. http://www.crcpress.com/product/isbn/9781466561595 <http://
www.crcpress.com/product/isbn/9781466561595>.
———. 2015. /Dynamic Documents with R and Knitr/. 2nd ed. Boca Raton,
Florida: Chapman; Hall/CRC. https://yihui.org/knitr/ <https://yihui.org/
knitr/>.
———. 2022. /Knitr: A General-Purpose Package for Dynamic Report
Generation in r/. https://yihui.org/knitr/ <https://yihui.org/knitr/>.
Xie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. /R Markdown: The
Definitive Guide/. Boca Raton, Florida: Chapman; Hall/CRC. https://
bookdown.org/yihui/rmarkdown <https://bookdown.org/yihui/rmarkdown>.
Xie, Yihui, Christophe Dervieux, and Emily Riederer. 2020. /R Markdown
Cookbook/. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/
yihui/rmarkdown-cookbook <https://bookdown.org/yihui/rmarkdown-cookbook>.


      Corrections

If you see mistakes or want to suggest changes, please create an issue
<https://github.com/andrewallenbruce/issues/new> on the source repository.


      Reuse

Text and figures are licensed under Creative Commons Attribution CC BY
4.0 <https://creativecommons.org/licenses/by/4.0/>. Source code is
available at https://github.com/andrewallenbruce <https://github.com/
andrewallenbruce>, unless otherwise noted. The figures that have been
reused from other sources don't fall under this license and can be
recognized by a note in their caption: "Figure from ...".


      Citation

For attribution, please cite this work as

Bruce (2022, March 27). Andrew Bruce: R Cookbook: Healthcare Revenue Cycle. Retrieved from https://andrewbruce.netlify.app/posts/r-cookbook-healthcare-rcm///

BibTeX citation

@misc{bruce2022r,
  author = {Bruce, Andrew},
  title = {Andrew Bruce: R Cookbook: Healthcare Revenue Cycle},
  url = {https://andrewbruce.netlify.app/posts/r-cookbook-healthcare-rcm/},
  year = {2022}
}//

Andrew A. Bruce - 2024 - made with , and {distill} <https://
rstudio.github.io/distill/>

